{"version":3,"sources":["reportWebVitals.ts","../../topology-dsl-core/src/dsl/core-dsl/resource-base.js","../../topology-dsl-core/src/dsl/core-dsl/base-icons-map.js","../../topology-dsl-core/src/dsl/core-dsl/util.js","preview/diagram/visitor/uid-flow-visitor.js","preview/diagram/visitor/util.js","preview/diagram/visitor/elk-diagram-generator.js","preview/diagram/visitor/elk-dimension-visitor.js","preview/diagram/elk/elk-layout-factory.js","preview/diagram/elk/x6-elk-renderer.js","sample.js","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","idGenFn","prefix","index","NODEIDGENFN","ResourceElt","elts","kind","tagName","provider","this","idGenIt","title","id","next","value","compound","direction","_start","_finish","data","name","r","resolveElt","push","toString","isTerminal","val","elt","result","undefined","call","err","console","error","message","Array","isArray","map","el","toElt","filter","visitor","filterFn","visit","length","splice","tmp","split","join","key","CompositeResourceElt","initElts","e","forEach","WORKFLOW_PROVIDER","Map","className","iconURL","jsonToDslObject","o","start","Object","setPrototypeOf","prototype","v","SEQUENCE","OPTIONAL","REPEAT","START","FINISH","PORT","EDGE","FANOUT_FANIN","FANIN","FANOUT","DslToELKGenerator","edgeCntIt","tree","layoutOptions","children","_tree","FanOutFanInEltDslToELKGenerator","instance","visitGroup","FanInEltDslToELKGenerator","FanOutEltDslToELKGenerator","GroupEltDslToELKGenerator","OptionalEltDslToELKGenerator","visitOptional","SequenceEltDslToELKGenerator","visitSequence","RepeatEltDslToELKGenerator","visitRepeat","TerminalFlowEltDslToELKGenerator","visitTerminal","n","label","model","labels","text","properties","getPortModel","style","startArrow","endArrow","parent","getNodeModel","graph","ports","edges","finish","type","buildEdges","buildNodes","self","arr","a","ctree","accept","foundElt","getStart","getFinish","toArray","_sources_","_targets_","sources","targets","getEdgeModel","t","s","link","getSynthPortModel","links","buildLinks","i","ELKDimensionVisitor","nodeWidth","nodeHeight","iconWidth","portSize","labelHeight","_nodeWidth","_nodeHeight","_iconWidth","_portSize","_labelHeight","root","stack","width","height","x","y","len","w","Math","floor","nl","h","p","l","elkLayout","elkDimensionVisitor","elk","ELK","options","UNIT","layoutFn","inelkgraph","Promise","resolve","elkgraph","knownLayoutOptions","d","layout","logging","measureExecutionTime","elkLayoutRelative","elkNode","ax","ay","source","target","sections","junctionPoints","j","startPoint","endPoint","bendPoints","b","c","toAbsoluteElkLayoutIt","toAbsoluteElkLayout","newSize","arguments","nodeSize","newOptions","LINE","Graph","registerRouter","vertices","args","view","Point","create","EMPTY_ARRAY","RESOURCE_HTML","render","node","getData","wrap","document","createElement","display","iconPath","encodeURI","img","src","appendChild","textdiv","padding","margin","innerHTML","product","shouldComponentUpdate","hasChanged","toX6LayoutRec","elkLayoutNode","x6Layout","nodes","createX6Node","createX6Edge","attrs","body","class","fo","clazz","PORT_RADIUS","items","group","groups","abs","position","zIndex","circle","magnet","fontSize","fill","shape","rx","ry","html","createX6Label","strokeWidth","opacity","line","sourceMarker","size","targetMarker","regex1","regex2","match","cell","replace","port","bp","contentPane","getElementById","selectElt","minimapContainer","setAttribute","renderer","_container_","_minimap_","_width_","_height_","_iconWidth_","containerElt","x6Graph","scrollWidth","scrollHeight","container","grid","background","color","interacting","async","frozen","sorting","scroller","enabled","pannable","pageVisible","pageBreak","panning","modifiers","mousewheel","connecting","allowBlank","allowLoop","highlight","anchor","connector","connectionPoint","router","minimap","minScale","maxScale","on","isNode","addTools","useCellGeometry","stroke","strokeDasharray","fillOpacity","removeTools","createX6Graph","toElkLayout","lookup","set","buildNodeLookup","refreshLayoutFn","_elkgraph_","Date","getTime","fromJSON","unfreeze","progress","done","time","log","batchSize","zoomToFit","catch","get","collapsed","_children","_edges","diagram","listener","messageCallbackFn","event","jsonrpc","method","params","values","firstChild","remove","opt","add","removeEventListener","current","keys","Error","addEventListener","selected","dispatchEvent","Event","updateSelection","window","origin","location","resize","documentElement","clientWidth","clientHeight","offsetHeight","centerContent"],"mappings":"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","file":"static/js/main.5784d909.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/**\r\n * idGenFn function.\r\n */\r\nfunction* idGenFn(prefix, index) {\r\n  while (index >= 0) {\r\n    let reset = yield index++;\r\n    if (reset) {\r\n      index = 0;\r\n    }\r\n  }\r\n}\r\n\r\nexport const NODEIDGENFN = idGenFn('node.', 0);\r\n\r\n/**\r\n * Class ResourceElt.\r\n */\r\nexport class ResourceElt {\r\n  /**\r\n   * Create a ResourceElt.\r\n   * @param {object} elts - The elts value.\r\n   * @param {string} kind - The kind value.\r\n   * @param {string} tagName - The tagName value.\r\n   * @param {string} provider - The resource provider value.\r\n   */\r\n  constructor(elts, kind, tagName, provider) {\r\n    // Nex Id Generator\r\n    this.idGenIt = NODEIDGENFN;\r\n    this.title = 'title';\r\n\r\n    //get new id\r\n    this.kind = kind || 'resource';\r\n    this.tagName = tagName || 'resource';\r\n    this.id = this.tagName + '.' + this.idGenIt.next().value;\r\n    this.provider = provider;\r\n    this.compound = false;\r\n\r\n    // Layout direction\r\n    this.direction = null;\r\n\r\n    this._start = null;\r\n    this._finish = null;\r\n\r\n    this.data = {};\r\n    this.name = this.id;\r\n    this.title = this.id;\r\n\r\n    this.elts = [];\r\n\r\n    let r = this.resolveElt(elts);\r\n    if (r !== null) {\r\n      // only one elt can be added\r\n      this.elts.push(r);\r\n      this.title = r.toString();\r\n    }\r\n\r\n  }\r\n\r\n  _up_() {\r\n    this.direction = 'UP';\r\n    return this;\r\n  }\r\n\r\n  _down_() {\r\n    this.direction = 'DOWN';\r\n    return this;\r\n  }\r\n\r\n  _left_() {\r\n    this.direction = 'LEFT';\r\n    return this;\r\n  }\r\n\r\n  _right_() {\r\n    this.direction = 'RIGHT';\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Calls a defined callback function on each element of an array, and returns an array that contains the results.\r\n   * @param {(value: T, index: number, array: T[]) => U} callbackFn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\r\n   * @param {Object} thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\r\n   * @returns {U[]}\r\n   */\r\n\r\n\r\n  get start() {\r\n    if (this._start == null) {\r\n      this._start = {\r\n        kind: this.kind,\r\n        tagName: this.tagName,\r\n        id: this.id + '.start',\r\n        provider: this.provider,\r\n        compound: this.compound,\r\n        isTerminal: () => true,\r\n        elts: []\r\n      };\r\n    }\r\n\r\n    return this._start;\r\n  }\r\n\r\n  set start(val) {\r\n    this._start = val;\r\n  }\r\n\r\n  get finish() {\r\n    if (this._finish == null) {\r\n      this._finish = {\r\n        kind: this.kind,\r\n        tagName: this.tagName,\r\n        id: this.id + '.finish',\r\n        provider: this.provider,\r\n        compound: this.compound,\r\n        isTerminal: () => true,\r\n        elts: []\r\n      };\r\n    }\r\n    return this._finish;\r\n\r\n  }\r\n\r\n  set finish(val) {\r\n    this._finish = val;\r\n  }\r\n\r\n  isTerminal() {\r\n    return true;\r\n  }\r\n\r\n  isGroup() {\r\n    return (this.kind === 'group');\r\n  }\r\n\r\n  resolveElt(elt) {\r\n    // Only accept primitive types as Terminal Element \r\n    let result = null;\r\n    if (elt !== undefined) {\r\n      try {\r\n        if (typeof elt === 'function') {\r\n          result = elt.call();\r\n        } \r\n\r\n        if (typeof result === 'object' && elt instanceof ResourceElt) {\r\n          // Allow complex element as terminal\r\n          result = elt;\r\n\r\n        } else {\r\n          // primitive\r\n          result = elt.toString();\r\n        }\r\n\r\n      } catch (err) {\r\n        console.error(err.message + ' - ' + err);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  toElt(elt) {\r\n    let result = null;\r\n    if (elt !== undefined && elt !== null) {\r\n      result = elt;\r\n      if (result instanceof ResourceElt) {\r\n        return result;\r\n      } else {\r\n        try {\r\n          if (typeof elt === 'function') {\r\n            result = elt.call();\r\n          } \r\n\r\n          if (result instanceof ResourceElt) {\r\n            return result;\r\n          } else if (typeof result === 'object') {\r\n            // Allow complex element as terminal\r\n            if (Array.isArray(elt)) {\r\n              result = elt.map(\r\n                (el) => { return this.toElt(el); }, this\r\n              ).filter((el) => { return el != null; }, this);\r\n\r\n            } else {\r\n              result = this.toElt(elt);\r\n            }\r\n\r\n          } else {\r\n            // very likely a primitive type\r\n            result = new ResourceElt(elt, 'resource', 'resource', this.provider);\r\n          }\r\n\r\n        } catch (err) {\r\n          console.error(err.message + ' - ' + err);\r\n        }\r\n      }\r\n    }\r\n    // default to object\r\n    return result;\r\n  }\r\n\r\n  foundElt(elt) {\r\n    return this.id === elt.id;\r\n  }\r\n\r\n  accept(visitor, filterFn) {\r\n    return visitor.visit(this, filterFn);\r\n  }\r\n\r\n  _add_(elt) {\r\n    let r = this.resolveElt(elt);\r\n    if (r !== null) {\r\n      // only one elt can be added\r\n      if (this.elts.length > 0) {\r\n        this.elts.splice(0, this.elts.length);\r\n      }\r\n      this.elts.push(r);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  _tagName_(value) {\r\n    if (value) {\r\n      this.tagName = value;\r\n      // Replace prefix with tagName\r\n      let tmp = this.id.split('\\.');\r\n      tmp[0] = this.tagName;\r\n      this.id = tmp.join('.');\r\n    }\r\n    return this;\r\n  }\r\n\r\n  _title_(value) {\r\n    this.title = value;\r\n    return this;\r\n  }\r\n\r\n  _name_(value) {\r\n    this.name = value;\r\n    return this;\r\n  }\r\n\r\n  _id_(value) {\r\n    this.id = value;\r\n    return this;\r\n  }\r\n\r\n  _set_(key, value) {\r\n    this.data[key] = value;\r\n    return this;\r\n  }\r\n\r\n  _get_(key) {\r\n    return this.data[key];\r\n  }\r\n\r\n  // Inbound bindings\r\n  _in_(...elts) {\r\n    return this;\r\n  }\r\n\r\n  // Outbound bindings\r\n  _out_(...elts) {\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * Class CompositeResourceElt.\r\n * @extends ResourceElt\r\n */\r\nexport class CompositeResourceElt extends ResourceElt {\r\n  /**\r\n   * Create a CompositeResourceElt.\r\n   * @param {object} elts - The elts value.\r\n   * @param {string} kind - The kind value.\r\n   * @param {string} tagName - The tagName value.\r\n   * @param {string} provider - The resource provider value.\r\n   */\r\n  constructor(elts, kind, tagName, provider) {\r\n    super(elts, kind, tagName, provider);\r\n    this.elts = [];\r\n    this.title = null;\r\n    this._start = null;\r\n    this._finish = null;\r\n    //this.start = new ResourceElt('start', 'resource', 'mark', provider);\r\n    //this.finish = new ResourceElt('finish', 'resource', 'mark', provider);\r\n    this.compound = true;\r\n\r\n    this.elts = this.initElts(elts);\r\n\r\n    if (this.title === null) {\r\n      this.title = '' + this.id;\r\n    }\r\n  }\r\n\r\n  initElts(elts) {\r\n    let result = [];\r\n    if (Array.isArray(elts)) {\r\n      result = elts.map(\r\n        (elt) => { return this.resolveElt(elt); }, this\r\n      ).filter(e => { return e != null; }, this);\r\n\r\n    } else {\r\n      let r = this.resolveElt(elts);\r\n      if (r != null) {\r\n        result.push(r);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  isTerminal() {\r\n    return false;\r\n  }\r\n\r\n  resolveElt(elt) {\r\n    return this.toElt(elt);\r\n  }\r\n\r\n  foundElt(elt) {\r\n    return this.elts.filter(e => e.id === elt.id).length > 0;\r\n  }\r\n\r\n  _add_(...elts) {\r\n    if (Array.isArray(elts)) {\r\n      elts.forEach((e) => {\r\n        let r = this.resolveElt(e);\r\n        if (r != null) {\r\n          this.elts.push(r);\r\n        }\r\n      }, this);\r\n\r\n    } else {\r\n      let r = this.resolveElt(elts);\r\n      if (r != null) {\r\n        this.elts.push(r);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n}\r\n","export const WORKFLOW_KIND = 'workflow';\r\nexport const WORKFLOW_PROVIDER = 'default';\r\n\r\nexport const BASE_ICONS_MAP = new Map([\r\n  ['fanOut_fanIn', { className: 'fanOut_fanIn', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanOut_fanIn-diagram-3-fill.svg' }],\r\n  ['choice', { className: 'choice', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanOut_fanIn-diagram-3-fill.svg' }],\r\n  ['fanIn', { className: 'fanIn', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanIn-diagram-3-fill.svg' }],\r\n  ['merge', { className: 'merge', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanIn-diagram-3-fill.svg' }],\r\n  ['fanOut', { className: 'fanOut', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanOut-diagram-3-fill.svg' }],\r\n  ['branch', { className: 'branch', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanOut-diagram-3-fill.svg' }],\r\n  ['split', { className: 'split', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanOut-diagram-3-fill.svg' }],\r\n  ['tree', { className: 'tree', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanOut-diagram-3-fill.svg' }],\r\n  ['link', { className: 'link', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanOut-diagram-3-fill.svg' }],\r\n  ['use', { className: 'use', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanOut-diagram-3-fill.svg' }],\r\n  ['parallel', { className: 'parallel', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanOut-diagram-3-fill.svg' }],\r\n  ['optional', { className: 'optional', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/optional-question-square-fill.svg' }],\r\n  ['repeat', { className: 'repeat', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/repeat-bootstrap-reboot.svg' }],\r\n  ['sequence', { className: 'sequence', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/sequence-diagram-3-fill.svg' }],\r\n  ['resource', null],\r\n  ['state', null],\r\n  ['zeroOrMore', { className: 'zeroOrMore', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/repeat-bootstrap-reboot.svg' }],\r\n  ['oneOrMore', { className: 'oneOrMore', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/repeat-bootstrap-reboot.svg' }],\r\n  ['group', { className: 'group', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/group-grid-fill.svg' }]\r\n]\r\n);","import {\r\n  ResourceElt,\r\n  CompositeResourceElt\r\n} from './resource-base.js';\r\n\r\nexport function isContainer(n) {\r\n  return (n.children && n.children != null && n.children.length > 0) ||\r\n    (n && n.model && n.model.compound === true);\r\n}\r\n\r\nexport function clone_bak(obj) {\r\n  let copy = Object.create(Object.getPrototypeOf(obj), Object.getOwnPropertyDescriptors(obj));\r\n  return copy;\r\n}\r\n\r\n// Reset ids\r\nexport function resetIds(obj, idx) {\r\n  if (obj.id) {\r\n    // Append a suffix\r\n    obj.id = obj.id + '_' + idx;\r\n\r\n    if (obj._start !== null) {\r\n      obj._start.id = obj._start.id + '_' + idx;\r\n    }\r\n    if (obj._finish !== null) {\r\n      obj._finish.id = obj._finish.id + '_' + idx;\r\n    }\r\n  }\r\n  return obj;\r\n}\r\n\r\n// Clone and reset ids\r\nexport function clone(obj, idx) {\r\n  if (obj === undefined || obj === null) {\r\n    return obj;\r\n  }\r\n  let copy = Object.create(Object.getPrototypeOf(obj), Object.getOwnPropertyDescriptors(obj));\r\n  // Deep copy\r\n  if (copy.compound) {\r\n    if (Array.isArray(copy.elts)) {\r\n      copy.elts = copy.elts.map((elt) => {\r\n        return clone(elt, idx);\r\n      });\r\n    }\r\n  }\r\n\r\n  if (copy._start !== null) {\r\n    copy._start = clone(copy._start, idx);\r\n  }\r\n  if (copy._finish !== null) {\r\n    copy._finish = clone(copy._finish, idx);\r\n  }\r\n\r\n  return resetIds(copy, idx);\r\n}\r\n\r\n// This is an assign function that copies full descriptors\r\nexport function completeAssign(target, ...sources) {\r\n  sources.forEach(source => {\r\n    let descriptors = Object.keys(source).reduce((descriptors, key) => {\r\n      descriptors[key] = Object.getOwnPropertyDescriptor(source, key);\r\n      return descriptors;\r\n    }, {});\r\n\r\n    // By default, Object.assign copies enumerable Symbols, too\r\n    Object.getOwnPropertySymbols(source).forEach(sym => {\r\n      let descriptor = Object.getOwnPropertyDescriptor(source, sym);\r\n      if (descriptor.enumerable) {\r\n        descriptors[sym] = descriptor;\r\n      }\r\n    });\r\n    Object.defineProperties(target, descriptors);\r\n  });\r\n  return target;\r\n}\r\n//*/\r\n\r\nexport function jsonToDslObject(o) {\r\n  let result = o;\r\n  if (o.start === undefined) {\r\n    if (o.compound) {\r\n      Object.setPrototypeOf(o, CompositeResourceElt.prototype);\r\n    } else {\r\n      Object.setPrototypeOf(o, ResourceElt.prototype);\r\n    }\r\n    if (Array.isArray(result.elts)) {\r\n      // Recursively enrich elts\r\n      result.elts = result.elts.map((v) => {\r\n        return jsonToDslObject(v);\r\n      });\r\n    }\r\n  }\r\n  return result;\r\n}\r\n","import {\r\n  jsonToDslObject\r\n} from '@imaguiraga/topology-dsl-core';\r\n/**\r\n * Class FlowUIDVisitor.\r\n */\r\nexport class FlowUIDVisitor {\r\n  /**\r\n   * Create a FlowUIDVisitor.\r\n   * @param {string} prefix - The UID prefix.\r\n   */\r\n  constructor(prefix) {\r\n    this._prefix = prefix || 'UID';\r\n  }\r\n\r\n  visit(_tree, filterFn) {\r\n    if (typeof _tree === 'undefined' || _tree === null) {\r\n      return null;\r\n    }\r\n    let tree = _tree;\r\n\r\n    // Add start finish properties if missing\r\n    tree = jsonToDslObject(tree);\r\n    return tree; // Skip UID rename\r\n  }\r\n\r\n  _visit_(_tree, filterFn) {\r\n    if (typeof _tree === 'undefined' || _tree === null) {\r\n      return null;\r\n    }\r\n    let tree = _tree;\r\n\r\n    // Add start finish properties if missing\r\n    tree = jsonToDslObject(tree);\r\n\r\n    // Non terminal nodes have start and finish\r\n    if (!tree.isTerminal()) {\r\n      tree.start.id = this._prefix + '_' + tree.subType + '_start';\r\n      tree.finish.id = this._prefix + '_' + tree.subType + '_finish';\r\n    }\r\n\r\n    tree.elts.filter(elt => elt instanceof Object).forEach(\r\n      (elt, index) => {\r\n        // keep only terminal nodes\r\n        let p = this._prefix.concat('_' + index);\r\n        elt.id = p + '_' + elt.subType;\r\n        elt.accept(new FlowUIDVisitor(p), null);\r\n      });\r\n    return tree;\r\n  }\r\n\r\n}\r\n","\r\n/**\r\n * Class FlowToELKVisitor.\r\n */\r\nexport function* idGenFn(prefix, index) {\r\n  while (index >= 0) {\r\n    yield prefix + index;\r\n    index++;\r\n  }\r\n}\r\n\r\nexport function isIconFn(n) {\r\n  return (n && n.model && n.model.tagName === 'mark');\r\n}\r\n\r\nexport function isDefaultResourceFn(n) {\r\n  return (n && n.model && n.model.tagName === 'resource');\r\n}\r\n\r\n// Reset ids\r\nexport function resetIds(obj, idx) {\r\n  if (obj.id) {\r\n    // Append a suffix\r\n    obj.id = obj.id + '_' + idx;\r\n\r\n    if (obj._start !== null) {\r\n      obj._start.id = obj._start.id + '_' + idx;\r\n    }\r\n    if (obj._finish !== null) {\r\n      obj._finish.id = obj._finish.id + '_' + idx;\r\n    }\r\n  }\r\n  return obj;\r\n}\r\n\r\n// Clone and reset ids\r\nexport function clone(obj, idx) {\r\n  if (obj === undefined || obj === null) {\r\n    return obj;\r\n  }\r\n  let copy = Object.create(Object.getPrototypeOf(obj), Object.getOwnPropertyDescriptors(obj));\r\n  // Deep copy\r\n  if (copy.compound) {\r\n    if (Array.isArray(copy.elts)) {\r\n      copy.elts = copy.elts.map((elt) => {\r\n        return clone(elt, idx);\r\n      });\r\n    }\r\n  }\r\n\r\n  if (copy._start !== null) {\r\n    copy._start = clone(copy._start, idx);\r\n  }\r\n  if (copy._finish !== null) {\r\n    copy._finish = clone(copy._finish, idx);\r\n  }\r\n\r\n  return resetIds(copy, idx);\r\n}","import {\r\n  idGenFn\r\n} from './util.js';\r\n\r\nimport {\r\n  jsonToDslObject\r\n} from '@imaguiraga/topology-dsl-core';\r\n\r\nconst SEQUENCE = 'sequence';\r\nconst OPTIONAL = 'optional';\r\nconst REPEAT = 'repeat';\r\nconst START = 'start';\r\nconst FINISH = 'finish';\r\nconst PORT = 'port';\r\nconst EDGE = 'edge';\r\n\r\nconst FANOUT_FANIN = 'fanOut_fanIn';\r\nconst FANIN = 'fanIn';\r\nconst FANOUT = 'fanOut';\r\nconst GROUP = 'group';\r\nconst RESOURCE = 'resource';\r\nexport class DslToELKGenerator {\r\n  constructor() {\r\n    this.edgeCntIt = idGenFn(`${EDGE}.`, 0);\r\n  }\r\n\r\n  toElkGraph(tree, filterFn) {\r\n    return {\r\n      id: '$root',\r\n      layoutOptions: {\r\n        'algorithm': 'layered',\r\n        'elk.hierarchyHandling': 'SEPARATE_CHILDREN',\r\n      },\r\n      children: [\r\n        this.visit(tree, filterFn)\r\n      ]\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Convert a dsl tree to ELK Graph.\r\n   * @param {object} tree - The dsl tree.\r\n   * @param {function} filterFn - The dsl filterFn function.\r\n   * @return {object} ELK graph.\r\n   */\r\n  visit(_tree, filterFn) {\r\n    if (_tree === undefined || _tree === null) {\r\n      return null;\r\n    }\r\n    let tree = _tree;\r\n    // Add start finish properties if missing\r\n    tree = jsonToDslObject(tree);\r\n\r\n    let result = null;\r\n    if (tree === undefined || tree === null) {\r\n      return result;\r\n    }\r\n    if (tree.compound) {\r\n      switch (tree.kind) {\r\n        case FANOUT_FANIN:\r\n          result = FanOutFanInEltDslToELKGenerator.instance.visitGroup(this, tree, filterFn, tree.kind);\r\n          break;\r\n        case FANIN:\r\n          result = FanInEltDslToELKGenerator.instance.visitGroup(this, tree, filterFn, tree.kind);\r\n          break;\r\n        case FANOUT:\r\n          result = FanOutEltDslToELKGenerator.instance.visitGroup(this, tree, filterFn, tree.kind);\r\n          break;\r\n        case GROUP:\r\n          result = GroupEltDslToELKGenerator.instance.visitGroup(this, tree, filterFn, tree.kind);\r\n          break;\r\n        case OPTIONAL:\r\n          result = OptionalEltDslToELKGenerator.instance.visitOptional(this, tree, filterFn);\r\n          break;\r\n        case SEQUENCE:\r\n          result = SequenceEltDslToELKGenerator.instance.visitSequence(this, tree, filterFn);\r\n          break;\r\n        case REPEAT:\r\n          result = RepeatEltDslToELKGenerator.instance.visitRepeat(this, tree, filterFn);\r\n          break;\r\n        case RESOURCE:\r\n          result = TerminalFlowEltDslToELKGenerator.instance.visitTerminal(this, tree, filterFn);\r\n          break;\r\n        default:\r\n          console.error('==> WARNING: ' + tree.kind + ' type was not found');\r\n          break;\r\n      }\r\n\r\n    } else {\r\n      result = TerminalFlowEltDslToELKGenerator.instance.visitTerminal(this, tree, filterFn);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  getNodeModel(n) {\r\n    let r = {\r\n      id: n.id,\r\n      label: n.title,\r\n      model: {\r\n        kind: n.kind,\r\n        title: n.title,\r\n        direction: n.direction,\r\n        tagName: n.tagName,\r\n        id: n.id,\r\n        provider: n.provider,\r\n        compound: n.compound,\r\n        data: n.data\r\n      },\r\n      // use label for container elt\r\n      labels: n.isTerminal() ? [] : [\r\n        {\r\n          text: n.title || n.id,\r\n          properties: {\r\n            // 'nodeLabels.placement': '[V_TOP, H_LEFT, OUTSIDE]',\r\n            'nodeLabels.placement': '[V_TOP, H_LEFT, INSIDE]',\r\n          }\r\n        }\r\n      ]\r\n    };\r\n    // Layout direction\r\n    if (n.direction !== null) {\r\n      r.layoutOptions = {\r\n        'org.eclipse.elk.direction': n.direction\r\n      };\r\n    }\r\n    return r;\r\n  }\r\n\r\n  getPortModel(n) {\r\n    let r = {\r\n      id: n.id,\r\n      label: n.id,\r\n      model: {\r\n        kind: PORT,\r\n        tagName: PORT,\r\n        compound: false,\r\n        provider: 'custom',\r\n        id: n.id,\r\n        data: n.data\r\n      },\r\n      // use label for container elt\r\n      labels: n.isTerminal() ? [] : [\r\n        {\r\n          text: n.title || n.id\r\n        }\r\n      ]\r\n    };\r\n    return r;\r\n  }\r\n\r\n  getSynthPortModel(n, tagName = PORT) {\r\n    let r = this.getPortModel(n);\r\n    r.model.tagName = tagName;\r\n    r.id = r.id + `.${PORT}`;\r\n    r.model.id = r.id;\r\n    r.model.compound = false;\r\n    return r;\r\n  }\r\n\r\n  getEdgeModel(n) {\r\n    let r = {\r\n      model: {\r\n        provider: n.provider,\r\n        tagName: EDGE,\r\n        kind: EDGE\r\n      },\r\n      style: {\r\n        startArrow: false,\r\n        endArrow: true,\r\n      }\r\n    };\r\n    return r;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Class TerminalFlowEltDslToELKGenerator.\r\n */\r\nclass TerminalFlowEltDslToELKGenerator {\r\n  static instance = new TerminalFlowEltDslToELKGenerator();\r\n\r\n  /**\r\n   * Convert a dsl tree to ctree Graph graph.\r\n   * @param {object} visitor - The dsl tree visitor.\r\n   * @param {object} tree - The dsl tree.\r\n   * @param {function} filterFn - The dsl filterFn function.\r\n   * @return {object} ctree Graph graph.\r\n   */\r\n  visitTerminal(visitor, tree, filterFn) {\r\n    const parent = visitor.getNodeModel(tree);\r\n    const graph = {\r\n      ...parent,\r\n      ports: [],\r\n      children: [],\r\n      edges: []\r\n    };\r\n    // start + finish nodes\r\n    graph.ports.push(visitor.getPortModel(tree.start));\r\n    graph.ports.push(visitor.getPortModel(tree.finish));\r\n\r\n    // Check if the only element is not a string \r\n    if (typeof tree.elts[0] === 'object') {\r\n      let n = visitor.getNodeModel(tree);\r\n      n.parent = parent;\r\n      if (filterFn) {\r\n        if (!filterFn(n)) {\r\n          graph.children.push(n);\r\n        }\r\n      } else {\r\n        graph.children.push(n);\r\n      }\r\n    }\r\n    return graph;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Class GroupEltDslToELKGenerator.\r\n */\r\nclass GroupEltDslToELKGenerator {\r\n  static instance = new GroupEltDslToELKGenerator();\r\n  /**\r\n   * Convert a dsl tree to ctree Graph graph.\r\n   * @param {object} visitor - The dsl tree visitor.\r\n   * @param {object} tree - The dsl tree.\r\n   * @param {function} filterFn - The dsl filterFn function.\r\n   * @return {object} ctree Graph graph.\r\n   */\r\n  visitGroup(visitor, tree, filterFn, type) {\r\n    //const type = 'choice' | 'parallel';\r\n    const parent = visitor.getNodeModel(tree);\r\n    const graph = {\r\n      ...parent,\r\n      ports: [],\r\n      children: [],\r\n      edges: []\r\n    };\r\n    //\r\n    if (tree.kind !== type) {\r\n      return graph;\r\n    }\r\n    // start + finish nodes\r\n    graph.ports.push(visitor.getPortModel(tree.start));\r\n    graph.ports.push(visitor.getPortModel(tree.finish));\r\n\r\n    this.buildEdges(tree, graph, visitor, type);\r\n\r\n    // concatenate graphs\r\n    // nodes\r\n    const self = this;\r\n    this.buildNodes(tree.elts, tree, graph, visitor, parent, filterFn);\r\n\r\n    return graph;\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  buildEdges(tree, graph, visitor, type) {\r\n    //NOOP\r\n  }\r\n\r\n  buildNodes(elts, tree, graph, visitor, parent, filterFn) {\r\n    const self = this;\r\n    elts.forEach(elt => {\r\n      let arr = [];\r\n      if (Array.isArray(elt)) {\r\n        arr = elt;\r\n      } else {\r\n        arr.push(elt);\r\n      }\r\n\r\n      arr.forEach((a) => {\r\n        if (Array.isArray(a)) {\r\n          this.buildNodes(a, tree, graph, visitor, parent, filterFn);\r\n        } else {\r\n          let ctree = a.accept === undefined ? a : a.accept(visitor, n => tree.foundElt(n));\r\n          if (ctree !== null) {\r\n            ctree.parent = parent;\r\n            if (filterFn) {\r\n              if (!filterFn(ctree)) {\r\n                graph.children.push(ctree);\r\n              }\r\n            } else {\r\n              graph.children.push(ctree);\r\n            }\r\n          }\r\n        }\r\n\r\n      }, self);\r\n\r\n    }, self);\r\n  }\r\n\r\n  getStart(elts) {\r\n    let result = [];\r\n    if (Array.isArray(elts)) {\r\n      result = elts.map((elt) => {\r\n        if (Array.isArray(elt)) {\r\n          return this.getStart(elt);\r\n        } else {\r\n          return elt.start.id;\r\n        }\r\n      }, this);\r\n    } else {\r\n      result = [elts.start.id];\r\n    }\r\n    return result;\r\n  }\r\n\r\n  getFinish(elts) {\r\n    let result = [];\r\n    if (Array.isArray(elts)) {\r\n      result = elts.map((elt) => {\r\n        if (Array.isArray(elt)) {\r\n          return this.getFinish(elt);\r\n        } else {\r\n          return elt.finish.id;\r\n        }\r\n      }, this);\r\n\r\n    } else {\r\n      result = [elts.finish.id];\r\n    }\r\n    return result;\r\n  }\r\n\r\n  toArray(elts) {\r\n    let result = [];\r\n    if (Array.isArray(elts)) {\r\n      elts.forEach((elt) => {\r\n        result.push(...this.toArray(elt));\r\n      })\r\n\r\n    } else {\r\n      result.push(elts);\r\n    }\r\n    return result;\r\n\r\n  }\r\n\r\n  buildLinks(_sources_, _targets_, graph, tree, visitor) {\r\n    // Expand in case the element is an array\r\n    let sources = this.toArray(_sources_);\r\n    let targets = this.toArray(_targets_);\r\n\r\n    if (sources.length === 1 && targets.length === 1) {\r\n      graph.edges.push({\r\n        id: `${visitor.edgeCntIt.next().value}`,\r\n        sources: sources,\r\n        targets: targets,\r\n        ...visitor.getEdgeModel(tree),\r\n      });\r\n\r\n    } else if (sources.length === 1 && targets.length > 1) {\r\n      targets.forEach((t) => {\r\n        graph.edges.push({\r\n          id: `${visitor.edgeCntIt.next().value}`,\r\n          sources: sources,\r\n          targets: [t],\r\n          ...visitor.getEdgeModel(tree),\r\n        });\r\n      });\r\n\r\n    } else if (sources.length > 1 && targets.length === 1) {\r\n      sources.forEach((s) => {\r\n        graph.edges.push({\r\n          id: `${visitor.edgeCntIt.next().value}`,\r\n          sources: [s],\r\n          targets: targets,\r\n          ...visitor.getEdgeModel(tree),\r\n        });\r\n      });\r\n    } else if (sources.length > 1 && targets.length > 1) {\r\n\r\n      // n -> n => n -> 1 -> n\r\n      // add synthetic link clone\r\n      const link = visitor.getSynthPortModel(tree.start, START);\r\n      link.id = `${visitor.edgeCntIt.next().value}.link`;\r\n      // link.model.tagName = 'mark';\r\n      graph.children.push(link);\r\n      let links = [link.id];\r\n\r\n      this.buildLinks(sources, links, graph, tree, visitor);\r\n      this.buildLinks(links, targets, graph, tree, visitor);\r\n\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Class SequenceEltDslToELKGenerator.\r\n */\r\nclass SequenceEltDslToELKGenerator extends GroupEltDslToELKGenerator {\r\n  static instance = new SequenceEltDslToELKGenerator();\r\n  /**\r\n   * Convert a dsl tree to ctree Graph graph.\r\n   * @param {object} visitor - The dsl tree visitor.\r\n   * @param {object} tree - The dsl tree.\r\n   * @param {function} filterFn - The dsl filterFn function.\r\n   * @return {object} ctree Graph graph.\r\n   */\r\n  visitSequence(visitor, tree, filterFn) {\r\n    return this.visitGroup(visitor, tree, filterFn, SEQUENCE);\r\n  }\r\n\r\n  buildEdges(tree, graph, visitor, type) {\r\n    if (type !== SEQUENCE) {\r\n      return;\r\n    }\r\n\r\n    const start = visitor.getSynthPortModel(tree.start, START);\r\n    graph.children.push(start);\r\n    const finish = visitor.getSynthPortModel(tree.finish, FINISH);\r\n    graph.children.push(finish);\r\n\r\n    // edges\r\n\r\n    // start -> elts\r\n    let sources = [start.id];\r\n    let targets = this.getStart(tree.elts[0]);\r\n\r\n    this.buildLinks(sources, targets, graph, tree, visitor);\r\n\r\n    // elts -> elts\r\n    for (let i = 0; i < tree.elts.length - 1; i++) {\r\n      sources = this.getFinish(tree.elts[i]);\r\n      targets = this.getStart(tree.elts[i + 1]);\r\n\r\n      this.buildLinks(sources, targets, graph, tree, visitor);\r\n\r\n    }\r\n\r\n    // elts -> finish\r\n    sources = this.getFinish(tree.elts[tree.elts.length - 1]);\r\n    targets = [finish.id];\r\n\r\n    this.buildLinks(sources, targets, graph, tree, visitor);\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * Class FanOutEltDslToELKGenerator.\r\n */\r\nclass FanOutEltDslToELKGenerator extends GroupEltDslToELKGenerator {\r\n  static instance = new FanOutEltDslToELKGenerator();\r\n\r\n  buildEdges(tree, graph, visitor, type) {\r\n    if (type !== FANOUT) {\r\n      return;\r\n    }\r\n    const start = visitor.getSynthPortModel(tree.start, START);\r\n    graph.children.push(start);\r\n\r\n    //edges\r\n    (tree.elts || []).forEach((elt) => {\r\n      // start -> elts\r\n      let sources = [start.id];\r\n      let targets = this.getStart(elt);\r\n\r\n      this.buildLinks(sources, targets, graph, tree, visitor);\r\n\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Class FanInEltDslToELKGenerator.\r\n */\r\nclass FanInEltDslToELKGenerator extends GroupEltDslToELKGenerator {\r\n  static instance = new FanInEltDslToELKGenerator();\r\n\r\n  buildEdges(tree, graph, visitor, type) {\r\n    if (type !== FANIN) {\r\n      return;\r\n    }\r\n    const finish = visitor.getSynthPortModel(tree.finish, FINISH);\r\n    graph.children.push(finish);\r\n    // edges\r\n    (tree.elts || []).forEach((elt) => {\r\n      // elts -> finish\r\n      let sources = this.getFinish(elt);\r\n      let targets = [finish.id];\r\n\r\n      this.buildLinks(sources, targets, graph, tree, visitor);\r\n\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Class FanOutFanInEltDslToELKGenerator.\r\n */\r\nclass FanOutFanInEltDslToELKGenerator extends GroupEltDslToELKGenerator {\r\n  static instance = new FanOutFanInEltDslToELKGenerator();\r\n\r\n  buildEdges(tree, graph, visitor, type) {\r\n    if (type !== FANOUT_FANIN) {\r\n      return;\r\n    }\r\n    const start = visitor.getSynthPortModel(tree.start, START);\r\n    graph.children.push(start);\r\n    const finish = visitor.getSynthPortModel(tree.finish, FINISH);\r\n    graph.children.push(finish);\r\n    // edges\r\n    (tree.elts || []).forEach((elt) => {\r\n\r\n      // start -> elts\r\n      let sources = [start.id];\r\n      let targets = this.getStart(elt);\r\n\r\n      this.buildLinks(sources, targets, graph, tree, visitor);\r\n\r\n      // elts -> finish\r\n      sources = this.getFinish(elt);\r\n      targets = [finish.id];\r\n\r\n      this.buildLinks(sources, targets, graph, tree, visitor);\r\n\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Class OptionalEltDslToELKGenerator.\r\n */\r\nclass OptionalEltDslToELKGenerator extends GroupEltDslToELKGenerator {\r\n  static instance = new OptionalEltDslToELKGenerator();\r\n  /**\r\n   * Convert a dsl tree to ctree Graph graph.\r\n   * @param {object} visitor - The dsl tree visitor.\r\n   * @param {object} tree - The dsl tree.\r\n   * @param {function} filterFn - The dsl filterFn function.\r\n   * @return {object} ctree Graph graph.\r\n   */\r\n  visitOptional(visitor, tree, filterFn) {\r\n    return this.visitGroup(visitor, tree, filterFn, OPTIONAL);\r\n  }\r\n\r\n  buildEdges(tree, graph, visitor, type) {\r\n    if (type !== OPTIONAL) {\r\n      return;\r\n    }\r\n\r\n    const start = visitor.getSynthPortModel(tree.start, START);\r\n    graph.children.push(start);\r\n    const finish = visitor.getSynthPortModel(tree.finish, FINISH);\r\n    graph.children.push(finish);\r\n\r\n    if (tree.elts.length > 0) {\r\n      // start -> elts\r\n      let sources = [start.id];\r\n      let targets = this.getStart(tree.elts[0]);\r\n\r\n      this.buildLinks(sources, targets, graph, tree, visitor);\r\n\r\n      // start -> finish\r\n      sources = [start.id];\r\n      targets = [finish.id];\r\n\r\n      this.buildLinks(sources, targets, graph, tree, visitor);\r\n\r\n      // elts -> finish\r\n      sources = this.getFinish(tree.elts);\r\n      targets = [finish.id];\r\n\r\n      this.buildLinks(sources, targets, graph, tree, visitor);\r\n\r\n    }\r\n\r\n  }\r\n}\r\n\r\n/**\r\n * Class RepeatEltDslToELKGenerator.\r\n */\r\nclass RepeatEltDslToELKGenerator extends GroupEltDslToELKGenerator {\r\n  static instance = new RepeatEltDslToELKGenerator();\r\n\r\n  /**\r\n   * Convert a dsl tree to ctree Graph graph.\r\n   * @param {object} visitor - The dsl tree visitor.\r\n   * @param {object} tree - The dsl tree.\r\n   * @param {function} filterFn - The dsl filterFn function.\r\n   * @return {object} ctree Graph graph.\r\n   */\r\n  visitRepeat(visitor, tree, filterFn) {\r\n    return this.visitGroup(visitor, tree, filterFn, REPEAT);\r\n  }\r\n\r\n  buildEdges(tree, graph, visitor, type) {\r\n    if (type !== REPEAT) {\r\n      return;\r\n    }\r\n\r\n    const start = visitor.getSynthPortModel(tree.start, START);\r\n    graph.children.push(start);\r\n    const finish = visitor.getSynthPortModel(tree.finish, FINISH);\r\n    graph.children.push(finish);\r\n\r\n    // edges\r\n    if (tree.elts.length > 0) {\r\n\r\n      // start -> elts\r\n      let sources = [start.id];\r\n      let targets = this.getStart(tree.elts);\r\n\r\n      this.buildLinks(sources, targets, graph, tree, visitor);\r\n\r\n      // elts -> finish\r\n      sources = this.getFinish(tree.elts);\r\n      targets = [finish.id];\r\n\r\n      this.buildLinks(sources, targets, graph, tree, visitor);\r\n\r\n      // elts -> elts\r\n      sources = this.getFinish(tree.elts);\r\n      targets = [tree.elts[0].id];\r\n      // targets = this.getStart(tree.elts);\r\n\r\n      this.buildLinks(sources, targets, graph, tree, visitor);\r\n\r\n    }\r\n\r\n  }\r\n}\r\n","import {\r\n  isContainer\r\n} from '@imaguiraga/topology-dsl-core';\r\n\r\nconst UNIT = 8;\r\nexport class ELKDimensionVisitor {\r\n  constructor(\r\n    nodeWidth = (6 * UNIT),\r\n    nodeHeight = (4 * UNIT),\r\n    iconWidth = (2 * UNIT),\r\n    portSize = UNIT,\r\n    labelHeight = (2 * UNIT)\r\n  ) {\r\n    this._nodeWidth = nodeWidth;\r\n    this._nodeHeight = nodeHeight;\r\n    this._iconWidth = iconWidth;\r\n    this._portSize = portSize;\r\n    this._labelHeight = labelHeight;\r\n  }\r\n\r\n  nodeWidth(value) {\r\n    if (value !== undefined & value !== null) {\r\n      this._nodeWidth = value;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  nodeHeight(value) {\r\n    if (value !== undefined & value !== null) {\r\n      this._nodeHeight = value;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  labelHeight(value) {\r\n    if (value !== undefined & value !== null) {\r\n      this._labelHeight = value;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  iconWidth(value) {\r\n    if (value !== undefined & value !== null) {\r\n      this._iconWidth = value;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  portSize(value) {\r\n    if (value !== undefined & value !== null) {\r\n      this._portSize = value;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  visit(root) {\r\n    const stack = [root];\r\n    // FIFO\r\n    let i = 0;\r\n    while (i < stack.length) {\r\n      let tree = stack[i]; i++;\r\n      // Reset dimensions\r\n      if (tree === undefined || tree === null) {\r\n        return null;\r\n      }\r\n      if (tree.width !== undefined) {\r\n        delete tree.width;\r\n      }\r\n      if (tree.height !== undefined) {\r\n        delete tree.height;\r\n      }\r\n      if (tree.x !== undefined) {\r\n        delete tree.x;\r\n      }\r\n      if (tree.y !== undefined) {\r\n        delete tree.y;\r\n      }\r\n\r\n      // Set Node dimensions\r\n      if (isContainer(tree)) {\r\n        // Set node properties\r\n        tree.properties = {\r\n          'nodeLabels.placement': '[H_LEFT, V_TOP, INSIDE]'\r\n        };\r\n\r\n      } else {\r\n        // Terminal Nodes dimensions\r\n        const tagName = tree.model.tagName;\r\n        const style = (tree.model.data !== undefined) ? tree.model.data.style : null;\r\n        if (tagName === 'port' || tagName === 'start' || tagName === 'finish') {\r\n          tree.width = 1 * this._portSize;\r\n          tree.height = tree.width;\r\n\r\n        } else if (tagName === 'mark') {\r\n          tree.width = 0;// 2 * this._portSize;\r\n          tree.height = tree.width;\r\n\r\n        } else {\r\n          tree.width = 2 * this._nodeWidth;\r\n          tree.height = this._nodeHeight;\r\n          // Nodes with no style \r\n          if (style === undefined || style === null) {\r\n            let len = tree.model.title.length;\r\n            // Pt to Px 4/3\r\n            let w = Math.floor((len * UNIT * 2) / 3 + 6 * UNIT);\r\n            tree.width = w;\r\n            // How many lines\r\n            let nl = tree.model.title.split('\\n').length;\r\n            let h = Math.floor(nl * UNIT * 4 / 3) + 4 * UNIT;\r\n            tree.height = h;\r\n\r\n          }\r\n        }\r\n      }\r\n\r\n      // Set port dimensions\r\n      if (Array.isArray(tree.ports)) {\r\n        tree.ports.forEach((p) => {\r\n          p.width = 0;// this._portSize;\r\n          p.height = p.width;\r\n        }, this);\r\n\r\n      }\r\n\r\n      // Set label dimensions\r\n      if (Array.isArray(tree.labels)) {\r\n        tree.labels.forEach((l) => {\r\n          l.height = 2 * this._labelHeight;\r\n          //l.width = 3 * this._nodeWidth;\r\n        }, this);\r\n      }\r\n\r\n      if (Array.isArray(tree.children)) {\r\n        tree.children.forEach((n) => {\r\n          //this.visit(n);\r\n          stack.push(n);\r\n        }, this);\r\n      }\r\n    }\r\n    return root;\r\n  }\r\n\r\n}","//const ELK = require('elkjs');\r\nimport ELK from 'elkjs/lib/elk.bundled.js';\r\n\r\nimport {\r\n  DslToELKGenerator,\r\n  ELKDimensionVisitor\r\n} from '../visitor/index.js';\r\n\r\nconst elkGenerator = new DslToELKGenerator();\r\nconst UNIT = 8;\r\n\r\nexport function toElkGraph(dslObject) {\r\n  let elkgraph = null;\r\n  try {\r\n    // dslObject to elkgraph\r\n    elkgraph = elkGenerator.toElkGraph(dslObject);\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n  return elkgraph;\r\n}\r\n\r\nexport function elkLayout() {\r\n  const elkDimensionVisitor = new ELKDimensionVisitor();\r\n  const elk = new ELK();\r\n  let options = {\r\n    'algorithm': 'layered',\r\n    //'hierarchyHandling': 'SEPARATE_CHILDREN',\r\n    'nodePlacement.strategy': 'SIMPLE',//'NETWORK_SIMPLEX', //'BRANDES_KOEPF'\r\n    'org.eclipse.elk.direction': 'RIGHT',\r\n    'port.borderOffset': UNIT / 4,\r\n    'padding': 2 * UNIT,\r\n    'edgeRouting': 'ORTHOGONAL',\r\n    'layered.mergeEdges': true,\r\n    'zoomToFit': true,\r\n    'spacing': 4 * UNIT,\r\n    'spacing.nodeNodeBetweenLayers': 4 * UNIT,\r\n    'spacing.edgeNodeBetweenLayers': 4 * UNIT,\r\n    'spacing.edgeEdgeBetweenLayers': 4 * UNIT,\r\n    //'layering.strategy': 'LONGEST_PATH', 'NETWORK_SIMPLEX'\r\n    'layering.strategy': 'COFFMAN_GRAHAM ',\r\n    'org.eclipse.elk.spacing.nodeSelfLoop': 3 * UNIT,\r\n    'spacing.labelNode': UNIT\r\n  };\r\n  //https://www.eclipse.org/elk/reference/options/org-eclipse-elk-layered-layering-strategy.html\r\n  //https://www.eclipse.org/elk/reference/options/org-eclipse-elk-layered-nodeplacement-strategy.html\r\n  function layoutFn(inelkgraph) {\r\n    if (inelkgraph === null) {\r\n      return Promise.resolve(null);\r\n    }\r\n    // Add node width.height\r\n    let elkgraph = elkDimensionVisitor.visit(inelkgraph);\r\n    if (elkgraph === null) {\r\n      return Promise.resolve(null);\r\n    }\r\n    // console.log(JSON.stringify(elkgraph, null, '  '));\r\n\r\n    elk.knownLayoutOptions().then((d) => {\r\n      //console.log(d);\r\n    });\r\n    // start the layout\r\n    let elkpromise = elk.layout(elkgraph, {\r\n      layoutOptions: options,\r\n      logging: false,\r\n      measureExecutionTime: false\r\n    }).then((elkLayoutRelative) => {\r\n      const elkLayoutAbsolute = toAbsoluteElkLayout(elkLayoutRelative);\r\n      //console.log(elkLayoutAbsolute);\r\n      return elkLayoutAbsolute;\r\n    });\r\n\r\n    return elkpromise;\r\n  }\r\n\r\n  layoutFn.nodeHeight = function (newSize) {\r\n    if (!arguments.length) return elkDimensionVisitor._nodeHeight;\r\n    elkDimensionVisitor.nodeHeight(newSize);\r\n    return this;\r\n  };\r\n\r\n  layoutFn.nodeWidth = function (newSize) {\r\n    if (!arguments.length) return elkDimensionVisitor._nodeWidth;\r\n    elkDimensionVisitor.nodeWidth(newSize);\r\n    return this;\r\n  };\r\n\r\n  layoutFn.nodeSize = function (width, height) {\r\n    if (!arguments.length) return [elkDimensionVisitor._nodeWidth, elkDimensionVisitor._nodeHeight];\r\n\r\n    elkDimensionVisitor.nodeWidth(width);\r\n    elkDimensionVisitor.nodeHeight(height || width);\r\n\r\n    return this;\r\n  };\r\n\r\n  layoutFn.portSize = function (newSize) {\r\n    if (!arguments.length) return elkDimensionVisitor._portSize;\r\n    elkDimensionVisitor.portSize(newSize);\r\n    return this;\r\n  };\r\n\r\n  layoutFn.options = function (newOptions) {\r\n    if (!arguments.length) {\r\n      return options;\r\n    }\r\n    options = newOptions;\r\n    return this;\r\n  };\r\n\r\n  return layoutFn;\r\n}\r\n\r\nexport function toAbsoluteElkLayout(elkLayout) {\r\n  return toAbsoluteElkLayoutIt(elkLayout);\r\n}\r\n\r\nfunction toAbsoluteElkLayoutRec(elkNode, x0 = 0, y0 = 0) {\r\n  // Clone node \r\n  const n = elkNode;\r\n  // absolute coordinate\r\n  n.ax = n.x + x0;\r\n  n.ay = n.y + y0;\r\n\r\n  (n.labels || []).forEach((l) => {\r\n    // absolute coordinate\r\n    l.ax = l.x + x0;\r\n    l.ay = l.y + y0;\r\n  });\r\n\r\n  (elkNode.edges || []).forEach((e) => {\r\n    const t = e;\r\n    // absolute coordinate\r\n    t.source = e.sources[0];\r\n    t.target = e.targets[0];\r\n\r\n    // Update sections\r\n    (t.sections || []).forEach((s) => {\r\n      // junctionPoints\r\n      (s.junctionPoints || []).forEach((j) => {\r\n        j.ax = j.x + n.ax;\r\n        j.ay = j.y + n.ay;\r\n      });\r\n\r\n      // startPoint\r\n      s.startPoint.ax = s.startPoint.x + n.ax;\r\n      s.startPoint.ay = s.startPoint.y + n.ay;\r\n      // endPoint\r\n      s.endPoint.ax = s.endPoint.x + n.ax;\r\n      s.endPoint.ay = s.endPoint.y + n.ay;\r\n      // bendPoints\r\n      (s.bendPoints || []).forEach((b) => {\r\n        b.ax = b.x + n.ax;\r\n        b.ay = b.y + n.ay;\r\n      });\r\n    });\r\n\r\n  });\r\n\r\n  (elkNode.ports || []).forEach((p) => {\r\n    // absolute coordinate\r\n    p.ax = p.x + n.ax;\r\n    p.ay = p.y + n.ay;\r\n  });\r\n\r\n  (elkNode.children || []).forEach((c) => {\r\n    toAbsoluteElkLayoutRec(c, n.ax, n.ay);\r\n  });\r\n\r\n  return n;\r\n  //*/\r\n}\r\n\r\nexport function buildNodeLookup(elkNode) {\r\n  const index = new Map();\r\n\r\n  const stack = [elkNode];\r\n  // FIFO\r\n  let i = 0;\r\n  while (i < stack.length) {\r\n    //let n = stack.pop();\r\n    let n = stack[i];\r\n    i++;\r\n    index.set(n.id, n);\r\n\r\n    (n.ports || []).forEach((p) => {\r\n      stack.push(p);\r\n    });\r\n\r\n    (n.children || []).forEach((c) => {\r\n      stack.push(c);\r\n    });\r\n  }\r\n  return index;\r\n}\r\n\r\nfunction toAbsoluteElkLayoutIt(elkNode) {\r\n  // absolute coordinate\r\n  elkNode.ax = elkNode.x;\r\n  elkNode.ay = elkNode.y;\r\n  const stack = [elkNode];\r\n\r\n  let i = 0;\r\n  // FIFO\r\n  while (i < stack.length) {\r\n    let n = stack[i];\r\n    i++;\r\n    (n.labels || []).forEach((l) => {\r\n      // absolute coordinate\r\n      l.ax = l.x + n.ax;\r\n      l.ay = l.y + n.ay;\r\n    });\r\n\r\n    (n.edges || []).forEach((e) => {\r\n      const t = e;\r\n      // absolute coordinate\r\n      t.source = e.sources[0];\r\n      t.target = e.targets[0];\r\n\r\n      // Update sections\r\n      (t.sections || []).forEach((s) => {\r\n        // junctionPoints\r\n        (s.junctionPoints || []).forEach((j) => {\r\n          j.ax = j.x + n.ax;\r\n          j.ay = j.y + n.ay;\r\n        });\r\n\r\n        // startPoint\r\n        s.startPoint.ax = s.startPoint.x + n.ax;\r\n        s.startPoint.ay = s.startPoint.y + n.ay;\r\n        // endPoint\r\n        s.endPoint.ax = s.endPoint.x + n.ax;\r\n        s.endPoint.ay = s.endPoint.y + n.ay;\r\n        // bendPoints\r\n        (s.bendPoints || []).forEach((b) => {\r\n          b.ax = b.x + n.ax;\r\n          b.ay = b.y + n.ay;\r\n        });\r\n      });\r\n\r\n    });\r\n\r\n    (n.ports || []).forEach((p) => {\r\n      // absolute coordinate\r\n      p.ax = p.x + n.ax;\r\n      p.ay = p.y + n.ay;\r\n    });\r\n\r\n    (n.children || []).forEach((c) => {\r\n      c.ax = c.x + n.ax;\r\n      c.ay = c.y + n.ay;\r\n      stack.push(c);\r\n    });\r\n  }\r\n  return elkNode;\r\n}","import './style/x6-elk-style.css';\r\n\r\nimport { Graph, Shape, Point, Node, Edge } from '@antv/x6';\r\nimport { elkLayout, buildNodeLookup } from './elk-layout-factory';\r\n\r\nfunction lineRouter(vertices/*: Point.PointLike[]*/, args/*: RandomRouterArgs*/, view/*: EdgeView*/) {\r\n  const points = vertices.map((p) => Point.create(p));\r\n  return points;\r\n}\r\nconst LINE = 'line';\r\nconst DEBUG = false;\r\n\r\nGraph.registerRouter(LINE, lineRouter);\r\n\r\nconst UNIT = 8;\r\nconst EMPTY_ARRAY = [];\r\nexport function createElkX6Renderer(_container_, _minimap_, _width_, _height_, _iconWidth_) {\r\n\r\n  let containerElt = (typeof _container_ === 'string') ? document.getElementById(_container_) : _container_;\r\n\r\n  const width = (_width_ || containerElt.scrollWidth || 800);\r\n  const height = (_height_ || containerElt.scrollHeight || 800);\r\n\r\n  const x6Graph = createX6Graph(containerElt, _minimap_, width, height);\r\n  const toElkLayout = elkLayout();\r\n  toElkLayout.nodeSize(10 * UNIT).portSize(UNIT);\r\n\r\n  function render(elkgraph) {\r\n    if (elkgraph === null) {\r\n      return Promise.resolve(null);\r\n    }\r\n\r\n    const lookup = buildNodeLookup(elkgraph);\r\n\r\n    function refreshLayoutFn(_elkgraph_) {\r\n      return toElkLayout(_elkgraph_).then((elkLayout) => {\r\n        // Clear and redraw\r\n        // reset diagram\r\n        if (DEBUG) {\r\n          console.log(JSON.stringify(elkLayout, null, ' '));\r\n        }\r\n        const x6Layout = toX6Layout(elkLayout);\r\n        if (DEBUG) {\r\n          console.log(x6Layout);\r\n          console.log(JSON.stringify(x6Layout, null, ' '));\r\n        }\r\n        const start = new Date().getTime()\r\n        x6Graph.fromJSON(x6Layout);\r\n        x6Graph.unfreeze({\r\n          progress({ done }) {\r\n            if (done) {\r\n              const time = new Date().getTime() - start;\r\n              console.log(time)\r\n              x6Graph.unfreeze({\r\n                batchSize: 50,\r\n              })\r\n              x6Graph.zoomToFit({ padding: 8 })\r\n            }\r\n          },\r\n        })\r\n        return x6Graph;\r\n      }).catch((e) => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    const toggleCollapseNode = function (d) {\r\n      if (d === undefined || d === null) {\r\n        return;\r\n      }\r\n      // is expanded\r\n      if (d.model.compound || d.collapsed === true) {\r\n        if (d.collapsed !== true) {\r\n          // Remove children and edges \r\n          d._children = d.children;\r\n          d.children = EMPTY_ARRAY;\r\n\r\n          d._edges = d.edges;\r\n          d.edges = null;\r\n          d.model.compound = false;\r\n          d.collapsed = true;\r\n\r\n        } else {\r\n          // Restore children and edges\r\n          d.children = d._children;\r\n          d._children = null;\r\n\r\n          d.edges = d._edges;\r\n          d._edges = null;\r\n          d.model.compound = true;\r\n          d.collapsed = false;\r\n        }\r\n\r\n        refreshLayoutFn(elkgraph);\r\n      }\r\n    };\r\n\r\n    x6Graph.on('node:dblclick', ({ e, x, y, node, view }) => {\r\n      if (DEBUG) {\r\n        console.log(node);\r\n      }\r\n      const elkLayoutNode = lookup.get(node.id);\r\n      toggleCollapseNode(elkLayoutNode);\r\n    });\r\n\r\n    //*/\r\n    return refreshLayoutFn(elkgraph);\r\n  }\r\n\r\n  return {\r\n    render,\r\n    graph: x6Graph\r\n  };\r\n}\r\n\r\nexport function toX6Layout(elkLayoutNode) {\r\n  return toX6LayoutRec(elkLayoutNode);\r\n}\r\n\r\nconst RESOURCE_HTML = {\r\n  render(node) { //: Cell\r\n    const model = node.getData(); //as any\r\n    const style = model.data.style;// IconPath\r\n\r\n    const wrap = document.createElement('div');\r\n    wrap.style.display = 'flex';\r\n\r\n    let iconPath = (style !== undefined && style !== null) ? encodeURI(style.iconURL) : null;\r\n    // If icon exists\r\n    if (iconPath !== undefined && iconPath !== null) {\r\n      const img = document.createElement('img');\r\n\r\n      img.src = iconPath;\r\n      img.width = (model.compound === undefined || model.compound === true ? model.height : model.height / 2) - UNIT;\r\n      img.height = img.width;\r\n      wrap.appendChild(img);\r\n    }\r\n\r\n    const textdiv = document.createElement('div');\r\n    textdiv.style.padding = UNIT / 2;\r\n    textdiv.style.display = 'inline-block';\r\n    textdiv.style.margin = 'auto';\r\n\r\n    textdiv.innerHTML =\r\n      (style && style.product ? `<div><code>${style.product}</code></div>` : '') +\r\n      `<div><code class='resource-title'>${model !== undefined ? model.title : ''}</code></div>`\r\n      ;\r\n    wrap.appendChild(textdiv);\r\n\r\n    return wrap;\r\n  },\r\n  shouldComponentUpdate(node) { //: Cell\r\n    return node.hasChanged('data');\r\n  },\r\n};\r\n\r\nfunction toX6LayoutRec(elkLayoutNode, x6Layout = { nodes: [], edges: [] }) {\r\n  // Clone node \r\n  const n = createX6Node(elkLayoutNode, x6Layout);\r\n\r\n  const children = [];\r\n  (elkLayoutNode.children || []).forEach((c) => {\r\n    children.push(c.id);\r\n    toX6LayoutRec(c, x6Layout);\r\n  });\r\n\r\n  if (children.length > 0) {\r\n    n.children = children;\r\n  }\r\n\r\n  // Edges\r\n  (elkLayoutNode.edges || []).forEach((e) => {\r\n    const t = createX6Edge(e, x6Layout);\r\n  });\r\n  return x6Layout;\r\n}\r\n\r\nfunction createX6Node(elkLayoutNode, x6Layout) {\r\n  let model = elkLayoutNode.model || {};\r\n  const n = {\r\n    id: elkLayoutNode.id,\r\n    //label: elkLayoutNode.label,\r\n    data: {\r\n      ...model,\r\n      width: elkLayoutNode.width,\r\n      height: elkLayoutNode.height\r\n    },\r\n    x: elkLayoutNode.ax,\r\n    y: elkLayoutNode.ay,\r\n    width: elkLayoutNode.width,\r\n    height: elkLayoutNode.height,\r\n    attrs: {\r\n      body: {\r\n        class: 'node',\r\n      },\r\n      fo: {\r\n        class: 'node',\r\n      }\r\n    },\r\n  };\r\n  n.data.width = elkLayoutNode.width;\r\n  n.data.height = elkLayoutNode.height;\r\n\r\n  const clazz = ['node'];\r\n  if (elkLayoutNode.model !== undefined) {\r\n    clazz.push(elkLayoutNode.model.provider);\r\n    clazz.push(elkLayoutNode.model.kind);\r\n    clazz.push(elkLayoutNode.model.tagName);\r\n  }\r\n  n.attrs.body.class = clazz.join(' ');\r\n\r\n  // Ports\r\n  let PORT_RADIUS = 0;\r\n  const ports = (elkLayoutNode.ports || []);\r\n  const items = ports.map((p) => {\r\n    PORT_RADIUS = p.width / 2;\r\n    const r = {\r\n      group: 'abs',\r\n      id: p.id,\r\n      args: {\r\n        x: p.x + PORT_RADIUS,\r\n        y: p.y + PORT_RADIUS\r\n      },\r\n      data: p.model\r\n    };\r\n    return r;\r\n  });\r\n\r\n  if (ports.length > 0) {\r\n    n.ports = {\r\n      items: items,\r\n      groups: {\r\n        abs: {\r\n          position: {\r\n            name: 'absolute'\r\n          },\r\n          zIndex: 10,\r\n          attrs: {\r\n            circle: {\r\n              class: 'port',\r\n              r: PORT_RADIUS,\r\n              magnet: false,\r\n            },\r\n            text: {\r\n              fontSize: 0.8 * UNIT,\r\n              fill: '#444'\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  //node_modules\\@antv\\x6\\lib\\shape\\standard\\html.d.ts\r\n  // Port rendering\r\n  const children = (elkLayoutNode.children || []);\r\n  const tagName = n.data.tagName;\r\n  if (tagName === 'port' || tagName === 'start' || tagName === 'finish' || tagName === 'mark') {\r\n    n.label = null;\r\n    n.data.compound = undefined;\r\n    n.shape = 'rect';\r\n    n.attrs = {\r\n      body: {\r\n        class: n.data.tagName,\r\n      },\r\n      text: {\r\n        fontSize: 0.8 * UNIT,\r\n        fill: '#444'\r\n      }\r\n    };\r\n    // Round corners\r\n    if (tagName === 'mark') {\r\n      n.label = null;// n.data.title;\r\n      n.attrs.body.rx = 0;// UNIT / 2;\r\n      n.attrs.body.ry = 0;// UNIT / 2;\r\n    }\r\n\r\n  } else {\r\n    if (children.length === 0) {\r\n      n.label = null;\r\n      n.shape = 'html';\r\n      n.html = RESOURCE_HTML;\r\n\r\n    } else if (elkLayoutNode.labels !== undefined) {\r\n      const l = createX6Label(elkLayoutNode, x6Layout);\r\n    }\r\n  }\r\n\r\n  n.attrs.body.strokeWidth = (children.length > 0) ? '0px' : '1px';\r\n  n.attrs.body.opacity = (children.length > 0) ? 0.15 : 0.9;\r\n  x6Layout.nodes.push(n);\r\n  return n;\r\n}\r\n\r\nfunction createX6Label(elkLayoutNode, x6Layout) {\r\n  const label = elkLayoutNode.labels[0];\r\n  // Label Node\r\n  const model = elkLayoutNode.model || {};\r\n  const l = {\r\n    id: elkLayoutNode.id + '.label',\r\n    //label: elkLayoutNode.label,\r\n    data: {\r\n      ...model,\r\n      width: 30 * UNIT,//label.width,\r\n      height: label.height,\r\n    },\r\n    x: label.ax,\r\n    y: label.ay,\r\n    width: elkLayoutNode.width - 1.5 * UNIT,\r\n    height: label.height,\r\n    attrs: {\r\n      body: {\r\n        class: 'label',\r\n      },\r\n      fo: {\r\n        class: 'label',\r\n      }\r\n    },\r\n\r\n  };\r\n  l.data.compound = undefined;\r\n  l.label = null;\r\n  l.shape = 'html';\r\n  l.html = RESOURCE_HTML;\r\n  x6Layout.nodes.push(l);\r\n  return l;\r\n}\r\n\r\nfunction createX6Edge(e, x6Layout) {\r\n  const t = {\r\n    attrs: {\r\n      line: {\r\n        class: 'edge',\r\n        sourceMarker: {\r\n          name: e.style.startArrow ? 'classic' : null,\r\n          size: UNIT\r\n        },\r\n        targetMarker: {\r\n          name: e.style.endArrow ? 'classic' : null,\r\n          size: UNIT\r\n        },\r\n      }\r\n    }\r\n  };\r\n\r\n  t.id = e.id;\r\n  t.data = e.model;\r\n  const source = e.sources[0];\r\n  const target = e.targets[0];\r\n  const regex1 = /\\.(start|finish)/ig;\r\n  const regex2 = /\\.(start|finish)\\.port/ig;\r\n\r\n  if (source.match(regex2)) {\r\n    t.source = { cell: source };\r\n  } else {\r\n    t.source = { cell: source.replace(regex1, ''), port: source };\r\n  }\r\n\r\n  if (target.match(regex2)) {\r\n    t.target = { cell: target };\r\n  } else {\r\n    t.target = { cell: target.replace(regex1, ''), port: target };\r\n  }\r\n\r\n  if (e.sections !== undefined) {\r\n    let d = e.sections[0];\r\n\r\n    if (d.startPoint && d.endPoint) {\r\n      /*     \r\n      t.source = {\r\n        x: d.startPoint.ax,\r\n        y: d.startPoint.ay\r\n      };\r\n\r\n      t.target = {\r\n        x: d.endPoint.ax,\r\n        y: d.endPoint.ay\r\n      };\r\n      //*/\r\n    }\r\n\r\n    const vertices = [];\r\n    (d.bendPoints || []).forEach(function (bp, i) {\r\n      vertices.push({ x: bp.ax, y: bp.ay });\r\n    });\r\n\r\n    (d.junctionPoints || []).forEach(function (bp, i) {\r\n      vertices.push({ x: bp.ax, y: bp.ay });\r\n    });\r\n\r\n    if (vertices.length > 0) {\r\n      t.vertices = vertices;\r\n    }\r\n  }\r\n  x6Layout.edges.push(t);\r\n\r\n  return t;\r\n}\r\n\r\nfunction createX6Graph(containerElt, minimapContainer, width, height) {\r\n  const x6Graph = new Graph({\r\n    container: containerElt,\r\n    grid: 1,\r\n    //width: width,\r\n    //height: height,\r\n    //resizing: false,\r\n    background: {\r\n      color: '#fff',\r\n    },\r\n    interacting: false,\r\n    async: true,\r\n    frozen: true,\r\n    sorting: 'approx',\r\n    scroller: {\r\n      enabled: true,\r\n      pannable: true,\r\n      pageVisible: true,\r\n      pageBreak: true,\r\n      //  className: 'app-content-pane'\r\n    },\r\n    panning: {\r\n      enabled: true,\r\n      modifiers: 'shift',\r\n    },\r\n    mousewheel: {\r\n      enabled: true,\r\n      modifiers: ['ctrl', 'meta'],\r\n    },\r\n    connecting: {\r\n      //snap: true,\r\n      allowBlank: false,\r\n      allowLoop: false,\r\n      highlight: true,\r\n      anchor: 'orth',\r\n      connector: 'rounded',\r\n      connectionPoint: 'boundary',\r\n      router: {\r\n        // https://x6.antv.vision/en/docs/tutorial/basic/edge/#router\r\n        // node_modules\\@antv\\x6\\lib\\registry\\router\r\n        // https://x6.antv.vision/en/docs/api/registry/router#oneside\r\n        // er orth metro manhattan https://x6.antv.vision/en/examples/edge/edge#edge\r\n        name: LINE,\r\n      }\r\n    },\r\n    minimap: {\r\n      enabled: true,\r\n      container: minimapContainer,\r\n      minScale: 0.5,\r\n      maxScale: 2,\r\n      padding: UNIT / 2,\r\n      width: 200,\r\n      height: 160\r\n    },\r\n  });\r\n\r\n  x6Graph.on('cell:mouseenter', ({ e, cell, view }) => {\r\n    if (cell.isNode() && cell.getData().compound !== undefined) {\r\n      cell.addTools([\r\n        {\r\n          name: 'boundary',\r\n          args: {\r\n            padding: 0,\r\n            useCellGeometry: true,\r\n            attrs: {\r\n              fill: 'lightgrey',\r\n              stroke: 'blue',\r\n              strokeWidth: 3,\r\n              strokeDasharray: 'none',\r\n              fillOpacity: 0.45,\r\n            },\r\n          },\r\n        },\r\n      ]);\r\n    }\r\n  });\r\n\r\n  x6Graph.on('cell:mouseleave', ({ e, cell, view }) => {\r\n    cell.removeTools();\r\n  });\r\n  //*/\r\n  return x6Graph;\r\n}","export const sample = {\r\n  \"id\": \"$root\",\r\n  \"layoutOptions\": {\r\n   \"algorithm\": \"layered\",\r\n   \"elk.hierarchyHandling\": \"SEPARATE_CHILDREN\"\r\n  },\r\n  \"children\": [\r\n   {\r\n    \"id\": \"sequence.17\",\r\n    \"label\": \"sequence.17\",\r\n    \"model\": {\r\n     \"kind\": \"sequence\",\r\n     \"title\": \"sequence.17\",\r\n     \"direction\": null,\r\n     \"tagName\": \"sequence\",\r\n     \"id\": \"sequence.17\",\r\n     \"provider\": \"default\",\r\n     \"compound\": true,\r\n     \"data\": {\r\n      \"style\": {\r\n       \"className\": \"sequence\",\r\n       \"provider\": \"default\",\r\n       \"iconURL\": \"assets/icons/base/sequence-diagram-3-fill.svg\"\r\n      }\r\n     }\r\n    },\r\n    \"labels\": [\r\n     {\r\n      \"text\": \"sequence.17\",\r\n      \"properties\": {\r\n       \"nodeLabels.placement\": \"[V_TOP, H_LEFT, INSIDE]\"\r\n      }\r\n     }\r\n    ],\r\n    \"ports\": [\r\n     {\r\n      \"id\": \"sequence.17.start\",\r\n      \"label\": \"sequence.17.start\",\r\n      \"model\": {\r\n       \"kind\": \"port\",\r\n       \"tagName\": \"port\",\r\n       \"compound\": false,\r\n       \"provider\": \"custom\",\r\n       \"id\": \"sequence.17.start\"\r\n      },\r\n      \"labels\": []\r\n     },\r\n     {\r\n      \"id\": \"sequence.17.finish\",\r\n      \"label\": \"sequence.17.finish\",\r\n      \"model\": {\r\n       \"kind\": \"port\",\r\n       \"tagName\": \"port\",\r\n       \"compound\": false,\r\n       \"provider\": \"custom\",\r\n       \"id\": \"sequence.17.finish\"\r\n      },\r\n      \"labels\": []\r\n     }\r\n    ],\r\n    \"children\": [\r\n     {\r\n      \"id\": \"sequence.17.start.port\",\r\n      \"label\": \"sequence.17.start\",\r\n      \"model\": {\r\n       \"kind\": \"port\",\r\n       \"tagName\": \"start\",\r\n       \"compound\": false,\r\n       \"provider\": \"custom\",\r\n       \"id\": \"sequence.17.start.port\"\r\n      },\r\n      \"labels\": []\r\n     },\r\n     {\r\n      \"id\": \"sequence.17.finish.port\",\r\n      \"label\": \"sequence.17.finish\",\r\n      \"model\": {\r\n       \"kind\": \"port\",\r\n       \"tagName\": \"finish\",\r\n       \"compound\": false,\r\n       \"provider\": \"custom\",\r\n       \"id\": \"sequence.17.finish.port\"\r\n      },\r\n      \"labels\": []\r\n     },\r\n     {\r\n      \"id\": \"edge.6.link\",\r\n      \"label\": \"sequence.17.start\",\r\n      \"model\": {\r\n       \"kind\": \"port\",\r\n       \"tagName\": \"start\",\r\n       \"compound\": false,\r\n       \"provider\": \"custom\",\r\n       \"id\": \"sequence.17.start.port\"\r\n      },\r\n      \"labels\": []\r\n     },\r\n     {\r\n      \"id\": \"resource.3\",\r\n      \"label\": \"a\",\r\n      \"model\": {\r\n       \"kind\": \"resource\",\r\n       \"title\": \"a\",\r\n       \"direction\": null,\r\n       \"tagName\": \"resource\",\r\n       \"id\": \"resource.3\",\r\n       \"provider\": \"default\",\r\n       \"compound\": false,\r\n       \"data\": {\r\n        \"style\": null\r\n       }\r\n      },\r\n      \"labels\": [],\r\n      \"ports\": [\r\n       {\r\n        \"id\": \"resource.3.start\",\r\n        \"label\": \"resource.3.start\",\r\n        \"model\": {\r\n         \"kind\": \"port\",\r\n         \"tagName\": \"port\",\r\n         \"compound\": false,\r\n         \"provider\": \"custom\",\r\n         \"id\": \"resource.3.start\"\r\n        },\r\n        \"labels\": []\r\n       },\r\n       {\r\n        \"id\": \"resource.3.finish\",\r\n        \"label\": \"resource.3.finish\",\r\n        \"model\": {\r\n         \"kind\": \"port\",\r\n         \"tagName\": \"port\",\r\n         \"compound\": false,\r\n         \"provider\": \"custom\",\r\n         \"id\": \"resource.3.finish\"\r\n        },\r\n        \"labels\": []\r\n       }\r\n      ],\r\n      \"children\": [],\r\n      \"edges\": [],\r\n      \"parent\": {\r\n       \"id\": \"sequence.17\",\r\n       \"label\": \"sequence.17\",\r\n       \"model\": {\r\n        \"kind\": \"sequence\",\r\n        \"title\": \"sequence.17\",\r\n        \"direction\": null,\r\n        \"tagName\": \"sequence\",\r\n        \"id\": \"sequence.17\",\r\n        \"provider\": \"default\",\r\n        \"compound\": true,\r\n        \"data\": {\r\n         \"style\": {\r\n          \"className\": \"sequence\",\r\n          \"provider\": \"default\",\r\n          \"iconURL\": \"assets/icons/base/sequence-diagram-3-fill.svg\"\r\n         }\r\n        }\r\n       },\r\n       \"labels\": [\r\n        {\r\n         \"text\": \"sequence.17\",\r\n         \"properties\": {\r\n          \"nodeLabels.placement\": \"[V_TOP, H_LEFT, INSIDE]\"\r\n         }\r\n        }\r\n       ]\r\n      }\r\n     },\r\n     {\r\n      \"id\": \"resource.4\",\r\n      \"label\": \"b\",\r\n      \"model\": {\r\n       \"kind\": \"resource\",\r\n       \"title\": \"b\",\r\n       \"direction\": null,\r\n       \"tagName\": \"resource\",\r\n       \"id\": \"resource.4\",\r\n       \"provider\": \"default\",\r\n       \"compound\": false,\r\n       \"data\": {\r\n        \"style\": null\r\n       }\r\n      },\r\n      \"labels\": [],\r\n      \"ports\": [\r\n       {\r\n        \"id\": \"resource.4.start\",\r\n        \"label\": \"resource.4.start\",\r\n        \"model\": {\r\n         \"kind\": \"port\",\r\n         \"tagName\": \"port\",\r\n         \"compound\": false,\r\n         \"provider\": \"custom\",\r\n         \"id\": \"resource.4.start\"\r\n        },\r\n        \"labels\": []\r\n       },\r\n       {\r\n        \"id\": \"resource.4.finish\",\r\n        \"label\": \"resource.4.finish\",\r\n        \"model\": {\r\n         \"kind\": \"port\",\r\n         \"tagName\": \"port\",\r\n         \"compound\": false,\r\n         \"provider\": \"custom\",\r\n         \"id\": \"resource.4.finish\"\r\n        },\r\n        \"labels\": []\r\n       }\r\n      ],\r\n      \"children\": [],\r\n      \"edges\": [],\r\n      \"parent\": {\r\n       \"id\": \"sequence.17\",\r\n       \"label\": \"sequence.17\",\r\n       \"model\": {\r\n        \"kind\": \"sequence\",\r\n        \"title\": \"sequence.17\",\r\n        \"direction\": null,\r\n        \"tagName\": \"sequence\",\r\n        \"id\": \"sequence.17\",\r\n        \"provider\": \"default\",\r\n        \"compound\": true,\r\n        \"data\": {\r\n         \"style\": {\r\n          \"className\": \"sequence\",\r\n          \"provider\": \"default\",\r\n          \"iconURL\": \"assets/icons/base/sequence-diagram-3-fill.svg\"\r\n         }\r\n        }\r\n       },\r\n       \"labels\": [\r\n        {\r\n         \"text\": \"sequence.17\",\r\n         \"properties\": {\r\n          \"nodeLabels.placement\": \"[V_TOP, H_LEFT, INSIDE]\"\r\n         }\r\n        }\r\n       ]\r\n      }\r\n     },\r\n     {\r\n      \"id\": \"sequence.11\",\r\n      \"label\": \"sequence.11\",\r\n      \"model\": {\r\n       \"kind\": \"sequence\",\r\n       \"title\": \"sequence.11\",\r\n       \"direction\": null,\r\n       \"tagName\": \"sequence\",\r\n       \"id\": \"sequence.11\",\r\n       \"provider\": \"default\",\r\n       \"compound\": true,\r\n       \"data\": {\r\n        \"style\": {\r\n         \"className\": \"sequence\",\r\n         \"provider\": \"default\",\r\n         \"iconURL\": \"assets/icons/base/sequence-diagram-3-fill.svg\"\r\n        }\r\n       }\r\n      },\r\n      \"labels\": [\r\n       {\r\n        \"text\": \"sequence.11\",\r\n        \"properties\": {\r\n         \"nodeLabels.placement\": \"[V_TOP, H_LEFT, INSIDE]\"\r\n        }\r\n       }\r\n      ],\r\n      \"ports\": [\r\n       {\r\n        \"id\": \"sequence.11.start\",\r\n        \"label\": \"sequence.11.start\",\r\n        \"model\": {\r\n         \"kind\": \"port\",\r\n         \"tagName\": \"port\",\r\n         \"compound\": false,\r\n         \"provider\": \"custom\",\r\n         \"id\": \"sequence.11.start\"\r\n        },\r\n        \"labels\": []\r\n       },\r\n       {\r\n        \"id\": \"sequence.11.finish\",\r\n        \"label\": \"sequence.11.finish\",\r\n        \"model\": {\r\n         \"kind\": \"port\",\r\n         \"tagName\": \"port\",\r\n         \"compound\": false,\r\n         \"provider\": \"custom\",\r\n         \"id\": \"sequence.11.finish\"\r\n        },\r\n        \"labels\": []\r\n       }\r\n      ],\r\n      \"children\": [\r\n       {\r\n        \"id\": \"sequence.11.start.port\",\r\n        \"label\": \"sequence.11.start\",\r\n        \"model\": {\r\n         \"kind\": \"port\",\r\n         \"tagName\": \"start\",\r\n         \"compound\": false,\r\n         \"provider\": \"custom\",\r\n         \"id\": \"sequence.11.start.port\"\r\n        },\r\n        \"labels\": []\r\n       },\r\n       {\r\n        \"id\": \"sequence.11.finish.port\",\r\n        \"label\": \"sequence.11.finish\",\r\n        \"model\": {\r\n         \"kind\": \"port\",\r\n         \"tagName\": \"finish\",\r\n         \"compound\": false,\r\n         \"provider\": \"custom\",\r\n         \"id\": \"sequence.11.finish.port\"\r\n        },\r\n        \"labels\": []\r\n       },\r\n       {\r\n        \"id\": \"resource.5\",\r\n        \"label\": \"a\",\r\n        \"model\": {\r\n         \"kind\": \"resource\",\r\n         \"title\": \"a\",\r\n         \"direction\": null,\r\n         \"tagName\": \"resource\",\r\n         \"id\": \"resource.5\",\r\n         \"provider\": \"default\",\r\n         \"compound\": false,\r\n         \"data\": {\r\n          \"style\": null\r\n         }\r\n        },\r\n        \"labels\": [],\r\n        \"ports\": [\r\n         {\r\n          \"id\": \"resource.5.start\",\r\n          \"label\": \"resource.5.start\",\r\n          \"model\": {\r\n           \"kind\": \"port\",\r\n           \"tagName\": \"port\",\r\n           \"compound\": false,\r\n           \"provider\": \"custom\",\r\n           \"id\": \"resource.5.start\"\r\n          },\r\n          \"labels\": []\r\n         },\r\n         {\r\n          \"id\": \"resource.5.finish\",\r\n          \"label\": \"resource.5.finish\",\r\n          \"model\": {\r\n           \"kind\": \"port\",\r\n           \"tagName\": \"port\",\r\n           \"compound\": false,\r\n           \"provider\": \"custom\",\r\n           \"id\": \"resource.5.finish\"\r\n          },\r\n          \"labels\": []\r\n         }\r\n        ],\r\n        \"children\": [],\r\n        \"edges\": [],\r\n        \"parent\": {\r\n         \"id\": \"sequence.11\",\r\n         \"label\": \"sequence.11\",\r\n         \"model\": {\r\n          \"kind\": \"sequence\",\r\n          \"title\": \"sequence.11\",\r\n          \"direction\": null,\r\n          \"tagName\": \"sequence\",\r\n          \"id\": \"sequence.11\",\r\n          \"provider\": \"default\",\r\n          \"compound\": true,\r\n          \"data\": {\r\n           \"style\": {\r\n            \"className\": \"sequence\",\r\n            \"provider\": \"default\",\r\n            \"iconURL\": \"assets/icons/base/sequence-diagram-3-fill.svg\"\r\n           }\r\n          }\r\n         },\r\n         \"labels\": [\r\n          {\r\n           \"text\": \"sequence.11\",\r\n           \"properties\": {\r\n            \"nodeLabels.placement\": \"[V_TOP, H_LEFT, INSIDE]\"\r\n           }\r\n          }\r\n         ]\r\n        }\r\n       },\r\n       {\r\n        \"id\": \"resource.6\",\r\n        \"label\": \"b\",\r\n        \"model\": {\r\n         \"kind\": \"resource\",\r\n         \"title\": \"b\",\r\n         \"direction\": null,\r\n         \"tagName\": \"resource\",\r\n         \"id\": \"resource.6\",\r\n         \"provider\": \"default\",\r\n         \"compound\": false,\r\n         \"data\": {\r\n          \"style\": null\r\n         }\r\n        },\r\n        \"labels\": [],\r\n        \"ports\": [\r\n         {\r\n          \"id\": \"resource.6.start\",\r\n          \"label\": \"resource.6.start\",\r\n          \"model\": {\r\n           \"kind\": \"port\",\r\n           \"tagName\": \"port\",\r\n           \"compound\": false,\r\n           \"provider\": \"custom\",\r\n           \"id\": \"resource.6.start\"\r\n          },\r\n          \"labels\": []\r\n         },\r\n         {\r\n          \"id\": \"resource.6.finish\",\r\n          \"label\": \"resource.6.finish\",\r\n          \"model\": {\r\n           \"kind\": \"port\",\r\n           \"tagName\": \"port\",\r\n           \"compound\": false,\r\n           \"provider\": \"custom\",\r\n           \"id\": \"resource.6.finish\"\r\n          },\r\n          \"labels\": []\r\n         }\r\n        ],\r\n        \"children\": [],\r\n        \"edges\": [],\r\n        \"parent\": {\r\n         \"id\": \"sequence.11\",\r\n         \"label\": \"sequence.11\",\r\n         \"model\": {\r\n          \"kind\": \"sequence\",\r\n          \"title\": \"sequence.11\",\r\n          \"direction\": null,\r\n          \"tagName\": \"sequence\",\r\n          \"id\": \"sequence.11\",\r\n          \"provider\": \"default\",\r\n          \"compound\": true,\r\n          \"data\": {\r\n           \"style\": {\r\n            \"className\": \"sequence\",\r\n            \"provider\": \"default\",\r\n            \"iconURL\": \"assets/icons/base/sequence-diagram-3-fill.svg\"\r\n           }\r\n          }\r\n         },\r\n         \"labels\": [\r\n          {\r\n           \"text\": \"sequence.11\",\r\n           \"properties\": {\r\n            \"nodeLabels.placement\": \"[V_TOP, H_LEFT, INSIDE]\"\r\n           }\r\n          }\r\n         ]\r\n        }\r\n       },\r\n       {\r\n        \"id\": \"resource.13\",\r\n        \"label\": \"merge\",\r\n        \"model\": {\r\n         \"kind\": \"resource\",\r\n         \"title\": \"merge\",\r\n         \"direction\": null,\r\n         \"tagName\": \"resource\",\r\n         \"id\": \"resource.13\",\r\n         \"provider\": \"default\",\r\n         \"compound\": false,\r\n         \"data\": {}\r\n        },\r\n        \"labels\": [],\r\n        \"ports\": [\r\n         {\r\n          \"id\": \"resource.13.start\",\r\n          \"label\": \"resource.13.start\",\r\n          \"model\": {\r\n           \"kind\": \"port\",\r\n           \"tagName\": \"port\",\r\n           \"compound\": false,\r\n           \"provider\": \"custom\",\r\n           \"id\": \"resource.13.start\"\r\n          },\r\n          \"labels\": []\r\n         },\r\n         {\r\n          \"id\": \"resource.13.finish\",\r\n          \"label\": \"resource.13.finish\",\r\n          \"model\": {\r\n           \"kind\": \"port\",\r\n           \"tagName\": \"port\",\r\n           \"compound\": false,\r\n           \"provider\": \"custom\",\r\n           \"id\": \"resource.13.finish\"\r\n          },\r\n          \"labels\": []\r\n         }\r\n        ],\r\n        \"children\": [],\r\n        \"edges\": [],\r\n        \"parent\": {\r\n         \"id\": \"sequence.11\",\r\n         \"label\": \"sequence.11\",\r\n         \"model\": {\r\n          \"kind\": \"sequence\",\r\n          \"title\": \"sequence.11\",\r\n          \"direction\": null,\r\n          \"tagName\": \"sequence\",\r\n          \"id\": \"sequence.11\",\r\n          \"provider\": \"default\",\r\n          \"compound\": true,\r\n          \"data\": {\r\n           \"style\": {\r\n            \"className\": \"sequence\",\r\n            \"provider\": \"default\",\r\n            \"iconURL\": \"assets/icons/base/sequence-diagram-3-fill.svg\"\r\n           }\r\n          }\r\n         },\r\n         \"labels\": [\r\n          {\r\n           \"text\": \"sequence.11\",\r\n           \"properties\": {\r\n            \"nodeLabels.placement\": \"[V_TOP, H_LEFT, INSIDE]\"\r\n           }\r\n          }\r\n         ]\r\n        }\r\n       },\r\n       {\r\n        \"id\": \"group.9\",\r\n        \"label\": \"group.9\",\r\n        \"model\": {\r\n         \"kind\": \"group\",\r\n         \"title\": \"group.9\",\r\n         \"direction\": null,\r\n         \"tagName\": \"group\",\r\n         \"id\": \"group.9\",\r\n         \"provider\": \"default\",\r\n         \"compound\": true,\r\n         \"data\": {\r\n          \"style\": {\r\n           \"className\": \"group\",\r\n           \"provider\": \"default\",\r\n           \"iconURL\": \"assets/icons/base/group-grid-fill.svg\"\r\n          }\r\n         }\r\n        },\r\n        \"labels\": [\r\n         {\r\n          \"text\": \"group.9\",\r\n          \"properties\": {\r\n           \"nodeLabels.placement\": \"[V_TOP, H_LEFT, INSIDE]\"\r\n          }\r\n         }\r\n        ],\r\n        \"ports\": [\r\n         {\r\n          \"id\": \"group.9.start\",\r\n          \"label\": \"group.9.start\",\r\n          \"model\": {\r\n           \"kind\": \"port\",\r\n           \"tagName\": \"port\",\r\n           \"compound\": false,\r\n           \"provider\": \"custom\",\r\n           \"id\": \"group.9.start\"\r\n          },\r\n          \"labels\": []\r\n         },\r\n         {\r\n          \"id\": \"group.9.finish\",\r\n          \"label\": \"group.9.finish\",\r\n          \"model\": {\r\n           \"kind\": \"port\",\r\n           \"tagName\": \"port\",\r\n           \"compound\": false,\r\n           \"provider\": \"custom\",\r\n           \"id\": \"group.9.finish\"\r\n          },\r\n          \"labels\": []\r\n         }\r\n        ],\r\n        \"children\": [\r\n         {\r\n          \"id\": \"resource.7\",\r\n          \"label\": \"c\",\r\n          \"model\": {\r\n           \"kind\": \"resource\",\r\n           \"title\": \"c\",\r\n           \"direction\": null,\r\n           \"tagName\": \"resource\",\r\n           \"id\": \"resource.7\",\r\n           \"provider\": \"default\",\r\n           \"compound\": false,\r\n           \"data\": {\r\n            \"style\": null\r\n           }\r\n          },\r\n          \"labels\": [],\r\n          \"ports\": [\r\n           {\r\n            \"id\": \"resource.7.start\",\r\n            \"label\": \"resource.7.start\",\r\n            \"model\": {\r\n             \"kind\": \"port\",\r\n             \"tagName\": \"port\",\r\n             \"compound\": false,\r\n             \"provider\": \"custom\",\r\n             \"id\": \"resource.7.start\"\r\n            },\r\n            \"labels\": []\r\n           },\r\n           {\r\n            \"id\": \"resource.7.finish\",\r\n            \"label\": \"resource.7.finish\",\r\n            \"model\": {\r\n             \"kind\": \"port\",\r\n             \"tagName\": \"port\",\r\n             \"compound\": false,\r\n             \"provider\": \"custom\",\r\n             \"id\": \"resource.7.finish\"\r\n            },\r\n            \"labels\": []\r\n           }\r\n          ],\r\n          \"children\": [],\r\n          \"edges\": [],\r\n          \"parent\": {\r\n           \"id\": \"group.9\",\r\n           \"label\": \"group.9\",\r\n           \"model\": {\r\n            \"kind\": \"group\",\r\n            \"title\": \"group.9\",\r\n            \"direction\": null,\r\n            \"tagName\": \"group\",\r\n            \"id\": \"group.9\",\r\n            \"provider\": \"default\",\r\n            \"compound\": true,\r\n            \"data\": {\r\n             \"style\": {\r\n              \"className\": \"group\",\r\n              \"provider\": \"default\",\r\n              \"iconURL\": \"assets/icons/base/group-grid-fill.svg\"\r\n             }\r\n            }\r\n           },\r\n           \"labels\": [\r\n            {\r\n             \"text\": \"group.9\",\r\n             \"properties\": {\r\n              \"nodeLabels.placement\": \"[V_TOP, H_LEFT, INSIDE]\"\r\n             }\r\n            }\r\n           ]\r\n          }\r\n         },\r\n         {\r\n          \"id\": \"resource.8\",\r\n          \"label\": \"d\",\r\n          \"model\": {\r\n           \"kind\": \"resource\",\r\n           \"title\": \"d\",\r\n           \"direction\": null,\r\n           \"tagName\": \"resource\",\r\n           \"id\": \"resource.8\",\r\n           \"provider\": \"default\",\r\n           \"compound\": false,\r\n           \"data\": {\r\n            \"style\": null\r\n           }\r\n          },\r\n          \"labels\": [],\r\n          \"ports\": [\r\n           {\r\n            \"id\": \"resource.8.start\",\r\n            \"label\": \"resource.8.start\",\r\n            \"model\": {\r\n             \"kind\": \"port\",\r\n             \"tagName\": \"port\",\r\n             \"compound\": false,\r\n             \"provider\": \"custom\",\r\n             \"id\": \"resource.8.start\"\r\n            },\r\n            \"labels\": []\r\n           },\r\n           {\r\n            \"id\": \"resource.8.finish\",\r\n            \"label\": \"resource.8.finish\",\r\n            \"model\": {\r\n             \"kind\": \"port\",\r\n             \"tagName\": \"port\",\r\n             \"compound\": false,\r\n             \"provider\": \"custom\",\r\n             \"id\": \"resource.8.finish\"\r\n            },\r\n            \"labels\": []\r\n           }\r\n          ],\r\n          \"children\": [],\r\n          \"edges\": [],\r\n          \"parent\": {\r\n           \"id\": \"group.9\",\r\n           \"label\": \"group.9\",\r\n           \"model\": {\r\n            \"kind\": \"group\",\r\n            \"title\": \"group.9\",\r\n            \"direction\": null,\r\n            \"tagName\": \"group\",\r\n            \"id\": \"group.9\",\r\n            \"provider\": \"default\",\r\n            \"compound\": true,\r\n            \"data\": {\r\n             \"style\": {\r\n              \"className\": \"group\",\r\n              \"provider\": \"default\",\r\n              \"iconURL\": \"assets/icons/base/group-grid-fill.svg\"\r\n             }\r\n            }\r\n           },\r\n           \"labels\": [\r\n            {\r\n             \"text\": \"group.9\",\r\n             \"properties\": {\r\n              \"nodeLabels.placement\": \"[V_TOP, H_LEFT, INSIDE]\"\r\n             }\r\n            }\r\n           ]\r\n          }\r\n         }\r\n        ],\r\n        \"edges\": [],\r\n        \"parent\": {\r\n         \"id\": \"sequence.11\",\r\n         \"label\": \"sequence.11\",\r\n         \"model\": {\r\n          \"kind\": \"sequence\",\r\n          \"title\": \"sequence.11\",\r\n          \"direction\": null,\r\n          \"tagName\": \"sequence\",\r\n          \"id\": \"sequence.11\",\r\n          \"provider\": \"default\",\r\n          \"compound\": true,\r\n          \"data\": {\r\n           \"style\": {\r\n            \"className\": \"sequence\",\r\n            \"provider\": \"default\",\r\n            \"iconURL\": \"assets/icons/base/sequence-diagram-3-fill.svg\"\r\n           }\r\n          }\r\n         },\r\n         \"labels\": [\r\n          {\r\n           \"text\": \"sequence.11\",\r\n           \"properties\": {\r\n            \"nodeLabels.placement\": \"[V_TOP, H_LEFT, INSIDE]\"\r\n           }\r\n          }\r\n         ]\r\n        }\r\n       },\r\n       {\r\n        \"id\": \"resource.10\",\r\n        \"label\": \"e\",\r\n        \"model\": {\r\n         \"kind\": \"resource\",\r\n         \"title\": \"e\",\r\n         \"direction\": null,\r\n         \"tagName\": \"resource\",\r\n         \"id\": \"resource.10\",\r\n         \"provider\": \"default\",\r\n         \"compound\": false,\r\n         \"data\": {\r\n          \"style\": null\r\n         }\r\n        },\r\n        \"labels\": [],\r\n        \"ports\": [\r\n         {\r\n          \"id\": \"resource.10.start\",\r\n          \"label\": \"resource.10.start\",\r\n          \"model\": {\r\n           \"kind\": \"port\",\r\n           \"tagName\": \"port\",\r\n           \"compound\": false,\r\n           \"provider\": \"custom\",\r\n           \"id\": \"resource.10.start\"\r\n          },\r\n          \"labels\": []\r\n         },\r\n         {\r\n          \"id\": \"resource.10.finish\",\r\n          \"label\": \"resource.10.finish\",\r\n          \"model\": {\r\n           \"kind\": \"port\",\r\n           \"tagName\": \"port\",\r\n           \"compound\": false,\r\n           \"provider\": \"custom\",\r\n           \"id\": \"resource.10.finish\"\r\n          },\r\n          \"labels\": []\r\n         }\r\n        ],\r\n        \"children\": [],\r\n        \"edges\": [],\r\n        \"parent\": {\r\n         \"id\": \"sequence.11\",\r\n         \"label\": \"sequence.11\",\r\n         \"model\": {\r\n          \"kind\": \"sequence\",\r\n          \"title\": \"sequence.11\",\r\n          \"direction\": null,\r\n          \"tagName\": \"sequence\",\r\n          \"id\": \"sequence.11\",\r\n          \"provider\": \"default\",\r\n          \"compound\": true,\r\n          \"data\": {\r\n           \"style\": {\r\n            \"className\": \"sequence\",\r\n            \"provider\": \"default\",\r\n            \"iconURL\": \"assets/icons/base/sequence-diagram-3-fill.svg\"\r\n           }\r\n          }\r\n         },\r\n         \"labels\": [\r\n          {\r\n           \"text\": \"sequence.11\",\r\n           \"properties\": {\r\n            \"nodeLabels.placement\": \"[V_TOP, H_LEFT, INSIDE]\"\r\n           }\r\n          }\r\n         ]\r\n        }\r\n       }\r\n      ],\r\n      \"edges\": [\r\n       {\r\n        \"id\": \"edge.15\",\r\n        \"sources\": [\r\n         \"sequence.11.start.port\"\r\n        ],\r\n        \"targets\": [\r\n         \"resource.5.start\"\r\n        ],\r\n        \"model\": {\r\n         \"provider\": \"default\",\r\n         \"tagName\": \"edge\",\r\n         \"kind\": \"edge\"\r\n        },\r\n        \"style\": {\r\n         \"startArrow\": false,\r\n         \"endArrow\": true\r\n        }\r\n       },\r\n       {\r\n        \"id\": \"edge.16\",\r\n        \"sources\": [\r\n         \"sequence.11.start.port\"\r\n        ],\r\n        \"targets\": [\r\n         \"resource.6.start\"\r\n        ],\r\n        \"model\": {\r\n         \"provider\": \"default\",\r\n         \"tagName\": \"edge\",\r\n         \"kind\": \"edge\"\r\n        },\r\n        \"style\": {\r\n         \"startArrow\": false,\r\n         \"endArrow\": true\r\n        }\r\n       },\r\n       {\r\n        \"id\": \"edge.17\",\r\n        \"sources\": [\r\n         \"resource.5.finish\"\r\n        ],\r\n        \"targets\": [\r\n         \"resource.13.start\"\r\n        ],\r\n        \"model\": {\r\n         \"provider\": \"default\",\r\n         \"tagName\": \"edge\",\r\n         \"kind\": \"edge\"\r\n        },\r\n        \"style\": {\r\n         \"startArrow\": false,\r\n         \"endArrow\": true\r\n        }\r\n       },\r\n       {\r\n        \"id\": \"edge.18\",\r\n        \"sources\": [\r\n         \"resource.6.finish\"\r\n        ],\r\n        \"targets\": [\r\n         \"resource.13.start\"\r\n        ],\r\n        \"model\": {\r\n         \"provider\": \"default\",\r\n         \"tagName\": \"edge\",\r\n         \"kind\": \"edge\"\r\n        },\r\n        \"style\": {\r\n         \"startArrow\": false,\r\n         \"endArrow\": true\r\n        }\r\n       },\r\n       {\r\n        \"id\": \"edge.19\",\r\n        \"sources\": [\r\n         \"resource.13.finish\"\r\n        ],\r\n        \"targets\": [\r\n         \"group.9.start\"\r\n        ],\r\n        \"model\": {\r\n         \"provider\": \"default\",\r\n         \"tagName\": \"edge\",\r\n         \"kind\": \"edge\"\r\n        },\r\n        \"style\": {\r\n         \"startArrow\": false,\r\n         \"endArrow\": true\r\n        }\r\n       },\r\n       {\r\n        \"id\": \"edge.20\",\r\n        \"sources\": [\r\n         \"group.9.finish\"\r\n        ],\r\n        \"targets\": [\r\n         \"resource.10.start\"\r\n        ],\r\n        \"model\": {\r\n         \"provider\": \"default\",\r\n         \"tagName\": \"edge\",\r\n         \"kind\": \"edge\"\r\n        },\r\n        \"style\": {\r\n         \"startArrow\": false,\r\n         \"endArrow\": true\r\n        }\r\n       },\r\n       {\r\n        \"id\": \"edge.21\",\r\n        \"sources\": [\r\n         \"resource.10.finish\"\r\n        ],\r\n        \"targets\": [\r\n         \"sequence.11.finish.port\"\r\n        ],\r\n        \"model\": {\r\n         \"provider\": \"default\",\r\n         \"tagName\": \"edge\",\r\n         \"kind\": \"edge\"\r\n        },\r\n        \"style\": {\r\n         \"startArrow\": false,\r\n         \"endArrow\": true\r\n        }\r\n       }\r\n      ],\r\n      \"parent\": {\r\n       \"id\": \"sequence.17\",\r\n       \"label\": \"sequence.17\",\r\n       \"model\": {\r\n        \"kind\": \"sequence\",\r\n        \"title\": \"sequence.17\",\r\n        \"direction\": null,\r\n        \"tagName\": \"sequence\",\r\n        \"id\": \"sequence.17\",\r\n        \"provider\": \"default\",\r\n        \"compound\": true,\r\n        \"data\": {\r\n         \"style\": {\r\n          \"className\": \"sequence\",\r\n          \"provider\": \"default\",\r\n          \"iconURL\": \"assets/icons/base/sequence-diagram-3-fill.svg\"\r\n         }\r\n        }\r\n       },\r\n       \"labels\": [\r\n        {\r\n         \"text\": \"sequence.17\",\r\n         \"properties\": {\r\n          \"nodeLabels.placement\": \"[V_TOP, H_LEFT, INSIDE]\"\r\n         }\r\n        }\r\n       ]\r\n      }\r\n     },\r\n     {\r\n      \"id\": \"resource.14\",\r\n      \"label\": \"c\",\r\n      \"model\": {\r\n       \"kind\": \"resource\",\r\n       \"title\": \"c\",\r\n       \"direction\": null,\r\n       \"tagName\": \"resource\",\r\n       \"id\": \"resource.14\",\r\n       \"provider\": \"default\",\r\n       \"compound\": false,\r\n       \"data\": {\r\n        \"style\": null\r\n       }\r\n      },\r\n      \"labels\": [],\r\n      \"ports\": [\r\n       {\r\n        \"id\": \"resource.14.start\",\r\n        \"label\": \"resource.14.start\",\r\n        \"model\": {\r\n         \"kind\": \"port\",\r\n         \"tagName\": \"port\",\r\n         \"compound\": false,\r\n         \"provider\": \"custom\",\r\n         \"id\": \"resource.14.start\"\r\n        },\r\n        \"labels\": []\r\n       },\r\n       {\r\n        \"id\": \"resource.14.finish\",\r\n        \"label\": \"resource.14.finish\",\r\n        \"model\": {\r\n         \"kind\": \"port\",\r\n         \"tagName\": \"port\",\r\n         \"compound\": false,\r\n         \"provider\": \"custom\",\r\n         \"id\": \"resource.14.finish\"\r\n        },\r\n        \"labels\": []\r\n       }\r\n      ],\r\n      \"children\": [],\r\n      \"edges\": [],\r\n      \"parent\": {\r\n       \"id\": \"sequence.17\",\r\n       \"label\": \"sequence.17\",\r\n       \"model\": {\r\n        \"kind\": \"sequence\",\r\n        \"title\": \"sequence.17\",\r\n        \"direction\": null,\r\n        \"tagName\": \"sequence\",\r\n        \"id\": \"sequence.17\",\r\n        \"provider\": \"default\",\r\n        \"compound\": true,\r\n        \"data\": {\r\n         \"style\": {\r\n          \"className\": \"sequence\",\r\n          \"provider\": \"default\",\r\n          \"iconURL\": \"assets/icons/base/sequence-diagram-3-fill.svg\"\r\n         }\r\n        }\r\n       },\r\n       \"labels\": [\r\n        {\r\n         \"text\": \"sequence.17\",\r\n         \"properties\": {\r\n          \"nodeLabels.placement\": \"[V_TOP, H_LEFT, INSIDE]\"\r\n         }\r\n        }\r\n       ]\r\n      }\r\n     },\r\n     {\r\n      \"id\": \"resource.15\",\r\n      \"label\": \"d\",\r\n      \"model\": {\r\n       \"kind\": \"resource\",\r\n       \"title\": \"d\",\r\n       \"direction\": null,\r\n       \"tagName\": \"resource\",\r\n       \"id\": \"resource.15\",\r\n       \"provider\": \"default\",\r\n       \"compound\": false,\r\n       \"data\": {\r\n        \"style\": null\r\n       }\r\n      },\r\n      \"labels\": [],\r\n      \"ports\": [\r\n       {\r\n        \"id\": \"resource.15.start\",\r\n        \"label\": \"resource.15.start\",\r\n        \"model\": {\r\n         \"kind\": \"port\",\r\n         \"tagName\": \"port\",\r\n         \"compound\": false,\r\n         \"provider\": \"custom\",\r\n         \"id\": \"resource.15.start\"\r\n        },\r\n        \"labels\": []\r\n       },\r\n       {\r\n        \"id\": \"resource.15.finish\",\r\n        \"label\": \"resource.15.finish\",\r\n        \"model\": {\r\n         \"kind\": \"port\",\r\n         \"tagName\": \"port\",\r\n         \"compound\": false,\r\n         \"provider\": \"custom\",\r\n         \"id\": \"resource.15.finish\"\r\n        },\r\n        \"labels\": []\r\n       }\r\n      ],\r\n      \"children\": [],\r\n      \"edges\": [],\r\n      \"parent\": {\r\n       \"id\": \"sequence.17\",\r\n       \"label\": \"sequence.17\",\r\n       \"model\": {\r\n        \"kind\": \"sequence\",\r\n        \"title\": \"sequence.17\",\r\n        \"direction\": null,\r\n        \"tagName\": \"sequence\",\r\n        \"id\": \"sequence.17\",\r\n        \"provider\": \"default\",\r\n        \"compound\": true,\r\n        \"data\": {\r\n         \"style\": {\r\n          \"className\": \"sequence\",\r\n          \"provider\": \"default\",\r\n          \"iconURL\": \"assets/icons/base/sequence-diagram-3-fill.svg\"\r\n         }\r\n        }\r\n       },\r\n       \"labels\": [\r\n        {\r\n         \"text\": \"sequence.17\",\r\n         \"properties\": {\r\n          \"nodeLabels.placement\": \"[V_TOP, H_LEFT, INSIDE]\"\r\n         }\r\n        }\r\n       ]\r\n      }\r\n     },\r\n     {\r\n      \"id\": \"resource.16\",\r\n      \"label\": \"e\",\r\n      \"model\": {\r\n       \"kind\": \"resource\",\r\n       \"title\": \"e\",\r\n       \"direction\": null,\r\n       \"tagName\": \"resource\",\r\n       \"id\": \"resource.16\",\r\n       \"provider\": \"default\",\r\n       \"compound\": false,\r\n       \"data\": {\r\n        \"style\": null\r\n       }\r\n      },\r\n      \"labels\": [],\r\n      \"ports\": [\r\n       {\r\n        \"id\": \"resource.16.start\",\r\n        \"label\": \"resource.16.start\",\r\n        \"model\": {\r\n         \"kind\": \"port\",\r\n         \"tagName\": \"port\",\r\n         \"compound\": false,\r\n         \"provider\": \"custom\",\r\n         \"id\": \"resource.16.start\"\r\n        },\r\n        \"labels\": []\r\n       },\r\n       {\r\n        \"id\": \"resource.16.finish\",\r\n        \"label\": \"resource.16.finish\",\r\n        \"model\": {\r\n         \"kind\": \"port\",\r\n         \"tagName\": \"port\",\r\n         \"compound\": false,\r\n         \"provider\": \"custom\",\r\n         \"id\": \"resource.16.finish\"\r\n        },\r\n        \"labels\": []\r\n       }\r\n      ],\r\n      \"children\": [],\r\n      \"edges\": [],\r\n      \"parent\": {\r\n       \"id\": \"sequence.17\",\r\n       \"label\": \"sequence.17\",\r\n       \"model\": {\r\n        \"kind\": \"sequence\",\r\n        \"title\": \"sequence.17\",\r\n        \"direction\": null,\r\n        \"tagName\": \"sequence\",\r\n        \"id\": \"sequence.17\",\r\n        \"provider\": \"default\",\r\n        \"compound\": true,\r\n        \"data\": {\r\n         \"style\": {\r\n          \"className\": \"sequence\",\r\n          \"provider\": \"default\",\r\n          \"iconURL\": \"assets/icons/base/sequence-diagram-3-fill.svg\"\r\n         }\r\n        }\r\n       },\r\n       \"labels\": [\r\n        {\r\n         \"text\": \"sequence.17\",\r\n         \"properties\": {\r\n          \"nodeLabels.placement\": \"[V_TOP, H_LEFT, INSIDE]\"\r\n         }\r\n        }\r\n       ]\r\n      }\r\n     }\r\n    ],\r\n    \"edges\": [\r\n     {\r\n      \"id\": \"edge.3\",\r\n      \"sources\": [\r\n       \"sequence.17.start.port\"\r\n      ],\r\n      \"targets\": [\r\n       \"resource.3.start\"\r\n      ],\r\n      \"model\": {\r\n       \"provider\": \"default\",\r\n       \"tagName\": \"edge\",\r\n       \"kind\": \"edge\"\r\n      },\r\n      \"style\": {\r\n       \"startArrow\": false,\r\n       \"endArrow\": true\r\n      }\r\n     },\r\n     {\r\n      \"id\": \"edge.4\",\r\n      \"sources\": [\r\n       \"sequence.17.start.port\"\r\n      ],\r\n      \"targets\": [\r\n       \"resource.4.start\"\r\n      ],\r\n      \"model\": {\r\n       \"provider\": \"default\",\r\n       \"tagName\": \"edge\",\r\n       \"kind\": \"edge\"\r\n      },\r\n      \"style\": {\r\n       \"startArrow\": false,\r\n       \"endArrow\": true\r\n      }\r\n     },\r\n     {\r\n      \"id\": \"edge.5\",\r\n      \"sources\": [\r\n       \"sequence.17.start.port\"\r\n      ],\r\n      \"targets\": [\r\n       \"sequence.11.start\"\r\n      ],\r\n      \"model\": {\r\n       \"provider\": \"default\",\r\n       \"tagName\": \"edge\",\r\n       \"kind\": \"edge\"\r\n      },\r\n      \"style\": {\r\n       \"startArrow\": false,\r\n       \"endArrow\": true\r\n      }\r\n     },\r\n     {\r\n      \"id\": \"edge.7\",\r\n      \"sources\": [\r\n       \"resource.3.finish\"\r\n      ],\r\n      \"targets\": [\r\n       \"edge.6.link\"\r\n      ],\r\n      \"model\": {\r\n       \"provider\": \"default\",\r\n       \"tagName\": \"edge\",\r\n       \"kind\": \"edge\"\r\n      },\r\n      \"style\": {\r\n       \"startArrow\": false,\r\n       \"endArrow\": true\r\n      }\r\n     },\r\n     {\r\n      \"id\": \"edge.8\",\r\n      \"sources\": [\r\n       \"resource.4.finish\"\r\n      ],\r\n      \"targets\": [\r\n       \"edge.6.link\"\r\n      ],\r\n      \"model\": {\r\n       \"provider\": \"default\",\r\n       \"tagName\": \"edge\",\r\n       \"kind\": \"edge\"\r\n      },\r\n      \"style\": {\r\n       \"startArrow\": false,\r\n       \"endArrow\": true\r\n      }\r\n     },\r\n     {\r\n      \"id\": \"edge.9\",\r\n      \"sources\": [\r\n       \"sequence.11.finish\"\r\n      ],\r\n      \"targets\": [\r\n       \"edge.6.link\"\r\n      ],\r\n      \"model\": {\r\n       \"provider\": \"default\",\r\n       \"tagName\": \"edge\",\r\n       \"kind\": \"edge\"\r\n      },\r\n      \"style\": {\r\n       \"startArrow\": false,\r\n       \"endArrow\": true\r\n      }\r\n     },\r\n     {\r\n      \"id\": \"edge.10\",\r\n      \"sources\": [\r\n       \"edge.6.link\"\r\n      ],\r\n      \"targets\": [\r\n       \"resource.14.start\"\r\n      ],\r\n      \"model\": {\r\n       \"provider\": \"default\",\r\n       \"tagName\": \"edge\",\r\n       \"kind\": \"edge\"\r\n      },\r\n      \"style\": {\r\n       \"startArrow\": false,\r\n       \"endArrow\": true\r\n      }\r\n     },\r\n     {\r\n      \"id\": \"edge.11\",\r\n      \"sources\": [\r\n       \"edge.6.link\"\r\n      ],\r\n      \"targets\": [\r\n       \"resource.15.start\"\r\n      ],\r\n      \"model\": {\r\n       \"provider\": \"default\",\r\n       \"tagName\": \"edge\",\r\n       \"kind\": \"edge\"\r\n      },\r\n      \"style\": {\r\n       \"startArrow\": false,\r\n       \"endArrow\": true\r\n      }\r\n     },\r\n     {\r\n      \"id\": \"edge.12\",\r\n      \"sources\": [\r\n       \"resource.14.finish\"\r\n      ],\r\n      \"targets\": [\r\n       \"resource.16.start\"\r\n      ],\r\n      \"model\": {\r\n       \"provider\": \"default\",\r\n       \"tagName\": \"edge\",\r\n       \"kind\": \"edge\"\r\n      },\r\n      \"style\": {\r\n       \"startArrow\": false,\r\n       \"endArrow\": true\r\n      }\r\n     },\r\n     {\r\n      \"id\": \"edge.13\",\r\n      \"sources\": [\r\n       \"resource.15.finish\"\r\n      ],\r\n      \"targets\": [\r\n       \"resource.16.start\"\r\n      ],\r\n      \"model\": {\r\n       \"provider\": \"default\",\r\n       \"tagName\": \"edge\",\r\n       \"kind\": \"edge\"\r\n      },\r\n      \"style\": {\r\n       \"startArrow\": false,\r\n       \"endArrow\": true\r\n      }\r\n     },\r\n     {\r\n      \"id\": \"edge.14\",\r\n      \"sources\": [\r\n       \"resource.16.finish\"\r\n      ],\r\n      \"targets\": [\r\n       \"sequence.17.finish.port\"\r\n      ],\r\n      \"model\": {\r\n       \"provider\": \"default\",\r\n       \"tagName\": \"edge\",\r\n       \"kind\": \"edge\"\r\n      },\r\n      \"style\": {\r\n       \"startArrow\": false,\r\n       \"endArrow\": true\r\n      }\r\n     }\r\n    ]\r\n   }\r\n  ]\r\n };","import './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'es6-promise/auto';  // polyfill Promise on IE\n\nimport * as diagram from './preview/diagram';\n\nimport { sample } from './sample.js';\n\nconst contentPane = document.getElementById('root');\nconst selectElt: HTMLSelectElement = (document.getElementById('select') as HTMLSelectElement);\nconst minimapContainer = document.getElementById('mini-map');\nminimapContainer?.setAttribute('class', 'minimap-container');\n\nconst renderer = diagram.createElkX6Renderer(contentPane, minimapContainer);\n\nfunction resizeWindow() {\n  \n  renderer.graph.resize(\n    window.document.documentElement.clientWidth,\n    window.document.documentElement.clientHeight - selectElt.offsetHeight\n  );\n\n  renderer.graph.centerContent();\n  renderer.graph.zoomToFit({ padding: 8 });\n  console.log('onresize');\n}\n\nlet listener: any = null;\nfunction updateSelection(values: any) {\n  // Populate select component from list of samples\n  // Recreate flow options\n  while (selectElt?.firstChild) {\n    selectElt.firstChild.remove();\n  }\n\n  values.forEach((value: any, key: any) => {\n    let opt = document.createElement('option');\n    opt.value = key;\n    opt.text = key;\n    selectElt?.add(opt);\n  });\n  if (listener != null) {\n    selectElt?.removeEventListener('change', listener);\n    listener = null;\n  }\n\n  const current = values.get(values.keys().next().value);\n  if (!(current instanceof Error) && !(typeof current === 'string')) {\n    // Display flow\n    // Update flow when the selection changes \n    if (listener == null) {\n      listener = (event: Event) => {\n        const result = values.get((event.target as any).value);\n        renderer.render(result);\n      };\n      selectElt?.addEventListener('change', listener);\n    }\n    selectElt.options[0].selected = true;\n    selectElt.value = selectElt.options[0].value;\n    selectElt.dispatchEvent(new Event('change'));\n\n  }\n}\n\nconst messageCallbackFn = function (event: any) {\n  if (event.data.jsonrpc !== undefined) {\n    console.log('event => ' + event.data.method);\n    if (event.data.method === 'view.update') {\n      // Convert entries array to map\n      renderer.render(event.data.params);\n    } else if (event.data.method === 'selection.update') {\n      // Convert entries array to map\n      updateSelection(event.data.params);\n    }\n  }\n};\n\nwindow.addEventListener('message', (event) => {\n  if (event.origin !== window.location.origin) {\n    return;\n  }\n  console.log('=> Window.onmessage' + event);\n  messageCallbackFn(event);\n\n}, false);\n\n\nwindow.addEventListener('resize', resizeWindow);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nrenderer.render(sample);\n\n"],"sourceRoot":""}