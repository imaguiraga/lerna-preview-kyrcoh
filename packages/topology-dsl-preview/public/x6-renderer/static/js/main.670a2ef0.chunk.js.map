{"version":3,"sources":["reportWebVitals.ts","../../topology-dsl-core/src/dsl/core-dsl/resource-base.js","../../topology-dsl-core/src/dsl/core-dsl/resource-elt.js","../../topology-dsl-core/src/dsl/core-dsl/base-icons-map.js","../../topology-dsl-core/src/dsl/core-dsl/resource-dsl.js","../../topology-dsl-core/src/dsl/core-dsl/util.js","preview/diagram/visitor/uid-flow-visitor.js","preview/diagram/visitor/util.js","preview/diagram/visitor/elk-diagram-generator.js","preview/diagram/visitor/elk-dimension-visitor.js","preview/diagram/elk/elk-layout-factory.js","preview/diagram/elk/x6-elk-renderer.js","sample.js","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","idGenFn","prefix","index","NODEIDGENFN","ResourceElt","elts","kind","tagName","provider","this","idGenIt","title","id","next","value","compound","direction","_start","_finish","data","name","eltsFrom","eltsTo","r","resolveElt","push","toString","isTerminal","val","result","undefined","Array","isArray","map","elt","filter","e","call","err","console","error","message","el","toElt","visitor","filterFn","visit","length","splice","tmp","split","join","key","from","to","CompositeResourceElt","initElts","forEach","WORKFLOW_PROVIDER","GROUP","GroupElt","FANOUT_FANIN","FanOutFanInElt","FANIN","FanInElt","FANOUT","FanOutElt","OPTIONAL","OptionalElt","REPEAT","RepeatElt","SEQUENCE","SequenceElt","BASE_ICONS_MAP","Map","className","iconURL","STYLE","fanOut_fanIn","_set_","get","choice","_tagName_","fanIn","merge","fanOut","branch","optional","repeat","oneOrMore","sequence","zeroOrMore","group","jsonToDslObject","o","start","Object","setPrototypeOf","prototype","v","START","FINISH","PORT","EDGE","DslToELKGenerator","edgeCntIt","tree","layoutOptions","children","_tree","FanOutFanInEltDslToELKGenerator","instance","visitGroup","FanInEltDslToELKGenerator","FanOutEltDslToELKGenerator","GroupEltDslToELKGenerator","OptionalEltDslToELKGenerator","visitOptional","SequenceEltDslToELKGenerator","visitSequence","RepeatEltDslToELKGenerator","visitRepeat","TerminalFlowEltDslToELKGenerator","visitTerminal","n","label","model","labels","text","properties","getPortModel","style","startArrow","endArrow","parent","getNodeModel","graph","ports","edges","finish","type","buildEdges","buildNodes","self","arr","a","ctree","accept","foundElt","getStart","getFinish","toArray","_sources_","_targets_","sources","targets","getEdgeModel","t","s","link","getSynthPortModel","links","buildLinks","i","ELKDimensionVisitor","nodeWidth","nodeHeight","iconWidth","portSize","labelHeight","_nodeWidth","_nodeHeight","_iconWidth","_portSize","_labelHeight","root","stack","width","height","x","y","len","w","Math","floor","nl","h","p","l","elkLayout","elkDimensionVisitor","elk","ELK","options","UNIT","layoutFn","inelkgraph","Promise","resolve","elkgraph","knownLayoutOptions","d","layout","logging","measureExecutionTime","elkLayoutRelative","elkNode","ax","ay","source","target","sections","junctionPoints","j","startPoint","endPoint","bendPoints","b","c","toAbsoluteElkLayoutIt","toAbsoluteElkLayout","newSize","arguments","nodeSize","newOptions","LINE","Graph","registerRouter","vertices","args","view","Point","create","EMPTY_ARRAY","RESOURCE_HTML","render","node","getData","wrap","document","createElement","display","iconPath","encodeURI","img","src","appendChild","textdiv","padding","margin","innerHTML","product","shouldComponentUpdate","hasChanged","toX6LayoutRec","elkLayoutNode","x6Layout","nodes","createX6Node","createX6Edge","attrs","body","class","fo","clazz","PORT_RADIUS","items","groups","abs","position","zIndex","circle","magnet","fontSize","fill","shape","rx","ry","html","createX6Label","strokeWidth","opacity","line","sourceMarker","size","targetMarker","regex1","regex2","match","cell","replace","port","bp","contentPane","getElementById","selectElt","minimapContainer","setAttribute","renderer","_container_","_minimap_","_width_","_height_","_iconWidth_","containerElt","x6Graph","scrollWidth","scrollHeight","container","grid","background","color","interacting","async","frozen","sorting","scroller","enabled","pannable","pageVisible","pageBreak","panning","modifiers","mousewheel","connecting","allowBlank","allowLoop","highlight","anchor","connector","connectionPoint","router","minimap","minScale","maxScale","on","isNode","addTools","useCellGeometry","stroke","strokeDasharray","fillOpacity","removeTools","createX6Graph","toElkLayout","lookup","set","buildNodeLookup","refreshLayoutFn","_elkgraph_","Date","getTime","fromJSON","unfreeze","progress","done","time","log","batchSize","zoomToFit","catch","collapsed","_children","_edges","diagram","listener","curParams","messageCallbackFn","event","jsonrpc","method","params","curSelection","values","has","firstChild","remove","opt","add","removeEventListener","addEventListener","dispatchEvent","Event","updateSelection","window","origin","location","resize","documentElement","clientWidth","clientHeight","offsetHeight","centerContent"],"mappings":"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","file":"static/js/main.670a2ef0.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/**\r\n * idGenFn function.\r\n */\r\nfunction* idGenFn(prefix, index) {\r\n  while (index >= 0) {\r\n    let reset = yield index++;\r\n    if (reset) {\r\n      index = 0;\r\n    }\r\n  }\r\n}\r\n\r\nexport const NODEIDGENFN = idGenFn('node.', 0);\r\n\r\n/**\r\n * Class ResourceElt.\r\n */\r\nexport class ResourceElt {\r\n  /**\r\n   * Create a ResourceElt.\r\n   * @param {object} elts - The elts value.\r\n   * @param {string} kind - The kind value.\r\n   * @param {string} tagName - The tagName value.\r\n   * @param {string} provider - The resource provider value.\r\n   */\r\n  constructor(elts, kind, tagName, provider) {\r\n    // Next Id Generator\r\n    this.idGenIt = NODEIDGENFN;\r\n    this.title = 'title';\r\n\r\n    //get new id\r\n    this.kind = kind || 'resource';\r\n    this.tagName = tagName || 'resource';\r\n    this.id = this.tagName + '.' + this.idGenIt.next().value;\r\n    this.provider = provider;\r\n    this.compound = false;\r\n\r\n    // Layout direction\r\n    this.direction = null;\r\n\r\n    this._start = null;\r\n    this._finish = null;\r\n\r\n    this.data = {};\r\n    this.name = this.id;\r\n    this.title = this.id;\r\n\r\n    this.elts = [];\r\n    this.eltsFrom = [];\r\n    this.eltsTo = [];\r\n\r\n    let r = this.resolveElt(elts);\r\n    if (r !== null) {\r\n      // only one elt can be added\r\n      this.elts.push(r);\r\n      this.title = r.toString();\r\n    }\r\n\r\n  }\r\n\r\n  _up_() {\r\n    this.direction = 'UP';\r\n    return this;\r\n  }\r\n\r\n  _down_() {\r\n    this.direction = 'DOWN';\r\n    return this;\r\n  }\r\n\r\n  _left_() {\r\n    this.direction = 'LEFT';\r\n    return this;\r\n  }\r\n\r\n  _right_() {\r\n    this.direction = 'RIGHT';\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Calls a defined callback function on each element of an array, and returns an array that contains the results.\r\n   * @param {(value: T, index: number, array: T[]) => U} callbackFn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\r\n   * @param {Object} thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\r\n   * @returns {U[]}\r\n   */\r\n\r\n\r\n  get start() {\r\n    if (this._start == null) {\r\n      this._start = {\r\n        kind: this.kind,\r\n        tagName: this.tagName,\r\n        id: this.id + '.start',\r\n        provider: this.provider,\r\n        compound: this.compound,\r\n        isTerminal: () => true,\r\n        elts: []\r\n      };\r\n    }\r\n\r\n    return this._start;\r\n  }\r\n\r\n  set start(val) {\r\n    this._start = val;\r\n  }\r\n\r\n  get finish() {\r\n    if (this._finish == null) {\r\n      this._finish = {\r\n        kind: this.kind,\r\n        tagName: this.tagName,\r\n        id: this.id + '.finish',\r\n        provider: this.provider,\r\n        compound: this.compound,\r\n        isTerminal: () => true,\r\n        elts: []\r\n      };\r\n    }\r\n    return this._finish;\r\n\r\n  }\r\n\r\n  set finish(val) {\r\n    this._finish = val;\r\n  }\r\n\r\n  isTerminal() {\r\n    return true;\r\n  }\r\n\r\n  isGroup() {\r\n    return (this.kind === 'group');\r\n  }\r\n\r\n  initElts(elts) {\r\n    let result = [];\r\n    if (elts === undefined || elts === null) {\r\n      return result;\r\n    }\r\n\r\n    if (Array.isArray(elts)) {\r\n      result = elts.map(\r\n        (elt) => { return this.resolveElt(elt); }, this\r\n      ).filter(e => { return e != null; }, this);\r\n\r\n    } else {\r\n      let r = this.resolveElt(elts);\r\n      if (r != null) {\r\n        result.push(r);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n// */\r\n  resolveElt(elt) {\r\n    // Only accept primitive types as Terminal Element \r\n    let result = null;\r\n    if (elt !== undefined) {\r\n      try {\r\n        if (typeof elt === 'function') {\r\n          result = elt.call();\r\n        }\r\n\r\n        if (typeof result === 'object' && elt instanceof ResourceElt) {\r\n          // Allow complex element as terminal\r\n          result = elt;\r\n\r\n        } else {\r\n          // primitive\r\n          result = elt.toString();\r\n        }\r\n\r\n      } catch (err) {\r\n        console.error(err.message + ' - ' + err);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  toElt(elt) {\r\n    let result = null;\r\n    if (elt !== undefined && elt !== null) {\r\n      result = elt;\r\n      if (result instanceof ResourceElt) {\r\n        return result;\r\n      } else {\r\n        try {\r\n          if (typeof elt === 'function') {\r\n            result = elt.call();\r\n          }\r\n\r\n          if (result instanceof ResourceElt) {\r\n            return result;\r\n          } else if (typeof result === 'object') {\r\n            // Allow complex element as terminal\r\n            if (Array.isArray(elt)) {\r\n              result = elt.map(\r\n                (el) => { return this.toElt(el); }, this\r\n              ).filter((el) => { return el != null; }, this);\r\n\r\n            } else {\r\n              result = this.toElt(elt);\r\n            }\r\n\r\n          } else {\r\n            // very likely a primitive type\r\n            result = new ResourceElt(elt, 'resource', 'resource', this.provider);\r\n          }\r\n\r\n        } catch (err) {\r\n          console.error(err.message + ' - ' + err);\r\n        }\r\n      }\r\n    }\r\n    // default to object\r\n    return result;\r\n  }\r\n\r\n  foundElt(elt) {\r\n    return this.id === elt.id;\r\n  }\r\n\r\n  accept(visitor, filterFn) {\r\n    return visitor.visit(this, filterFn);\r\n  }\r\n\r\n  _add_(elt) {\r\n    let r = this.resolveElt(elt);\r\n    if (r !== null) {\r\n      // only one elt can be added\r\n      if (this.elts.length > 0) {\r\n        this.elts.splice(0, this.elts.length);\r\n      }\r\n      this.elts.push(r);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  _tagName_(value) {\r\n    if (value) {\r\n      this.tagName = value;\r\n      // Replace prefix with tagName\r\n      let tmp = this.id.split('\\.');\r\n      tmp[0] = this.tagName;\r\n      this.id = tmp.join('.');\r\n    }\r\n    return this;\r\n  }\r\n\r\n  _title_(value) {\r\n    this.title = value;\r\n    return this;\r\n  }\r\n\r\n  _name_(value) {\r\n    this.name = value;\r\n    return this;\r\n  }\r\n\r\n  _id_(value) {\r\n    this.id = value;\r\n    return this;\r\n  }\r\n\r\n  _set_(key, value) {\r\n    this.data[key] = value;\r\n    return this;\r\n  }\r\n\r\n  _get_(key) {\r\n    return this.data[key];\r\n  }\r\n\r\n  // Inbound bindings\r\n  _in_(...elts) {\r\n    return this.from(elts);\r\n  }\r\n\r\n  // Outbound bindings\r\n  _out_(...elts) {\r\n    return this.to(elts);\r\n  }\r\n\r\n  to(...elts) {\r\n    this.eltsTo.push(this.toElt(elts));\r\n    return this;\r\n  }\r\n\r\n  from(...elts) {\r\n    this.eltsFrom.push(this.toElt(elts));\r\n    return this;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Class CompositeResourceElt.\r\n * @extends ResourceElt\r\n */\r\nexport class CompositeResourceElt extends ResourceElt {\r\n  /**\r\n   * Create a CompositeResourceElt.\r\n   * @param {object} elts - The elts value.\r\n   * @param {string} kind - The kind value.\r\n   * @param {string} tagName - The tagName value.\r\n   * @param {string} provider - The resource provider value.\r\n   */\r\n  constructor(elts, kind, tagName, provider) {\r\n    super(elts, kind, tagName, provider);\r\n    this.elts = [];\r\n    this.title = null;\r\n    this._start = null;\r\n    this._finish = null;\r\n    //this.start = new ResourceElt('start', 'resource', 'mark', provider);\r\n    //this.finish = new ResourceElt('finish', 'resource', 'mark', provider);\r\n    this.compound = true;\r\n\r\n    this.elts = this.initElts(elts);//this.resolveElt(elts);//\r\n\r\n    if (this.title === null) {\r\n      this.title = '' + this.id;\r\n    }\r\n  }\r\n\r\n  isTerminal() {\r\n    return false;\r\n  }\r\n\r\n  resolveElt(elt) {\r\n    return this.toElt(elt);\r\n  }\r\n\r\n  foundElt(elt) {\r\n    return this.elts.filter(e => e.id === elt.id, this).length > 0;\r\n  }\r\n\r\n  _add_(...elts) {\r\n    if (Array.isArray(elts)) {\r\n      elts.forEach((e) => {\r\n        let r = this.resolveElt(e);\r\n        if (r != null) {\r\n          this.elts.push(r);\r\n        }\r\n      }, this);\r\n\r\n    } else {\r\n      let r = this.resolveElt(elts);\r\n      if (r != null) {\r\n        this.elts.push(r);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n}\r\n","import {\r\n  CompositeResourceElt,\r\n  ResourceElt\r\n} from './resource-base.js';\r\n\r\nexport const WORKFLOW_KIND = 'workflow';\r\nexport const WORKFLOW_PROVIDER = 'default';\r\n\r\nconst GROUP = 'group';\r\n/**\r\n * Class GroupElt.\r\n * @extends CompositeResourceElt\r\n */\r\nexport class GroupElt extends CompositeResourceElt {\r\n  /**\r\n   * Create a SequenceElt.\r\n   * @param {object} elts - The elts value.\r\n   */\r\n  constructor(elts) {\r\n    super(elts, GROUP, GROUP, WORKFLOW_PROVIDER);\r\n  }\r\n\r\n}\r\n\r\nconst FANOUT_FANIN = 'fanOut_fanIn';\r\n/**\r\n * Class FanInFanOutElt.\r\n * @extends CompositeResourceElt\r\n */\r\nexport class FanOutFanInElt extends CompositeResourceElt {\r\n  /**\r\n   * Create a FanOutFanInElt.\r\n   * @param {object} elts - The elts value.\r\n   */\r\n  constructor(elts) {\r\n    super(elts, FANOUT_FANIN, FANOUT_FANIN, WORKFLOW_PROVIDER);\r\n  }\r\n\r\n}\r\n\r\nconst FANIN = 'fanIn';\r\n/**\r\n * Class FanInElt.\r\n * @extends CompositeResourceElt\r\n */\r\nexport class FanInElt extends CompositeResourceElt {\r\n  /**\r\n   * Create a FanInElt.\r\n   * @param {object} elts - The elts value.\r\n   */\r\n  constructor(elts) {\r\n    super(elts, FANIN, FANIN, WORKFLOW_PROVIDER);\r\n  }\r\n\r\n}\r\n\r\nconst FANOUT = 'fanOut';\r\n/**\r\n * Class FanOutElt.\r\n * @extends CompositeResourceElt\r\n */\r\nexport class FanOutElt extends CompositeResourceElt {\r\n  /**\r\n   * Create a FanOutElt.\r\n   * @param {object} elts - The elts value.\r\n   */\r\n  constructor(elts) {\r\n    super(elts, FANOUT, FANOUT, WORKFLOW_PROVIDER);\r\n  }\r\n\r\n}\r\n\r\nconst OPTIONAL = 'optional';\r\n/**\r\n * Class OptionalElt.\r\n * @extends CompositeResourceElt\r\n */\r\nexport class OptionalElt extends CompositeResourceElt {\r\n  /**\r\n   * Create a OptionalElt.\r\n   * @param {object} elts - The elts value.\r\n   */\r\n  constructor(elts) {\r\n    super(elts, OPTIONAL, OPTIONAL, WORKFLOW_PROVIDER);\r\n  }\r\n\r\n  _add_(elt) {\r\n    // only one elt can be added\r\n    if (this.elts.length > 0) {\r\n      this.elts.splice(0, this.elts.length);\r\n    }\r\n    this.elts.push(this.resolveElt(elt));\r\n    return this;\r\n  }\r\n}\r\n\r\nconst REPEAT = 'repeat';\r\n/**\r\n * Class RepeatElt.\r\n * @extends CompositeResourceElt\r\n */\r\nexport class RepeatElt extends CompositeResourceElt {\r\n  /**\r\n   * Create a RepeatElt.\r\n   * @param {object} elts - The elts value.\r\n   */\r\n  constructor(elts) {\r\n    super(elts, REPEAT, REPEAT, WORKFLOW_PROVIDER);\r\n  }\r\n\r\n  _add_(elt) {\r\n    // only one elt can be added\r\n    if (this.elts.length > 0) {\r\n      this.elts.splice(0, this.elts.length);\r\n    }\r\n    this.elts.push(this.resolveElt(elt));\r\n    return this;\r\n  }\r\n}\r\n\r\nconst SEQUENCE = 'sequence';\r\n/**\r\n * Class SequenceElt.\r\n * @extends CompositeResourceElt\r\n */\r\nexport class SequenceElt extends CompositeResourceElt {\r\n  /**\r\n   * Create a SequenceElt.\r\n   * @param {object} elts - The elts value.\r\n   */\r\n  constructor(elts) {\r\n    super(elts, SEQUENCE, SEQUENCE, WORKFLOW_PROVIDER);\r\n  }\r\n\r\n}\r\n\r\nconst RESOURCE = 'resource';\r\n/**\r\n * Class TerminalElt.\r\n */\r\nexport class TerminalElt extends ResourceElt {\r\n\r\n  /**\r\n   * Create a TerminalElt.\r\n   * @param {object} elt - The elt value.\r\n   */\r\n  constructor(elt) {\r\n    super(elt, RESOURCE, RESOURCE, WORKFLOW_PROVIDER);\r\n  }\r\n\r\n}\r\n","export const WORKFLOW_KIND = 'workflow';\r\nexport const WORKFLOW_PROVIDER = 'default';\r\n\r\nexport const BASE_ICONS_MAP = new Map([\r\n  ['fanOut_fanIn', { className: 'fanOut_fanIn', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanOut_fanIn-diagram-3-fill.svg' }],\r\n  ['choice', { className: 'choice', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanOut_fanIn-diagram-3-fill.svg' }],\r\n  ['fanIn', { className: 'fanIn', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanIn-diagram-3-fill.svg' }],\r\n  ['merge', { className: 'merge', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanIn-diagram-3-fill.svg' }],\r\n  ['fanOut', { className: 'fanOut', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanOut-diagram-3-fill.svg' }],\r\n  ['branch', { className: 'branch', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanOut-diagram-3-fill.svg' }],\r\n  ['split', { className: 'split', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanOut-diagram-3-fill.svg' }],\r\n  ['tree', { className: 'tree', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanOut-diagram-3-fill.svg' }],\r\n  ['link', { className: 'link', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanOut-diagram-3-fill.svg' }],\r\n  ['use', { className: 'use', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanOut-diagram-3-fill.svg' }],\r\n  ['parallel', { className: 'parallel', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanOut-diagram-3-fill.svg' }],\r\n  ['optional', { className: 'optional', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/optional-question-square-fill.svg' }],\r\n  ['repeat', { className: 'repeat', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/repeat-bootstrap-reboot.svg' }],\r\n  ['sequence', { className: 'sequence', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/sequence-diagram-3-fill.svg' }],\r\n  ['resource', null],\r\n  ['state', null],\r\n  ['zeroOrMore', { className: 'zeroOrMore', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/repeat-bootstrap-reboot.svg' }],\r\n  ['oneOrMore', { className: 'oneOrMore', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/repeat-bootstrap-reboot.svg' }],\r\n  ['group', { className: 'group', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/group-grid-fill.svg' }]\r\n]\r\n);","import {\r\n  FanOutFanInElt,\r\n  FanInElt,\r\n  FanOutElt,\r\n  OptionalElt,\r\n  RepeatElt,\r\n  SequenceElt,\r\n  TerminalElt,\r\n  GroupElt\r\n} from './resource-elt.js';\r\n\r\nimport { BASE_ICONS_MAP } from './base-icons-map';\r\nimport { ResourceElt } from './resource-base.js';\r\nconst STYLE = 'style';\r\n/**\r\n * Create a fanOut_fanIn dsl tree.\r\n * @param {array|object} elts - The elements.\r\n * @return {object} flow dsl.\r\n */\r\nexport function fanOut_fanIn(...elts) {\r\n  return new FanOutFanInElt([...elts])._set_(STYLE, BASE_ICONS_MAP.get('fanOut_fanIn'));\r\n}\r\n\r\nexport function choice(...elts) {\r\n  return fanOut_fanIn(...elts)._tagName_('choice')._set_(STYLE, BASE_ICONS_MAP.get('choice'));\r\n}\r\n\r\n/**\r\n * Create a fanIn dsl tree.\r\n * @param {array|object} elts - The elements.\r\n * @return {object} flow dsl.\r\n */\r\nexport function fanIn(...elts) {\r\n  return new FanInElt([...elts])._set_(STYLE, BASE_ICONS_MAP.get('fanIn'));\r\n}\r\n\r\nexport function merge(...elts) {\r\n  return fanIn(...elts)._tagName_('fanIn')._set_(STYLE, BASE_ICONS_MAP.get('merge'));\r\n}\r\n\r\n/**\r\n * Create a fanOut dsl tree.\r\n * @param {array|object} elts - The elements.\r\n * @return {object} flow dsl.\r\n */\r\nexport function fanOut(...elts) {\r\n  return new FanOutElt([...elts])._set_(STYLE, BASE_ICONS_MAP.get('fanOut'));\r\n}\r\n\r\nexport function branch(...elts) {\r\n  return fanOut(...elts)._tagName_('branch')._set_(STYLE, BASE_ICONS_MAP.get('branch'));\r\n}\r\n\r\nexport function split(...elts) {\r\n  return fanOut(...elts)._tagName_('split')._set_(STYLE, BASE_ICONS_MAP.get('split'));\r\n}\r\n\r\nexport function tree(...elts) {\r\n  return fanOut(...elts)._tagName_('tree')._set_(STYLE, BASE_ICONS_MAP.get('tree'));\r\n}\r\n\r\nexport function link(...elts) {\r\n  return fanOut(...elts)._tagName_('link')._set_(STYLE, BASE_ICONS_MAP.get('link'));\r\n}\r\n\r\nexport function use(...elts) {\r\n  return fanOut(...elts)._tagName_('use')._set_(STYLE, BASE_ICONS_MAP.get('use'));\r\n}\r\n\r\nexport function parallel(...elts) {\r\n  return fanOut(...elts)._tagName_('parallel')._set_(STYLE, BASE_ICONS_MAP.get('parallel'));\r\n}\r\n\r\n/**\r\n * Create an optional dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} flow dsl.\r\n */\r\nexport function optional(elt) {\r\n  return new OptionalElt(elt)._set_(STYLE, BASE_ICONS_MAP.get('optional'));\r\n}\r\n\r\n/**\r\n * Create a repeat dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} flow dsl.\r\n */\r\nexport function repeat(elt) {\r\n  return new RepeatElt(elt)._set_(STYLE, BASE_ICONS_MAP.get('repeat'));\r\n}\r\n\r\nexport function oneOrMore(elt) {\r\n  return repeat(elt)._set_(STYLE, BASE_ICONS_MAP.get('oneOrMore'));\r\n}\r\n\r\n/**\r\n * Create a sequence dsl tree.\r\n * @param {array|object} elts - The elements.\r\n * @return {object} flow dsl.\r\n */\r\nexport function sequence(...elts) {\r\n  return new SequenceElt([...elts])._set_(STYLE, BASE_ICONS_MAP.get('sequence'));\r\n}\r\n\r\nexport function process(...elts) {\r\n  return sequence(...elts)._tagName_('process')._set_(STYLE, BASE_ICONS_MAP.get('process'));\r\n}\r\n\r\nexport function activity(...elts) {\r\n  return sequence(...elts)._tagName_('activity')._set_(STYLE, BASE_ICONS_MAP.get('activity'));\r\n}\r\n\r\n/**\r\n * Create a terminal dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} flow dsl.\r\n */\r\nexport function terminal(elt) {\r\n  return new TerminalElt(elt)._set_(STYLE, BASE_ICONS_MAP.get('resource'));\r\n}\r\n\r\nexport function transition(elt) {\r\n  return terminal(elt)._tagName_('transition')._set_(STYLE, BASE_ICONS_MAP.get('transition'));\r\n}\r\n\r\n/**\r\n * Create a state dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} flow dsl.\r\n */\r\nexport function state(elt) {\r\n  return terminal(elt)._tagName_('state')._set_(STYLE, BASE_ICONS_MAP.get('state'));\r\n}\r\n\r\n/**\r\n * Create a zeroOrMore dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} flow dsl.\r\n */\r\nexport function zeroOrMore(elt) {\r\n  return optional(repeat(elt))._set_(STYLE, BASE_ICONS_MAP.get('zeroOrMore'));\r\n}\r\n\r\n/**\r\n * Create a resource dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} resource dsl.\r\n */\r\nexport function resource(...elt) {\r\n  if (elt.length > 1) {\r\n    return group(...elt);\r\n  } else {\r\n    return terminal(elt[0])._tagName_('resource')._set_(STYLE, BASE_ICONS_MAP.get('resource'));\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Create a group dsl tree.\r\n * @param {object} elts - The elements.\r\n * @return {object} group dsl.\r\n */\r\nexport function group(...elts) {\r\n  return new GroupElt([...elts])._set_(STYLE, BASE_ICONS_MAP.get('group'));\r\n}\r\n\r\n/**\r\n * Create a block dsl tree.\r\n * @param {object} elts - The elements.\r\n * @return {object} group dsl.\r\n */\r\nexport function block(...elts) {\r\n  return group(...elt)._tagName_('block')._set_(STYLE, BASE_ICONS_MAP.get('group'));\r\n}\r\n\r\n// pipeline -> stages -> jobs -> tasks -> steps \r\n\r\n// Extend ResourceElt prototype\r\nResourceElt.prototype.choice = function (...elts) {\r\n  let elt = choice(elts);\r\n  this.to(elt);\r\n  return elt;\r\n\r\n};\r\n\r\nResourceElt.prototype.group = function (...elts) {\r\n  let elt = group(elts);\r\n  this.to(elt);\r\n  return elt;\r\n\r\n};\r\n\r\nResourceElt.prototype.sequence = function (...elts) {\r\n  let elt = sequence(elts);\r\n  this.to(elt);\r\n  return elt;\r\n\r\n};\r\n\r\nResourceElt.prototype.optional = function (...elts) {\r\n  let elt = optional(elts);\r\n  this.to(elt);\r\n  return elt;\r\n\r\n};\r\n\r\nResourceElt.prototype.repeat = function (...elts) {\r\n  let elt = repeat(elts);\r\n  this.to(elt);\r\n  return elt;\r\n\r\n};\r\n\r\nResourceElt.prototype.merge = function (...elts) {\r\n  let elt = merge(elts);\r\n  this.to(elt);\r\n  return elt;\r\n\r\n};\r\n\r\nResourceElt.prototype.branch = function (...elts) {\r\n  let elt = branch(elts);\r\n  this.to(elt);\r\n  return elt;\r\n\r\n};\r\n\r\nResourceElt.prototype.fanIn = function (...elts) {\r\n  let elt = fanIn(elts);\r\n  this.to(elt);\r\n  return elt;\r\n\r\n};\r\n\r\nResourceElt.prototype.fanOut = function (...elts) {\r\n  let elt = fanOut(elts);\r\n  this.to(elt);\r\n  return elt;\r\n\r\n};\r\n\r\nResourceElt.prototype.zeroOrMore = function (...elts) {\r\n  let elt = zeroOrMore(elts);\r\n  this.to(elt);\r\n  return elt;\r\n\r\n};\r\n\r\nResourceElt.prototype.oneOrMore = function (...elts) {\r\n  let elt = oneOrMore(elts);\r\n  this.to(elt);\r\n  return elt;\r\n\r\n};","import {\r\n  ResourceElt,\r\n  CompositeResourceElt\r\n} from './resource-base.js';\r\n\r\nexport function isContainer(n) {\r\n  return (n.children && n.children != null && n.children.length > 0) ||\r\n    (n && n.model && n.model.compound === true);\r\n}\r\n\r\nexport function clone_bak(obj) {\r\n  let copy = Object.create(Object.getPrototypeOf(obj), Object.getOwnPropertyDescriptors(obj));\r\n  return copy;\r\n}\r\n\r\n// Reset ids\r\nexport function resetIds(obj, idx) {\r\n  if (obj.id) {\r\n    // Append a suffix\r\n    obj.id = obj.id + '_' + idx;\r\n\r\n    if (obj._start !== null) {\r\n      obj._start.id = obj._start.id + '_' + idx;\r\n    }\r\n    if (obj._finish !== null) {\r\n      obj._finish.id = obj._finish.id + '_' + idx;\r\n    }\r\n  }\r\n  return obj;\r\n}\r\n\r\n// Clone and reset ids\r\nexport function clone(obj, idx) {\r\n  if (obj === undefined || obj === null) {\r\n    return obj;\r\n  }\r\n  let copy = Object.create(Object.getPrototypeOf(obj), Object.getOwnPropertyDescriptors(obj));\r\n  // Deep copy\r\n  if (copy.compound) {\r\n    if (Array.isArray(copy.elts)) {\r\n      copy.elts = copy.elts.map((elt) => {\r\n        return clone(elt, idx);\r\n      });\r\n    }\r\n  }\r\n\r\n  if (copy._start !== null) {\r\n    copy._start = clone(copy._start, idx);\r\n  }\r\n  if (copy._finish !== null) {\r\n    copy._finish = clone(copy._finish, idx);\r\n  }\r\n\r\n  return resetIds(copy, idx);\r\n}\r\n\r\n// This is an assign function that copies full descriptors\r\nexport function completeAssign(target, ...sources) {\r\n  sources.forEach(source => {\r\n    let descriptors = Object.keys(source).reduce((descriptors, key) => {\r\n      descriptors[key] = Object.getOwnPropertyDescriptor(source, key);\r\n      return descriptors;\r\n    }, {});\r\n\r\n    // By default, Object.assign copies enumerable Symbols, too\r\n    Object.getOwnPropertySymbols(source).forEach(sym => {\r\n      let descriptor = Object.getOwnPropertyDescriptor(source, sym);\r\n      if (descriptor.enumerable) {\r\n        descriptors[sym] = descriptor;\r\n      }\r\n    });\r\n    Object.defineProperties(target, descriptors);\r\n  });\r\n  return target;\r\n}\r\n//*/\r\n\r\nexport function jsonToDslObject(o) {\r\n  let result = o;\r\n  if (o.start === undefined) {\r\n    if (o.compound) {\r\n      Object.setPrototypeOf(o, CompositeResourceElt.prototype);\r\n    } else {\r\n      Object.setPrototypeOf(o, ResourceElt.prototype);\r\n    }\r\n    if (Array.isArray(result.elts)) {\r\n      // Recursively enrich elts\r\n      result.elts = result.elts.map((v) => {\r\n        return jsonToDslObject(v);\r\n      });\r\n    }\r\n  }\r\n  return result;\r\n}\r\n","import {\r\n  jsonToDslObject\r\n} from '@imaguiraga/topology-dsl-core';\r\n/**\r\n * Class FlowUIDVisitor.\r\n */\r\nexport class FlowUIDVisitor {\r\n  /**\r\n   * Create a FlowUIDVisitor.\r\n   * @param {string} prefix - The UID prefix.\r\n   */\r\n  constructor(prefix) {\r\n    this._prefix = prefix || 'UID';\r\n  }\r\n\r\n  visit(_tree, filterFn) {\r\n    if (typeof _tree === 'undefined' || _tree === null) {\r\n      return null;\r\n    }\r\n    let tree = _tree;\r\n\r\n    // Add start finish properties if missing\r\n    tree = jsonToDslObject(tree);\r\n    return tree; // Skip UID rename\r\n  }\r\n\r\n  _visit_(_tree, filterFn) {\r\n    if (typeof _tree === 'undefined' || _tree === null) {\r\n      return null;\r\n    }\r\n    let tree = _tree;\r\n\r\n    // Add start finish properties if missing\r\n    tree = jsonToDslObject(tree);\r\n\r\n    // Non terminal nodes have start and finish\r\n    if (!tree.isTerminal()) {\r\n      tree.start.id = this._prefix + '_' + tree.subType + '_start';\r\n      tree.finish.id = this._prefix + '_' + tree.subType + '_finish';\r\n    }\r\n\r\n    tree.elts.filter(elt => elt instanceof Object).forEach(\r\n      (elt, index) => {\r\n        // keep only terminal nodes\r\n        let p = this._prefix.concat('_' + index);\r\n        elt.id = p + '_' + elt.subType;\r\n        elt.accept(new FlowUIDVisitor(p), null);\r\n      });\r\n    return tree;\r\n  }\r\n\r\n}\r\n","\r\n/**\r\n * Class FlowToELKVisitor.\r\n */\r\nexport function* idGenFn(prefix, index) {\r\n  while (index >= 0) {\r\n    yield prefix + index;\r\n    index++;\r\n  }\r\n}\r\n\r\nexport function isIconFn(n) {\r\n  return (n && n.model && n.model.tagName === 'mark');\r\n}\r\n\r\nexport function isDefaultResourceFn(n) {\r\n  return (n && n.model && n.model.tagName === 'resource');\r\n}\r\n\r\n// Reset ids\r\nexport function resetIds(obj, idx) {\r\n  if (obj.id) {\r\n    // Append a suffix\r\n    obj.id = obj.id + '_' + idx;\r\n\r\n    if (obj._start !== null) {\r\n      obj._start.id = obj._start.id + '_' + idx;\r\n    }\r\n    if (obj._finish !== null) {\r\n      obj._finish.id = obj._finish.id + '_' + idx;\r\n    }\r\n  }\r\n  return obj;\r\n}\r\n\r\n// Clone and reset ids\r\nexport function clone(obj, idx) {\r\n  if (obj === undefined || obj === null) {\r\n    return obj;\r\n  }\r\n  let copy = Object.create(Object.getPrototypeOf(obj), Object.getOwnPropertyDescriptors(obj));\r\n  // Deep copy\r\n  if (copy.compound) {\r\n    if (Array.isArray(copy.elts)) {\r\n      copy.elts = copy.elts.map((elt) => {\r\n        return clone(elt, idx);\r\n      });\r\n    }\r\n  }\r\n\r\n  if (copy._start !== null) {\r\n    copy._start = clone(copy._start, idx);\r\n  }\r\n  if (copy._finish !== null) {\r\n    copy._finish = clone(copy._finish, idx);\r\n  }\r\n\r\n  return resetIds(copy, idx);\r\n}","import {\r\n  idGenFn\r\n} from './util.js';\r\n\r\nimport {\r\n  jsonToDslObject\r\n} from '@imaguiraga/topology-dsl-core';\r\n\r\nconst SEQUENCE = 'sequence';\r\nconst OPTIONAL = 'optional';\r\nconst REPEAT = 'repeat';\r\nconst START = 'start';\r\nconst FINISH = 'finish';\r\nconst PORT = 'port';\r\nconst EDGE = 'edge';\r\n\r\nconst FANOUT_FANIN = 'fanOut_fanIn';\r\nconst FANIN = 'fanIn';\r\nconst FANOUT = 'fanOut';\r\nconst GROUP = 'group';\r\nconst RESOURCE = 'resource';\r\nexport class DslToELKGenerator {\r\n  constructor() {\r\n    this.edgeCntIt = idGenFn(`${EDGE}.`, 0);\r\n  }\r\n\r\n  toElkGraph(tree, filterFn) {\r\n    return {\r\n      id: '$root',\r\n      layoutOptions: {\r\n        'algorithm': 'layered',\r\n        'elk.hierarchyHandling': 'SEPARATE_CHILDREN',\r\n      },\r\n      children: [\r\n        this.visit(tree, filterFn)\r\n      ]\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Convert a dsl tree to ELK Graph.\r\n   * @param {object} tree - The dsl tree.\r\n   * @param {function} filterFn - The dsl filterFn function.\r\n   * @return {object} ELK graph.\r\n   */\r\n  visit(_tree, filterFn) {\r\n    if (_tree === undefined || _tree === null) {\r\n      return null;\r\n    }\r\n    let tree = _tree;\r\n    // Add start finish properties if missing\r\n    tree = jsonToDslObject(tree);\r\n\r\n    let result = null;\r\n    if (tree === undefined || tree === null) {\r\n      return result;\r\n    }\r\n    if (tree.compound) {\r\n      switch (tree.kind) {\r\n        case FANOUT_FANIN:\r\n          result = FanOutFanInEltDslToELKGenerator.instance.visitGroup(this, tree, filterFn, tree.kind);\r\n          break;\r\n        case FANIN:\r\n          result = FanInEltDslToELKGenerator.instance.visitGroup(this, tree, filterFn, tree.kind);\r\n          break;\r\n        case FANOUT:\r\n          result = FanOutEltDslToELKGenerator.instance.visitGroup(this, tree, filterFn, tree.kind);\r\n          break;\r\n        case GROUP:\r\n          result = GroupEltDslToELKGenerator.instance.visitGroup(this, tree, filterFn, tree.kind);\r\n          break;\r\n        case OPTIONAL:\r\n          result = OptionalEltDslToELKGenerator.instance.visitOptional(this, tree, filterFn);\r\n          break;\r\n        case SEQUENCE:\r\n          result = SequenceEltDslToELKGenerator.instance.visitSequence(this, tree, filterFn);\r\n          break;\r\n        case REPEAT:\r\n          result = RepeatEltDslToELKGenerator.instance.visitRepeat(this, tree, filterFn);\r\n          break;\r\n        case RESOURCE:\r\n          result = TerminalFlowEltDslToELKGenerator.instance.visitTerminal(this, tree, filterFn);\r\n          break;\r\n        default:\r\n          console.error('==> WARNING: ' + tree.kind + ' type was not found');\r\n          break;\r\n      }\r\n\r\n    } else {\r\n      result = TerminalFlowEltDslToELKGenerator.instance.visitTerminal(this, tree, filterFn);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  getNodeModel(n) {\r\n    let r = {\r\n      id: n.id,\r\n      label: n.title,\r\n      model: {\r\n        kind: n.kind,\r\n        title: n.title,\r\n        direction: n.direction,\r\n        tagName: n.tagName,\r\n        id: n.id,\r\n        provider: n.provider,\r\n        compound: n.compound,\r\n        data: n.data\r\n      },\r\n      // use label for container elt\r\n      labels: n.isTerminal() ? [] : [\r\n        {\r\n          text: n.title || n.id,\r\n          properties: {\r\n            // 'nodeLabels.placement': '[V_TOP, H_LEFT, OUTSIDE]',\r\n            'nodeLabels.placement': '[V_TOP, H_LEFT, INSIDE]',\r\n          }\r\n        }\r\n      ]\r\n    };\r\n    // Layout direction\r\n    if (n.direction !== null) {\r\n      r.layoutOptions = {\r\n        'org.eclipse.elk.direction': n.direction\r\n      };\r\n    }\r\n    return r;\r\n  }\r\n\r\n  getPortModel(n) {\r\n    let r = {\r\n      id: n.id,\r\n      label: n.id,\r\n      model: {\r\n        kind: PORT,\r\n        tagName: PORT,\r\n        compound: false,\r\n        provider: 'custom',\r\n        id: n.id,\r\n        data: n.data\r\n      },\r\n      // use label for container elt\r\n      labels: n.isTerminal() ? [] : [\r\n        {\r\n          text: n.title || n.id\r\n        }\r\n      ]\r\n    };\r\n    return r;\r\n  }\r\n\r\n  getSynthPortModel(n, tagName = PORT) {\r\n    let r = this.getPortModel(n);\r\n    r.model.tagName = tagName;\r\n    r.id = r.id + `.${PORT}`;\r\n    r.model.id = r.id;\r\n    r.model.compound = false;\r\n    return r;\r\n  }\r\n\r\n  getEdgeModel(n) {\r\n    let r = {\r\n      model: {\r\n        provider: n.provider,\r\n        tagName: EDGE,\r\n        kind: EDGE\r\n      },\r\n      style: {\r\n        startArrow: false,\r\n        endArrow: true,\r\n      }\r\n    };\r\n    return r;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Class TerminalFlowEltDslToELKGenerator.\r\n */\r\nclass TerminalFlowEltDslToELKGenerator {\r\n  static instance = new TerminalFlowEltDslToELKGenerator();\r\n\r\n  /**\r\n   * Convert a dsl tree to ctree Graph graph.\r\n   * @param {object} visitor - The dsl tree visitor.\r\n   * @param {object} tree - The dsl tree.\r\n   * @param {function} filterFn - The dsl filterFn function.\r\n   * @return {object} ctree Graph graph.\r\n   */\r\n  visitTerminal(visitor, tree, filterFn) {\r\n    const parent = visitor.getNodeModel(tree);\r\n    const graph = {\r\n      ...parent,\r\n      ports: [],\r\n      children: [],\r\n      edges: []\r\n    };\r\n    // start + finish nodes\r\n    graph.ports.push(visitor.getPortModel(tree.start));\r\n    graph.ports.push(visitor.getPortModel(tree.finish));\r\n\r\n    // Check if the only element is not a string \r\n    if (typeof tree.elts[0] === 'object') {\r\n      let n = visitor.getNodeModel(tree);\r\n      n.parent = parent;\r\n      if (filterFn) {\r\n        if (!filterFn(n)) {\r\n          graph.children.push(n);\r\n        }\r\n      } else {\r\n        graph.children.push(n);\r\n      }\r\n    }\r\n    return graph;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Class GroupEltDslToELKGenerator.\r\n */\r\nclass GroupEltDslToELKGenerator {\r\n  static instance = new GroupEltDslToELKGenerator();\r\n  /**\r\n   * Convert a dsl tree to ctree Graph graph.\r\n   * @param {object} visitor - The dsl tree visitor.\r\n   * @param {object} tree - The dsl tree.\r\n   * @param {function} filterFn - The dsl filterFn function.\r\n   * @return {object} ctree Graph graph.\r\n   */\r\n  visitGroup(visitor, tree, filterFn, type) {\r\n    //const type = 'choice' | 'parallel';\r\n    const parent = visitor.getNodeModel(tree);\r\n    const graph = {\r\n      ...parent,\r\n      ports: [],\r\n      children: [],\r\n      edges: []\r\n    };\r\n    //\r\n    if (tree.kind !== type) {\r\n      return graph;\r\n    }\r\n    // start + finish nodes\r\n    graph.ports.push(visitor.getPortModel(tree.start));\r\n    graph.ports.push(visitor.getPortModel(tree.finish));\r\n\r\n    this.buildEdges(tree, graph, visitor, type);\r\n\r\n    // concatenate graphs\r\n    // nodes\r\n    const self = this;\r\n    this.buildNodes(tree.elts, tree, graph, visitor, parent, filterFn);\r\n\r\n    return graph;\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  buildEdges(tree, graph, visitor, type) {\r\n    //NOOP\r\n  }\r\n\r\n  buildNodes(elts, tree, graph, visitor, parent, filterFn) {\r\n    const self = this;\r\n    elts.forEach(elt => {\r\n      let arr = [];\r\n      if (Array.isArray(elt)) {\r\n        arr = elt;\r\n      } else {\r\n        arr.push(elt);\r\n      }\r\n\r\n      arr.forEach((a) => {\r\n        if (Array.isArray(a)) {\r\n          this.buildNodes(a, tree, graph, visitor, parent, filterFn);\r\n        } else {\r\n          let ctree = a.accept === undefined ? a : a.accept(visitor, n => tree.foundElt(n));\r\n          if (ctree !== null) {\r\n            ctree.parent = parent;\r\n            if (filterFn) {\r\n              if (!filterFn(ctree)) {\r\n                graph.children.push(ctree);\r\n              }\r\n            } else {\r\n              graph.children.push(ctree);\r\n            }\r\n          }\r\n        }\r\n\r\n      }, self);\r\n\r\n    }, self);\r\n  }\r\n\r\n  getStart(elts) {\r\n    let result = [];\r\n    if (Array.isArray(elts)) {\r\n      result = elts.map((elt) => {\r\n        if (Array.isArray(elt)) {\r\n          return this.getStart(elt);\r\n        } else {\r\n          return elt.start.id;\r\n        }\r\n      }, this);\r\n    } else {\r\n      result = [elts.start.id];\r\n    }\r\n    return result;\r\n  }\r\n\r\n  getFinish(elts) {\r\n    let result = [];\r\n    if (Array.isArray(elts)) {\r\n      result = elts.map((elt) => {\r\n        if (Array.isArray(elt)) {\r\n          return this.getFinish(elt);\r\n        } else {\r\n          return elt.finish.id;\r\n        }\r\n      }, this);\r\n\r\n    } else {\r\n      result = [elts.finish.id];\r\n    }\r\n    return result;\r\n  }\r\n\r\n  toArray(elts) {\r\n    let result = [];\r\n    if (Array.isArray(elts)) {\r\n      elts.forEach((elt) => {\r\n        result.push(...this.toArray(elt));\r\n      })\r\n\r\n    } else {\r\n      result.push(elts);\r\n    }\r\n    return result;\r\n\r\n  }\r\n\r\n  buildLinks(_sources_, _targets_, graph, tree, visitor) {\r\n    // Expand in case the element is an array\r\n    let sources = this.toArray(_sources_);\r\n    let targets = this.toArray(_targets_);\r\n\r\n    if (sources.length === 1 && targets.length === 1) {\r\n      graph.edges.push({\r\n        id: `${visitor.edgeCntIt.next().value}`,\r\n        sources: sources,\r\n        targets: targets,\r\n        ...visitor.getEdgeModel(tree),\r\n      });\r\n\r\n    } else if (sources.length === 1 && targets.length > 1) {\r\n      targets.forEach((t) => {\r\n        graph.edges.push({\r\n          id: `${visitor.edgeCntIt.next().value}`,\r\n          sources: sources,\r\n          targets: [t],\r\n          ...visitor.getEdgeModel(tree),\r\n        });\r\n      });\r\n\r\n    } else if (sources.length > 1 && targets.length === 1) {\r\n      sources.forEach((s) => {\r\n        graph.edges.push({\r\n          id: `${visitor.edgeCntIt.next().value}`,\r\n          sources: [s],\r\n          targets: targets,\r\n          ...visitor.getEdgeModel(tree),\r\n        });\r\n      });\r\n    } else if (sources.length > 1 && targets.length > 1) {\r\n\r\n      // n -> n => n -> 1 -> n\r\n      // add synthetic link clone\r\n      const link = visitor.getSynthPortModel(tree.start, START);\r\n      link.id = `${visitor.edgeCntIt.next().value}.link`;\r\n      // link.model.tagName = 'mark';\r\n      graph.children.push(link);\r\n      let links = [link.id];\r\n\r\n      this.buildLinks(sources, links, graph, tree, visitor);\r\n      this.buildLinks(links, targets, graph, tree, visitor);\r\n\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Class SequenceEltDslToELKGenerator.\r\n */\r\nclass SequenceEltDslToELKGenerator extends GroupEltDslToELKGenerator {\r\n  static instance = new SequenceEltDslToELKGenerator();\r\n  /**\r\n   * Convert a dsl tree to ctree Graph graph.\r\n   * @param {object} visitor - The dsl tree visitor.\r\n   * @param {object} tree - The dsl tree.\r\n   * @param {function} filterFn - The dsl filterFn function.\r\n   * @return {object} ctree Graph graph.\r\n   */\r\n  visitSequence(visitor, tree, filterFn) {\r\n    return this.visitGroup(visitor, tree, filterFn, SEQUENCE);\r\n  }\r\n\r\n  buildEdges(tree, graph, visitor, type) {\r\n    if (type !== SEQUENCE) {\r\n      return;\r\n    }\r\n\r\n    const start = visitor.getSynthPortModel(tree.start, START);\r\n    graph.children.push(start);\r\n    const finish = visitor.getSynthPortModel(tree.finish, FINISH);\r\n    graph.children.push(finish);\r\n\r\n    // edges\r\n\r\n    // start -> elts\r\n    let sources = [start.id];\r\n    let targets = this.getStart(tree.elts[0]);\r\n\r\n    this.buildLinks(sources, targets, graph, tree, visitor);\r\n\r\n    // elts -> elts\r\n    for (let i = 0; i < tree.elts.length - 1; i++) {\r\n      sources = this.getFinish(tree.elts[i]);\r\n      targets = this.getStart(tree.elts[i + 1]);\r\n\r\n      this.buildLinks(sources, targets, graph, tree, visitor);\r\n\r\n    }\r\n\r\n    // elts -> finish\r\n    sources = this.getFinish(tree.elts[tree.elts.length - 1]);\r\n    targets = [finish.id];\r\n\r\n    this.buildLinks(sources, targets, graph, tree, visitor);\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * Class FanOutEltDslToELKGenerator.\r\n */\r\nclass FanOutEltDslToELKGenerator extends GroupEltDslToELKGenerator {\r\n  static instance = new FanOutEltDslToELKGenerator();\r\n\r\n  buildEdges(tree, graph, visitor, type) {\r\n    if (type !== FANOUT) {\r\n      return;\r\n    }\r\n    const start = visitor.getSynthPortModel(tree.start, START);\r\n    graph.children.push(start);\r\n\r\n    //edges\r\n    (tree.elts || []).forEach((elt) => {\r\n      // start -> elts\r\n      let sources = [start.id];\r\n      let targets = this.getStart(elt);\r\n\r\n      this.buildLinks(sources, targets, graph, tree, visitor);\r\n\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Class FanInEltDslToELKGenerator.\r\n */\r\nclass FanInEltDslToELKGenerator extends GroupEltDslToELKGenerator {\r\n  static instance = new FanInEltDslToELKGenerator();\r\n\r\n  buildEdges(tree, graph, visitor, type) {\r\n    if (type !== FANIN) {\r\n      return;\r\n    }\r\n    const finish = visitor.getSynthPortModel(tree.finish, FINISH);\r\n    graph.children.push(finish);\r\n    // edges\r\n    (tree.elts || []).forEach((elt) => {\r\n      // elts -> finish\r\n      let sources = this.getFinish(elt);\r\n      let targets = [finish.id];\r\n\r\n      this.buildLinks(sources, targets, graph, tree, visitor);\r\n\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Class FanOutFanInEltDslToELKGenerator.\r\n */\r\nclass FanOutFanInEltDslToELKGenerator extends GroupEltDslToELKGenerator {\r\n  static instance = new FanOutFanInEltDslToELKGenerator();\r\n\r\n  buildEdges(tree, graph, visitor, type) {\r\n    if (type !== FANOUT_FANIN) {\r\n      return;\r\n    }\r\n    const start = visitor.getSynthPortModel(tree.start, START);\r\n    graph.children.push(start);\r\n    const finish = visitor.getSynthPortModel(tree.finish, FINISH);\r\n    graph.children.push(finish);\r\n    // edges\r\n    (tree.elts || []).forEach((elt) => {\r\n\r\n      // start -> elts\r\n      let sources = [start.id];\r\n      let targets = this.getStart(elt);\r\n\r\n      this.buildLinks(sources, targets, graph, tree, visitor);\r\n\r\n      // elts -> finish\r\n      sources = this.getFinish(elt);\r\n      targets = [finish.id];\r\n\r\n      this.buildLinks(sources, targets, graph, tree, visitor);\r\n\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Class OptionalEltDslToELKGenerator.\r\n */\r\nclass OptionalEltDslToELKGenerator extends GroupEltDslToELKGenerator {\r\n  static instance = new OptionalEltDslToELKGenerator();\r\n  /**\r\n   * Convert a dsl tree to ctree Graph graph.\r\n   * @param {object} visitor - The dsl tree visitor.\r\n   * @param {object} tree - The dsl tree.\r\n   * @param {function} filterFn - The dsl filterFn function.\r\n   * @return {object} ctree Graph graph.\r\n   */\r\n  visitOptional(visitor, tree, filterFn) {\r\n    return this.visitGroup(visitor, tree, filterFn, OPTIONAL);\r\n  }\r\n\r\n  buildEdges(tree, graph, visitor, type) {\r\n    if (type !== OPTIONAL) {\r\n      return;\r\n    }\r\n\r\n    const start = visitor.getSynthPortModel(tree.start, START);\r\n    graph.children.push(start);\r\n    const finish = visitor.getSynthPortModel(tree.finish, FINISH);\r\n    graph.children.push(finish);\r\n\r\n    if (tree.elts.length > 0) {\r\n      // start -> elts\r\n      let sources = [start.id];\r\n      let targets = this.getStart(tree.elts[0]);\r\n\r\n      this.buildLinks(sources, targets, graph, tree, visitor);\r\n\r\n      // start -> finish\r\n      sources = [start.id];\r\n      targets = [finish.id];\r\n\r\n      this.buildLinks(sources, targets, graph, tree, visitor);\r\n\r\n      // elts -> finish\r\n      sources = this.getFinish(tree.elts);\r\n      targets = [finish.id];\r\n\r\n      this.buildLinks(sources, targets, graph, tree, visitor);\r\n\r\n    }\r\n\r\n  }\r\n}\r\n\r\n/**\r\n * Class RepeatEltDslToELKGenerator.\r\n */\r\nclass RepeatEltDslToELKGenerator extends GroupEltDslToELKGenerator {\r\n  static instance = new RepeatEltDslToELKGenerator();\r\n\r\n  /**\r\n   * Convert a dsl tree to ctree Graph graph.\r\n   * @param {object} visitor - The dsl tree visitor.\r\n   * @param {object} tree - The dsl tree.\r\n   * @param {function} filterFn - The dsl filterFn function.\r\n   * @return {object} ctree Graph graph.\r\n   */\r\n  visitRepeat(visitor, tree, filterFn) {\r\n    return this.visitGroup(visitor, tree, filterFn, REPEAT);\r\n  }\r\n\r\n  buildEdges(tree, graph, visitor, type) {\r\n    if (type !== REPEAT) {\r\n      return;\r\n    }\r\n\r\n    const start = visitor.getSynthPortModel(tree.start, START);\r\n    graph.children.push(start);\r\n    const finish = visitor.getSynthPortModel(tree.finish, FINISH);\r\n    graph.children.push(finish);\r\n\r\n    // edges\r\n    if (tree.elts.length > 0) {\r\n\r\n      // start -> elts\r\n      let sources = [start.id];\r\n      let targets = this.getStart(tree.elts);\r\n\r\n      this.buildLinks(sources, targets, graph, tree, visitor);\r\n\r\n      // elts -> finish\r\n      sources = this.getFinish(tree.elts);\r\n      targets = [finish.id];\r\n\r\n      this.buildLinks(sources, targets, graph, tree, visitor);\r\n\r\n      // elts -> elts\r\n      sources = this.getFinish(tree.elts);\r\n      targets = [tree.elts[0].id];\r\n      // targets = this.getStart(tree.elts);\r\n\r\n      this.buildLinks(sources, targets, graph, tree, visitor);\r\n\r\n    }\r\n\r\n  }\r\n}\r\n","import {\r\n  isContainer\r\n} from '@imaguiraga/topology-dsl-core';\r\n\r\nconst UNIT = 8;\r\nexport class ELKDimensionVisitor {\r\n  constructor(\r\n    nodeWidth = (6 * UNIT),\r\n    nodeHeight = (4 * UNIT),\r\n    iconWidth = (2 * UNIT),\r\n    portSize = UNIT,\r\n    labelHeight = (2 * UNIT)\r\n  ) {\r\n    this._nodeWidth = nodeWidth;\r\n    this._nodeHeight = nodeHeight;\r\n    this._iconWidth = iconWidth;\r\n    this._portSize = portSize;\r\n    this._labelHeight = labelHeight;\r\n  }\r\n\r\n  nodeWidth(value) {\r\n    if (value !== undefined & value !== null) {\r\n      this._nodeWidth = value;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  nodeHeight(value) {\r\n    if (value !== undefined & value !== null) {\r\n      this._nodeHeight = value;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  labelHeight(value) {\r\n    if (value !== undefined & value !== null) {\r\n      this._labelHeight = value;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  iconWidth(value) {\r\n    if (value !== undefined & value !== null) {\r\n      this._iconWidth = value;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  portSize(value) {\r\n    if (value !== undefined & value !== null) {\r\n      this._portSize = value;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  visit(root) {\r\n    const stack = [root];\r\n    // FIFO\r\n    let i = 0;\r\n    while (i < stack.length) {\r\n      let tree = stack[i]; i++;\r\n      // Reset dimensions\r\n      if (tree === undefined || tree === null) {\r\n        return null;\r\n      }\r\n      if (tree.width !== undefined) {\r\n        delete tree.width;\r\n      }\r\n      if (tree.height !== undefined) {\r\n        delete tree.height;\r\n      }\r\n      if (tree.x !== undefined) {\r\n        delete tree.x;\r\n      }\r\n      if (tree.y !== undefined) {\r\n        delete tree.y;\r\n      }\r\n\r\n      // Set Node dimensions\r\n      if (isContainer(tree)) {\r\n        // Set node properties\r\n        tree.properties = {\r\n          'nodeLabels.placement': '[H_LEFT, V_TOP, INSIDE]'\r\n        };\r\n\r\n      } else {\r\n        // Terminal Nodes dimensions\r\n        const tagName = tree.model.tagName;\r\n        const style = (tree.model.data !== undefined) ? tree.model.data.style : null;\r\n        if (tagName === 'port' || tagName === 'start' || tagName === 'finish') {\r\n          tree.width = 1 * this._portSize;\r\n          tree.height = tree.width;\r\n\r\n        } else if (tagName === 'mark') {\r\n          tree.width = 0;// 2 * this._portSize;\r\n          tree.height = tree.width;\r\n\r\n        } else {\r\n          tree.width = 2 * this._nodeWidth;\r\n          tree.height = this._nodeHeight;\r\n          // Nodes with no style \r\n          if (style === undefined || style === null) {\r\n            let len = tree.model.title.length;\r\n            // Pt to Px 4/3\r\n            let w = Math.floor((len * UNIT * 2) / 3 + 6 * UNIT);\r\n            tree.width = w;\r\n            // How many lines\r\n            let nl = tree.model.title.split('\\n').length;\r\n            let h = Math.floor(nl * UNIT * 4 / 3) + 4 * UNIT;\r\n            tree.height = h;\r\n\r\n          }\r\n        }\r\n      }\r\n\r\n      // Set port dimensions\r\n      if (Array.isArray(tree.ports)) {\r\n        tree.ports.forEach((p) => {\r\n          p.width = 0;// this._portSize;\r\n          p.height = p.width;\r\n        }, this);\r\n\r\n      }\r\n\r\n      // Set label dimensions\r\n      if (Array.isArray(tree.labels)) {\r\n        tree.labels.forEach((l) => {\r\n          l.height = 2 * this._labelHeight;\r\n          //l.width = 3 * this._nodeWidth;\r\n        }, this);\r\n      }\r\n\r\n      if (Array.isArray(tree.children)) {\r\n        tree.children.forEach((n) => {\r\n          //this.visit(n);\r\n          stack.push(n);\r\n        }, this);\r\n      }\r\n    }\r\n    return root;\r\n  }\r\n\r\n}","//const ELK = require('elkjs');\r\nimport ELK from 'elkjs/lib/elk.bundled.js';\r\n\r\nimport {\r\n  DslToELKGenerator,\r\n  ELKDimensionVisitor\r\n} from '../visitor/index.js';\r\n\r\nconst elkGenerator = new DslToELKGenerator();\r\nconst UNIT = 8;\r\n\r\nexport function toElkGraph(dslObject) {\r\n  let elkgraph = null;\r\n  try {\r\n    // dslObject to elkgraph\r\n    elkgraph = elkGenerator.toElkGraph(dslObject);\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n  return elkgraph;\r\n}\r\n\r\nexport function elkLayout() {\r\n  const elkDimensionVisitor = new ELKDimensionVisitor();\r\n  const elk = new ELK();\r\n  let options = {\r\n    'algorithm': 'layered',\r\n    //'hierarchyHandling': 'SEPARATE_CHILDREN',\r\n    'nodePlacement.strategy': 'SIMPLE',//'NETWORK_SIMPLEX', //'BRANDES_KOEPF'\r\n    'org.eclipse.elk.direction': 'RIGHT',\r\n    'port.borderOffset': UNIT / 4,\r\n    'padding': 2 * UNIT,\r\n    'edgeRouting': 'ORTHOGONAL',\r\n    'layered.mergeEdges': true,\r\n    'zoomToFit': true,\r\n    'spacing': 4 * UNIT,\r\n    'spacing.nodeNodeBetweenLayers': 4 * UNIT,\r\n    'spacing.edgeNodeBetweenLayers': 4 * UNIT,\r\n    'spacing.edgeEdgeBetweenLayers': 4 * UNIT,\r\n    //'layering.strategy': 'LONGEST_PATH', 'NETWORK_SIMPLEX'\r\n    'layering.strategy': 'COFFMAN_GRAHAM ',\r\n    'org.eclipse.elk.spacing.nodeSelfLoop': 3 * UNIT,\r\n    'spacing.labelNode': UNIT\r\n  };\r\n  //https://www.eclipse.org/elk/reference/options/org-eclipse-elk-layered-layering-strategy.html\r\n  //https://www.eclipse.org/elk/reference/options/org-eclipse-elk-layered-nodeplacement-strategy.html\r\n  function layoutFn(inelkgraph) {\r\n    if (inelkgraph === null) {\r\n      return Promise.resolve(null);\r\n    }\r\n    // Add node width.height\r\n    let elkgraph = elkDimensionVisitor.visit(inelkgraph);\r\n    if (elkgraph === null) {\r\n      return Promise.resolve(null);\r\n    }\r\n    // console.log(JSON.stringify(elkgraph, null, '  '));\r\n\r\n    elk.knownLayoutOptions().then((d) => {\r\n      //console.log(d);\r\n    });\r\n    // start the layout\r\n    let elkpromise = elk.layout(elkgraph, {\r\n      layoutOptions: options,\r\n      logging: false,\r\n      measureExecutionTime: false\r\n    }).then((elkLayoutRelative) => {\r\n      const elkLayoutAbsolute = toAbsoluteElkLayout(elkLayoutRelative);\r\n      //console.log(elkLayoutAbsolute);\r\n      return elkLayoutAbsolute;\r\n    });\r\n\r\n    return elkpromise;\r\n  }\r\n\r\n  layoutFn.nodeHeight = function (newSize) {\r\n    if (!arguments.length) return elkDimensionVisitor._nodeHeight;\r\n    elkDimensionVisitor.nodeHeight(newSize);\r\n    return this;\r\n  };\r\n\r\n  layoutFn.nodeWidth = function (newSize) {\r\n    if (!arguments.length) return elkDimensionVisitor._nodeWidth;\r\n    elkDimensionVisitor.nodeWidth(newSize);\r\n    return this;\r\n  };\r\n\r\n  layoutFn.nodeSize = function (width, height) {\r\n    if (!arguments.length) return [elkDimensionVisitor._nodeWidth, elkDimensionVisitor._nodeHeight];\r\n\r\n    elkDimensionVisitor.nodeWidth(width);\r\n    elkDimensionVisitor.nodeHeight(height || width);\r\n\r\n    return this;\r\n  };\r\n\r\n  layoutFn.portSize = function (newSize) {\r\n    if (!arguments.length) return elkDimensionVisitor._portSize;\r\n    elkDimensionVisitor.portSize(newSize);\r\n    return this;\r\n  };\r\n\r\n  layoutFn.options = function (newOptions) {\r\n    if (!arguments.length) {\r\n      return options;\r\n    }\r\n    options = newOptions;\r\n    return this;\r\n  };\r\n\r\n  return layoutFn;\r\n}\r\n\r\nexport function toAbsoluteElkLayout(elkLayout) {\r\n  return toAbsoluteElkLayoutIt(elkLayout);\r\n}\r\n\r\nfunction toAbsoluteElkLayoutRec(elkNode, x0 = 0, y0 = 0) {\r\n  // Clone node \r\n  const n = elkNode;\r\n  // absolute coordinate\r\n  n.ax = n.x + x0;\r\n  n.ay = n.y + y0;\r\n\r\n  (n.labels || []).forEach((l) => {\r\n    // absolute coordinate\r\n    l.ax = l.x + x0;\r\n    l.ay = l.y + y0;\r\n  });\r\n\r\n  (elkNode.edges || []).forEach((e) => {\r\n    const t = e;\r\n    // absolute coordinate\r\n    t.source = e.sources[0];\r\n    t.target = e.targets[0];\r\n\r\n    // Update sections\r\n    (t.sections || []).forEach((s) => {\r\n      // junctionPoints\r\n      (s.junctionPoints || []).forEach((j) => {\r\n        j.ax = j.x + n.ax;\r\n        j.ay = j.y + n.ay;\r\n      });\r\n\r\n      // startPoint\r\n      s.startPoint.ax = s.startPoint.x + n.ax;\r\n      s.startPoint.ay = s.startPoint.y + n.ay;\r\n      // endPoint\r\n      s.endPoint.ax = s.endPoint.x + n.ax;\r\n      s.endPoint.ay = s.endPoint.y + n.ay;\r\n      // bendPoints\r\n      (s.bendPoints || []).forEach((b) => {\r\n        b.ax = b.x + n.ax;\r\n        b.ay = b.y + n.ay;\r\n      });\r\n    });\r\n\r\n  });\r\n\r\n  (elkNode.ports || []).forEach((p) => {\r\n    // absolute coordinate\r\n    p.ax = p.x + n.ax;\r\n    p.ay = p.y + n.ay;\r\n  });\r\n\r\n  (elkNode.children || []).forEach((c) => {\r\n    toAbsoluteElkLayoutRec(c, n.ax, n.ay);\r\n  });\r\n\r\n  return n;\r\n  //*/\r\n}\r\n\r\nexport function buildNodeLookup(elkNode) {\r\n  const index = new Map();\r\n\r\n  const stack = [elkNode];\r\n  // FIFO\r\n  let i = 0;\r\n  while (i < stack.length) {\r\n    //let n = stack.pop();\r\n    let n = stack[i];\r\n    i++;\r\n    index.set(n.id, n);\r\n\r\n    (n.ports || []).forEach((p) => {\r\n      stack.push(p);\r\n    });\r\n\r\n    (n.children || []).forEach((c) => {\r\n      stack.push(c);\r\n    });\r\n  }\r\n  return index;\r\n}\r\n\r\nfunction toAbsoluteElkLayoutIt(elkNode) {\r\n  // absolute coordinate\r\n  elkNode.ax = elkNode.x;\r\n  elkNode.ay = elkNode.y;\r\n  const stack = [elkNode];\r\n\r\n  let i = 0;\r\n  // FIFO\r\n  while (i < stack.length) {\r\n    let n = stack[i];\r\n    i++;\r\n    (n.labels || []).forEach((l) => {\r\n      // absolute coordinate\r\n      l.ax = l.x + n.ax;\r\n      l.ay = l.y + n.ay;\r\n    });\r\n\r\n    (n.edges || []).forEach((e) => {\r\n      const t = e;\r\n      // absolute coordinate\r\n      t.source = e.sources[0];\r\n      t.target = e.targets[0];\r\n\r\n      // Update sections\r\n      (t.sections || []).forEach((s) => {\r\n        // junctionPoints\r\n        (s.junctionPoints || []).forEach((j) => {\r\n          j.ax = j.x + n.ax;\r\n          j.ay = j.y + n.ay;\r\n        });\r\n\r\n        // startPoint\r\n        s.startPoint.ax = s.startPoint.x + n.ax;\r\n        s.startPoint.ay = s.startPoint.y + n.ay;\r\n        // endPoint\r\n        s.endPoint.ax = s.endPoint.x + n.ax;\r\n        s.endPoint.ay = s.endPoint.y + n.ay;\r\n        // bendPoints\r\n        (s.bendPoints || []).forEach((b) => {\r\n          b.ax = b.x + n.ax;\r\n          b.ay = b.y + n.ay;\r\n        });\r\n      });\r\n\r\n    });\r\n\r\n    (n.ports || []).forEach((p) => {\r\n      // absolute coordinate\r\n      p.ax = p.x + n.ax;\r\n      p.ay = p.y + n.ay;\r\n    });\r\n\r\n    (n.children || []).forEach((c) => {\r\n      c.ax = c.x + n.ax;\r\n      c.ay = c.y + n.ay;\r\n      stack.push(c);\r\n    });\r\n  }\r\n  return elkNode;\r\n}","import './style/x6-elk-style.css';\r\n\r\nimport { Graph, Shape, Point, Node, Edge } from '@antv/x6';\r\nimport { elkLayout, buildNodeLookup } from './elk-layout-factory';\r\n\r\nfunction lineRouter(vertices/*: Point.PointLike[]*/, args/*: RandomRouterArgs*/, view/*: EdgeView*/) {\r\n  const points = vertices.map((p) => Point.create(p));\r\n  return points;\r\n}\r\nconst LINE = 'line';\r\nconst DEBUG = false;\r\n\r\nGraph.registerRouter(LINE, lineRouter);\r\n\r\nconst UNIT = 8;\r\nconst EMPTY_ARRAY = [];\r\nexport function createElkX6Renderer(_container_, _minimap_, _width_, _height_, _iconWidth_) {\r\n\r\n  let containerElt = (typeof _container_ === 'string') ? document.getElementById(_container_) : _container_;\r\n\r\n  const width = (_width_ || containerElt.scrollWidth || 800);\r\n  const height = (_height_ || containerElt.scrollHeight || 800);\r\n\r\n  const x6Graph = createX6Graph(containerElt, _minimap_, width, height);\r\n  const toElkLayout = elkLayout();\r\n  toElkLayout.nodeSize(10 * UNIT).portSize(UNIT);\r\n\r\n  function render(elkgraph) {\r\n    if (elkgraph === null || elkgraph === undefined) {\r\n      return Promise.resolve(null);\r\n    }\r\n\r\n    const lookup = buildNodeLookup(elkgraph);\r\n\r\n    function refreshLayoutFn(_elkgraph_) {\r\n      return toElkLayout(_elkgraph_).then((elkLayout) => {\r\n        // Clear and redraw\r\n        // reset diagram\r\n        if (DEBUG) {\r\n          console.log(JSON.stringify(elkLayout, null, ' '));\r\n        }\r\n        const x6Layout = toX6Layout(elkLayout);\r\n        if (DEBUG) {\r\n          console.log(x6Layout);\r\n          console.log(JSON.stringify(x6Layout, null, ' '));\r\n        }\r\n        const start = new Date().getTime()\r\n        x6Graph.fromJSON(x6Layout);\r\n        x6Graph.unfreeze({\r\n          progress({ done }) {\r\n            if (done) {\r\n              const time = new Date().getTime() - start;\r\n              console.log(time)\r\n              x6Graph.unfreeze({\r\n                batchSize: 50,\r\n              })\r\n              x6Graph.zoomToFit({ padding: 8 })\r\n            }\r\n          },\r\n        })\r\n        return x6Graph;\r\n      }).catch((e) => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    const toggleCollapseNode = function (d) {\r\n      if (d === undefined || d === null) {\r\n        return;\r\n      }\r\n      // is expanded\r\n      if (d.model.compound || d.collapsed === true) {\r\n        if (d.collapsed !== true) {\r\n          // Remove children and edges \r\n          d._children = d.children;\r\n          d.children = EMPTY_ARRAY;\r\n\r\n          d._edges = d.edges;\r\n          d.edges = null;\r\n          d.model.compound = false;\r\n          d.collapsed = true;\r\n\r\n        } else {\r\n          // Restore children and edges\r\n          d.children = d._children;\r\n          d._children = null;\r\n\r\n          d.edges = d._edges;\r\n          d._edges = null;\r\n          d.model.compound = true;\r\n          d.collapsed = false;\r\n        }\r\n\r\n        refreshLayoutFn(elkgraph);\r\n      }\r\n    };\r\n\r\n    x6Graph.on('node:dblclick', ({ e, x, y, node, view }) => {\r\n      if (DEBUG) {\r\n        console.log(node);\r\n      }\r\n      const elkLayoutNode = lookup.get(node.id);\r\n      toggleCollapseNode(elkLayoutNode);\r\n    });\r\n\r\n    //*/\r\n    return refreshLayoutFn(elkgraph);\r\n  }\r\n\r\n  return {\r\n    render,\r\n    graph: x6Graph\r\n  };\r\n}\r\n\r\nexport function toX6Layout(elkLayoutNode) {\r\n  return toX6LayoutRec(elkLayoutNode);\r\n}\r\n\r\nconst RESOURCE_HTML = {\r\n  render(node) { //: Cell\r\n    const model = node.getData(); //as any\r\n    const style = model.data.style;// IconPath\r\n\r\n    const wrap = document.createElement('div');\r\n    wrap.style.display = 'flex';\r\n\r\n    let iconPath = (style !== undefined && style !== null) ? encodeURI(style.iconURL) : null;\r\n    // If icon exists\r\n    if (iconPath !== undefined && iconPath !== null) {\r\n      const img = document.createElement('img');\r\n\r\n      img.src = iconPath;\r\n      img.width = (model.compound === undefined || model.compound === true ? model.height : model.height / 2) - UNIT;\r\n      img.height = img.width;\r\n      wrap.appendChild(img);\r\n    }\r\n\r\n    const textdiv = document.createElement('div');\r\n    textdiv.style.padding = UNIT / 2;\r\n    textdiv.style.display = 'inline-block';\r\n    textdiv.style.margin = 'auto';\r\n\r\n    textdiv.innerHTML =\r\n      (style && style.product ? `<div><code>${style.product}</code></div>` : '') +\r\n      `<div><code class='resource-title'>${model !== undefined ? model.title : ''}</code></div>`\r\n      ;\r\n    wrap.appendChild(textdiv);\r\n\r\n    return wrap;\r\n  },\r\n  shouldComponentUpdate(node) { //: Cell\r\n    return node.hasChanged('data');\r\n  },\r\n};\r\n\r\nfunction toX6LayoutRec(elkLayoutNode, x6Layout = { nodes: [], edges: [] }) {\r\n  // Clone node \r\n  const n = createX6Node(elkLayoutNode, x6Layout);\r\n\r\n  const children = [];\r\n  (elkLayoutNode.children || []).forEach((c) => {\r\n    children.push(c.id);\r\n    toX6LayoutRec(c, x6Layout);\r\n  });\r\n\r\n  if (children.length > 0) {\r\n    n.children = children;\r\n  }\r\n\r\n  // Edges\r\n  (elkLayoutNode.edges || []).forEach((e) => {\r\n    const t = createX6Edge(e, x6Layout);\r\n  });\r\n  return x6Layout;\r\n}\r\n\r\nfunction createX6Node(elkLayoutNode, x6Layout) {\r\n  let model = elkLayoutNode.model || {};\r\n  const n = {\r\n    id: elkLayoutNode.id,\r\n    //label: elkLayoutNode.label,\r\n    data: {\r\n      ...model,\r\n      width: elkLayoutNode.width,\r\n      height: elkLayoutNode.height\r\n    },\r\n    x: elkLayoutNode.ax,\r\n    y: elkLayoutNode.ay,\r\n    width: elkLayoutNode.width,\r\n    height: elkLayoutNode.height,\r\n    attrs: {\r\n      body: {\r\n        class: 'node',\r\n      },\r\n      fo: {\r\n        class: 'node',\r\n      }\r\n    },\r\n  };\r\n  n.data.width = elkLayoutNode.width;\r\n  n.data.height = elkLayoutNode.height;\r\n\r\n  const clazz = ['node'];\r\n  if (elkLayoutNode.model !== undefined) {\r\n    clazz.push(elkLayoutNode.model.provider);\r\n    clazz.push(elkLayoutNode.model.kind);\r\n    clazz.push(elkLayoutNode.model.tagName);\r\n  }\r\n  n.attrs.body.class = clazz.join(' ');\r\n\r\n  // Ports\r\n  let PORT_RADIUS = 0;\r\n  const ports = (elkLayoutNode.ports || []);\r\n  const items = ports.map((p) => {\r\n    PORT_RADIUS = p.width / 2;\r\n    const r = {\r\n      group: 'abs',\r\n      id: p.id,\r\n      args: {\r\n        x: p.x + PORT_RADIUS,\r\n        y: p.y + PORT_RADIUS\r\n      },\r\n      data: p.model\r\n    };\r\n    return r;\r\n  });\r\n\r\n  if (ports.length > 0) {\r\n    n.ports = {\r\n      items: items,\r\n      groups: {\r\n        abs: {\r\n          position: {\r\n            name: 'absolute'\r\n          },\r\n          zIndex: 10,\r\n          attrs: {\r\n            circle: {\r\n              class: 'port',\r\n              r: PORT_RADIUS,\r\n              magnet: false,\r\n            },\r\n            text: {\r\n              fontSize: 0.8 * UNIT,\r\n              fill: '#444'\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  //node_modules\\@antv\\x6\\lib\\shape\\standard\\html.d.ts\r\n  // Port rendering\r\n  const children = (elkLayoutNode.children || []);\r\n  const tagName = n.data.tagName;\r\n  if (tagName === 'port' || tagName === 'start' || tagName === 'finish' || tagName === 'mark') {\r\n    n.label = null;\r\n    n.data.compound = undefined;\r\n    n.shape = 'rect';\r\n    n.attrs = {\r\n      body: {\r\n        class: n.data.tagName,\r\n      },\r\n      text: {\r\n        fontSize: 0.8 * UNIT,\r\n        fill: '#444'\r\n      }\r\n    };\r\n    // Round corners\r\n    if (tagName === 'mark') {\r\n      n.label = null;// n.data.title;\r\n      n.attrs.body.rx = 0;// UNIT / 2;\r\n      n.attrs.body.ry = 0;// UNIT / 2;\r\n    }\r\n\r\n  } else {\r\n    if (children.length === 0) {\r\n      n.label = null;\r\n      n.shape = 'html';\r\n      n.html = RESOURCE_HTML;\r\n\r\n    } else if (elkLayoutNode.labels !== undefined) {\r\n      const l = createX6Label(elkLayoutNode, x6Layout);\r\n    }\r\n  }\r\n\r\n  n.attrs.body.strokeWidth = (children.length > 0) ? '0px' : '1px';\r\n  n.attrs.body.opacity = (children.length > 0) ? 0.15 : 0.9;\r\n  x6Layout.nodes.push(n);\r\n  return n;\r\n}\r\n\r\nfunction createX6Label(elkLayoutNode, x6Layout) {\r\n  const label = elkLayoutNode.labels[0];\r\n  // Label Node\r\n  const model = elkLayoutNode.model || {};\r\n  const l = {\r\n    id: elkLayoutNode.id + '.label',\r\n    //label: elkLayoutNode.label,\r\n    data: {\r\n      ...model,\r\n      width: 30 * UNIT,//label.width,\r\n      height: label.height,\r\n    },\r\n    x: label.ax,\r\n    y: label.ay,\r\n    width: elkLayoutNode.width - 1.5 * UNIT,\r\n    height: label.height,\r\n    attrs: {\r\n      body: {\r\n        class: 'label',\r\n      },\r\n      fo: {\r\n        class: 'label',\r\n      }\r\n    },\r\n\r\n  };\r\n  l.data.compound = undefined;\r\n  l.label = null;\r\n  l.shape = 'html';\r\n  l.html = RESOURCE_HTML;\r\n  x6Layout.nodes.push(l);\r\n  return l;\r\n}\r\n\r\nfunction createX6Edge(e, x6Layout) {\r\n  const t = {\r\n    attrs: {\r\n      line: {\r\n        class: 'edge',\r\n        sourceMarker: {\r\n          name: e.style.startArrow ? 'classic' : null,\r\n          size: UNIT\r\n        },\r\n        targetMarker: {\r\n          name: e.style.endArrow ? 'classic' : null,\r\n          size: UNIT\r\n        },\r\n      }\r\n    }\r\n  };\r\n\r\n  t.id = e.id;\r\n  t.data = e.model;\r\n  const source = e.sources[0];\r\n  const target = e.targets[0];\r\n  const regex1 = /\\.(start|finish)/ig;\r\n  const regex2 = /\\.(start|finish)\\.port/ig;\r\n\r\n  if (source.match(regex2)) {\r\n    t.source = { cell: source };\r\n  } else {\r\n    t.source = { cell: source.replace(regex1, ''), port: source };\r\n  }\r\n\r\n  if (target.match(regex2)) {\r\n    t.target = { cell: target };\r\n  } else {\r\n    t.target = { cell: target.replace(regex1, ''), port: target };\r\n  }\r\n\r\n  if (e.sections !== undefined) {\r\n    let d = e.sections[0];\r\n\r\n    if (d.startPoint && d.endPoint) {\r\n      /*     \r\n      t.source = {\r\n        x: d.startPoint.ax,\r\n        y: d.startPoint.ay\r\n      };\r\n\r\n      t.target = {\r\n        x: d.endPoint.ax,\r\n        y: d.endPoint.ay\r\n      };\r\n      //*/\r\n    }\r\n\r\n    const vertices = [];\r\n    (d.bendPoints || []).forEach(function (bp, i) {\r\n      vertices.push({ x: bp.ax, y: bp.ay });\r\n    });\r\n\r\n    (d.junctionPoints || []).forEach(function (bp, i) {\r\n      vertices.push({ x: bp.ax, y: bp.ay });\r\n    });\r\n\r\n    if (vertices.length > 0) {\r\n      t.vertices = vertices;\r\n    }\r\n  }\r\n  x6Layout.edges.push(t);\r\n\r\n  return t;\r\n}\r\n\r\nfunction createX6Graph(containerElt, minimapContainer, width, height) {\r\n  const x6Graph = new Graph({\r\n    container: containerElt,\r\n    grid: 1,\r\n    //width: width,\r\n    //height: height,\r\n    //resizing: false,\r\n    background: {\r\n      color: '#fff',\r\n    },\r\n    interacting: false,\r\n    async: true,\r\n    frozen: true,\r\n    sorting: 'approx',\r\n    scroller: {\r\n      enabled: true,\r\n      pannable: true,\r\n      pageVisible: true,\r\n      pageBreak: true,\r\n      //  className: 'app-content-pane'\r\n    },\r\n    panning: {\r\n      enabled: true,\r\n      modifiers: 'shift',\r\n    },\r\n    mousewheel: {\r\n      enabled: true,\r\n      modifiers: ['ctrl', 'meta'],\r\n    },\r\n    connecting: {\r\n      //snap: true,\r\n      allowBlank: false,\r\n      allowLoop: false,\r\n      highlight: true,\r\n      anchor: 'orth',\r\n      connector: 'rounded',\r\n      connectionPoint: 'boundary',\r\n      router: {\r\n        // https://x6.antv.vision/en/docs/tutorial/basic/edge/#router\r\n        // node_modules\\@antv\\x6\\lib\\registry\\router\r\n        // https://x6.antv.vision/en/docs/api/registry/router#oneside\r\n        // er orth metro manhattan https://x6.antv.vision/en/examples/edge/edge#edge\r\n        name: LINE,\r\n      }\r\n    },\r\n    minimap: {\r\n      enabled: true,\r\n      container: minimapContainer,\r\n      minScale: 0.5,\r\n      maxScale: 2,\r\n      padding: UNIT / 2,\r\n      width: 200,\r\n      height: 160\r\n    },\r\n  });\r\n\r\n  x6Graph.on('cell:mouseenter', ({ e, cell, view }) => {\r\n    if (cell.isNode() && cell.getData().compound !== undefined) {\r\n      cell.addTools([\r\n        {\r\n          name: 'boundary',\r\n          args: {\r\n            padding: 0,\r\n            useCellGeometry: true,\r\n            attrs: {\r\n              fill: 'lightgrey',\r\n              stroke: 'blue',\r\n              strokeWidth: 3,\r\n              strokeDasharray: 'none',\r\n              fillOpacity: 0.45,\r\n            },\r\n          },\r\n        },\r\n      ]);\r\n    }\r\n  });\r\n\r\n  x6Graph.on('cell:mouseleave', ({ e, cell, view }) => {\r\n    cell.removeTools();\r\n  });\r\n  //*/\r\n  return x6Graph;\r\n}","export const sample = {\r\n  \"id\": \"$root\",\r\n  \"layoutOptions\": {\r\n   \"algorithm\": \"layered\",\r\n   \"elk.hierarchyHandling\": \"SEPARATE_CHILDREN\"\r\n  },\r\n  \"children\": [\r\n   {\r\n    \"id\": \"sequence.17\",\r\n    \"label\": \"sequence.17\",\r\n    \"model\": {\r\n     \"kind\": \"sequence\",\r\n     \"title\": \"sequence.17\",\r\n     \"direction\": null,\r\n     \"tagName\": \"sequence\",\r\n     \"id\": \"sequence.17\",\r\n     \"provider\": \"default\",\r\n     \"compound\": true,\r\n     \"data\": {\r\n      \"style\": {\r\n       \"className\": \"sequence\",\r\n       \"provider\": \"default\",\r\n       \"iconURL\": \"assets/icons/base/sequence-diagram-3-fill.svg\"\r\n      }\r\n     }\r\n    },\r\n    \"labels\": [\r\n     {\r\n      \"text\": \"sequence.17\",\r\n      \"properties\": {\r\n       \"nodeLabels.placement\": \"[V_TOP, H_LEFT, INSIDE]\"\r\n      }\r\n     }\r\n    ],\r\n    \"ports\": [\r\n     {\r\n      \"id\": \"sequence.17.start\",\r\n      \"label\": \"sequence.17.start\",\r\n      \"model\": {\r\n       \"kind\": \"port\",\r\n       \"tagName\": \"port\",\r\n       \"compound\": false,\r\n       \"provider\": \"custom\",\r\n       \"id\": \"sequence.17.start\"\r\n      },\r\n      \"labels\": []\r\n     },\r\n     {\r\n      \"id\": \"sequence.17.finish\",\r\n      \"label\": \"sequence.17.finish\",\r\n      \"model\": {\r\n       \"kind\": \"port\",\r\n       \"tagName\": \"port\",\r\n       \"compound\": false,\r\n       \"provider\": \"custom\",\r\n       \"id\": \"sequence.17.finish\"\r\n      },\r\n      \"labels\": []\r\n     }\r\n    ],\r\n    \"children\": [\r\n     {\r\n      \"id\": \"sequence.17.start.port\",\r\n      \"label\": \"sequence.17.start\",\r\n      \"model\": {\r\n       \"kind\": \"port\",\r\n       \"tagName\": \"start\",\r\n       \"compound\": false,\r\n       \"provider\": \"custom\",\r\n       \"id\": \"sequence.17.start.port\"\r\n      },\r\n      \"labels\": []\r\n     },\r\n     {\r\n      \"id\": \"sequence.17.finish.port\",\r\n      \"label\": \"sequence.17.finish\",\r\n      \"model\": {\r\n       \"kind\": \"port\",\r\n       \"tagName\": \"finish\",\r\n       \"compound\": false,\r\n       \"provider\": \"custom\",\r\n       \"id\": \"sequence.17.finish.port\"\r\n      },\r\n      \"labels\": []\r\n     },\r\n     {\r\n      \"id\": \"edge.6.link\",\r\n      \"label\": \"sequence.17.start\",\r\n      \"model\": {\r\n       \"kind\": \"port\",\r\n       \"tagName\": \"start\",\r\n       \"compound\": false,\r\n       \"provider\": \"custom\",\r\n       \"id\": \"sequence.17.start.port\"\r\n      },\r\n      \"labels\": []\r\n     },\r\n     {\r\n      \"id\": \"resource.3\",\r\n      \"label\": \"a\",\r\n      \"model\": {\r\n       \"kind\": \"resource\",\r\n       \"title\": \"a\",\r\n       \"direction\": null,\r\n       \"tagName\": \"resource\",\r\n       \"id\": \"resource.3\",\r\n       \"provider\": \"default\",\r\n       \"compound\": false,\r\n       \"data\": {\r\n        \"style\": null\r\n       }\r\n      },\r\n      \"labels\": [],\r\n      \"ports\": [\r\n       {\r\n        \"id\": \"resource.3.start\",\r\n        \"label\": \"resource.3.start\",\r\n        \"model\": {\r\n         \"kind\": \"port\",\r\n         \"tagName\": \"port\",\r\n         \"compound\": false,\r\n         \"provider\": \"custom\",\r\n         \"id\": \"resource.3.start\"\r\n        },\r\n        \"labels\": []\r\n       },\r\n       {\r\n        \"id\": \"resource.3.finish\",\r\n        \"label\": \"resource.3.finish\",\r\n        \"model\": {\r\n         \"kind\": \"port\",\r\n         \"tagName\": \"port\",\r\n         \"compound\": false,\r\n         \"provider\": \"custom\",\r\n         \"id\": \"resource.3.finish\"\r\n        },\r\n        \"labels\": []\r\n       }\r\n      ],\r\n      \"children\": [],\r\n      \"edges\": [],\r\n      \"parent\": {\r\n       \"id\": \"sequence.17\",\r\n       \"label\": \"sequence.17\",\r\n       \"model\": {\r\n        \"kind\": \"sequence\",\r\n        \"title\": \"sequence.17\",\r\n        \"direction\": null,\r\n        \"tagName\": \"sequence\",\r\n        \"id\": \"sequence.17\",\r\n        \"provider\": \"default\",\r\n        \"compound\": true,\r\n        \"data\": {\r\n         \"style\": {\r\n          \"className\": \"sequence\",\r\n          \"provider\": \"default\",\r\n          \"iconURL\": \"assets/icons/base/sequence-diagram-3-fill.svg\"\r\n         }\r\n        }\r\n       },\r\n       \"labels\": [\r\n        {\r\n         \"text\": \"sequence.17\",\r\n         \"properties\": {\r\n          \"nodeLabels.placement\": \"[V_TOP, H_LEFT, INSIDE]\"\r\n         }\r\n        }\r\n       ]\r\n      }\r\n     },\r\n     {\r\n      \"id\": \"resource.4\",\r\n      \"label\": \"b\",\r\n      \"model\": {\r\n       \"kind\": \"resource\",\r\n       \"title\": \"b\",\r\n       \"direction\": null,\r\n       \"tagName\": \"resource\",\r\n       \"id\": \"resource.4\",\r\n       \"provider\": \"default\",\r\n       \"compound\": false,\r\n       \"data\": {\r\n        \"style\": null\r\n       }\r\n      },\r\n      \"labels\": [],\r\n      \"ports\": [\r\n       {\r\n        \"id\": \"resource.4.start\",\r\n        \"label\": \"resource.4.start\",\r\n        \"model\": {\r\n         \"kind\": \"port\",\r\n         \"tagName\": \"port\",\r\n         \"compound\": false,\r\n         \"provider\": \"custom\",\r\n         \"id\": \"resource.4.start\"\r\n        },\r\n        \"labels\": []\r\n       },\r\n       {\r\n        \"id\": \"resource.4.finish\",\r\n        \"label\": \"resource.4.finish\",\r\n        \"model\": {\r\n         \"kind\": \"port\",\r\n         \"tagName\": \"port\",\r\n         \"compound\": false,\r\n         \"provider\": \"custom\",\r\n         \"id\": \"resource.4.finish\"\r\n        },\r\n        \"labels\": []\r\n       }\r\n      ],\r\n      \"children\": [],\r\n      \"edges\": [],\r\n      \"parent\": {\r\n       \"id\": \"sequence.17\",\r\n       \"label\": \"sequence.17\",\r\n       \"model\": {\r\n        \"kind\": \"sequence\",\r\n        \"title\": \"sequence.17\",\r\n        \"direction\": null,\r\n        \"tagName\": \"sequence\",\r\n        \"id\": \"sequence.17\",\r\n        \"provider\": \"default\",\r\n        \"compound\": true,\r\n        \"data\": {\r\n         \"style\": {\r\n          \"className\": \"sequence\",\r\n          \"provider\": \"default\",\r\n          \"iconURL\": \"assets/icons/base/sequence-diagram-3-fill.svg\"\r\n         }\r\n        }\r\n       },\r\n       \"labels\": [\r\n        {\r\n         \"text\": \"sequence.17\",\r\n         \"properties\": {\r\n          \"nodeLabels.placement\": \"[V_TOP, H_LEFT, INSIDE]\"\r\n         }\r\n        }\r\n       ]\r\n      }\r\n     },\r\n     {\r\n      \"id\": \"sequence.11\",\r\n      \"label\": \"sequence.11\",\r\n      \"model\": {\r\n       \"kind\": \"sequence\",\r\n       \"title\": \"sequence.11\",\r\n       \"direction\": null,\r\n       \"tagName\": \"sequence\",\r\n       \"id\": \"sequence.11\",\r\n       \"provider\": \"default\",\r\n       \"compound\": true,\r\n       \"data\": {\r\n        \"style\": {\r\n         \"className\": \"sequence\",\r\n         \"provider\": \"default\",\r\n         \"iconURL\": \"assets/icons/base/sequence-diagram-3-fill.svg\"\r\n        }\r\n       }\r\n      },\r\n      \"labels\": [\r\n       {\r\n        \"text\": \"sequence.11\",\r\n        \"properties\": {\r\n         \"nodeLabels.placement\": \"[V_TOP, H_LEFT, INSIDE]\"\r\n        }\r\n       }\r\n      ],\r\n      \"ports\": [\r\n       {\r\n        \"id\": \"sequence.11.start\",\r\n        \"label\": \"sequence.11.start\",\r\n        \"model\": {\r\n         \"kind\": \"port\",\r\n         \"tagName\": \"port\",\r\n         \"compound\": false,\r\n         \"provider\": \"custom\",\r\n         \"id\": \"sequence.11.start\"\r\n        },\r\n        \"labels\": []\r\n       },\r\n       {\r\n        \"id\": \"sequence.11.finish\",\r\n        \"label\": \"sequence.11.finish\",\r\n        \"model\": {\r\n         \"kind\": \"port\",\r\n         \"tagName\": \"port\",\r\n         \"compound\": false,\r\n         \"provider\": \"custom\",\r\n         \"id\": \"sequence.11.finish\"\r\n        },\r\n        \"labels\": []\r\n       }\r\n      ],\r\n      \"children\": [\r\n       {\r\n        \"id\": \"sequence.11.start.port\",\r\n        \"label\": \"sequence.11.start\",\r\n        \"model\": {\r\n         \"kind\": \"port\",\r\n         \"tagName\": \"start\",\r\n         \"compound\": false,\r\n         \"provider\": \"custom\",\r\n         \"id\": \"sequence.11.start.port\"\r\n        },\r\n        \"labels\": []\r\n       },\r\n       {\r\n        \"id\": \"sequence.11.finish.port\",\r\n        \"label\": \"sequence.11.finish\",\r\n        \"model\": {\r\n         \"kind\": \"port\",\r\n         \"tagName\": \"finish\",\r\n         \"compound\": false,\r\n         \"provider\": \"custom\",\r\n         \"id\": \"sequence.11.finish.port\"\r\n        },\r\n        \"labels\": []\r\n       },\r\n       {\r\n        \"id\": \"resource.5\",\r\n        \"label\": \"a\",\r\n        \"model\": {\r\n         \"kind\": \"resource\",\r\n         \"title\": \"a\",\r\n         \"direction\": null,\r\n         \"tagName\": \"resource\",\r\n         \"id\": \"resource.5\",\r\n         \"provider\": \"default\",\r\n         \"compound\": false,\r\n         \"data\": {\r\n          \"style\": null\r\n         }\r\n        },\r\n        \"labels\": [],\r\n        \"ports\": [\r\n         {\r\n          \"id\": \"resource.5.start\",\r\n          \"label\": \"resource.5.start\",\r\n          \"model\": {\r\n           \"kind\": \"port\",\r\n           \"tagName\": \"port\",\r\n           \"compound\": false,\r\n           \"provider\": \"custom\",\r\n           \"id\": \"resource.5.start\"\r\n          },\r\n          \"labels\": []\r\n         },\r\n         {\r\n          \"id\": \"resource.5.finish\",\r\n          \"label\": \"resource.5.finish\",\r\n          \"model\": {\r\n           \"kind\": \"port\",\r\n           \"tagName\": \"port\",\r\n           \"compound\": false,\r\n           \"provider\": \"custom\",\r\n           \"id\": \"resource.5.finish\"\r\n          },\r\n          \"labels\": []\r\n         }\r\n        ],\r\n        \"children\": [],\r\n        \"edges\": [],\r\n        \"parent\": {\r\n         \"id\": \"sequence.11\",\r\n         \"label\": \"sequence.11\",\r\n         \"model\": {\r\n          \"kind\": \"sequence\",\r\n          \"title\": \"sequence.11\",\r\n          \"direction\": null,\r\n          \"tagName\": \"sequence\",\r\n          \"id\": \"sequence.11\",\r\n          \"provider\": \"default\",\r\n          \"compound\": true,\r\n          \"data\": {\r\n           \"style\": {\r\n            \"className\": \"sequence\",\r\n            \"provider\": \"default\",\r\n            \"iconURL\": \"assets/icons/base/sequence-diagram-3-fill.svg\"\r\n           }\r\n          }\r\n         },\r\n         \"labels\": [\r\n          {\r\n           \"text\": \"sequence.11\",\r\n           \"properties\": {\r\n            \"nodeLabels.placement\": \"[V_TOP, H_LEFT, INSIDE]\"\r\n           }\r\n          }\r\n         ]\r\n        }\r\n       },\r\n       {\r\n        \"id\": \"resource.6\",\r\n        \"label\": \"b\",\r\n        \"model\": {\r\n         \"kind\": \"resource\",\r\n         \"title\": \"b\",\r\n         \"direction\": null,\r\n         \"tagName\": \"resource\",\r\n         \"id\": \"resource.6\",\r\n         \"provider\": \"default\",\r\n         \"compound\": false,\r\n         \"data\": {\r\n          \"style\": null\r\n         }\r\n        },\r\n        \"labels\": [],\r\n        \"ports\": [\r\n         {\r\n          \"id\": \"resource.6.start\",\r\n          \"label\": \"resource.6.start\",\r\n          \"model\": {\r\n           \"kind\": \"port\",\r\n           \"tagName\": \"port\",\r\n           \"compound\": false,\r\n           \"provider\": \"custom\",\r\n           \"id\": \"resource.6.start\"\r\n          },\r\n          \"labels\": []\r\n         },\r\n         {\r\n          \"id\": \"resource.6.finish\",\r\n          \"label\": \"resource.6.finish\",\r\n          \"model\": {\r\n           \"kind\": \"port\",\r\n           \"tagName\": \"port\",\r\n           \"compound\": false,\r\n           \"provider\": \"custom\",\r\n           \"id\": \"resource.6.finish\"\r\n          },\r\n          \"labels\": []\r\n         }\r\n        ],\r\n        \"children\": [],\r\n        \"edges\": [],\r\n        \"parent\": {\r\n         \"id\": \"sequence.11\",\r\n         \"label\": \"sequence.11\",\r\n         \"model\": {\r\n          \"kind\": \"sequence\",\r\n          \"title\": \"sequence.11\",\r\n          \"direction\": null,\r\n          \"tagName\": \"sequence\",\r\n          \"id\": \"sequence.11\",\r\n          \"provider\": \"default\",\r\n          \"compound\": true,\r\n          \"data\": {\r\n           \"style\": {\r\n            \"className\": \"sequence\",\r\n            \"provider\": \"default\",\r\n            \"iconURL\": \"assets/icons/base/sequence-diagram-3-fill.svg\"\r\n           }\r\n          }\r\n         },\r\n         \"labels\": [\r\n          {\r\n           \"text\": \"sequence.11\",\r\n           \"properties\": {\r\n            \"nodeLabels.placement\": \"[V_TOP, H_LEFT, INSIDE]\"\r\n           }\r\n          }\r\n         ]\r\n        }\r\n       },\r\n       {\r\n        \"id\": \"resource.13\",\r\n        \"label\": \"merge\",\r\n        \"model\": {\r\n         \"kind\": \"resource\",\r\n         \"title\": \"merge\",\r\n         \"direction\": null,\r\n         \"tagName\": \"resource\",\r\n         \"id\": \"resource.13\",\r\n         \"provider\": \"default\",\r\n         \"compound\": false,\r\n         \"data\": {}\r\n        },\r\n        \"labels\": [],\r\n        \"ports\": [\r\n         {\r\n          \"id\": \"resource.13.start\",\r\n          \"label\": \"resource.13.start\",\r\n          \"model\": {\r\n           \"kind\": \"port\",\r\n           \"tagName\": \"port\",\r\n           \"compound\": false,\r\n           \"provider\": \"custom\",\r\n           \"id\": \"resource.13.start\"\r\n          },\r\n          \"labels\": []\r\n         },\r\n         {\r\n          \"id\": \"resource.13.finish\",\r\n          \"label\": \"resource.13.finish\",\r\n          \"model\": {\r\n           \"kind\": \"port\",\r\n           \"tagName\": \"port\",\r\n           \"compound\": false,\r\n           \"provider\": \"custom\",\r\n           \"id\": \"resource.13.finish\"\r\n          },\r\n          \"labels\": []\r\n         }\r\n        ],\r\n        \"children\": [],\r\n        \"edges\": [],\r\n        \"parent\": {\r\n         \"id\": \"sequence.11\",\r\n         \"label\": \"sequence.11\",\r\n         \"model\": {\r\n          \"kind\": \"sequence\",\r\n          \"title\": \"sequence.11\",\r\n          \"direction\": null,\r\n          \"tagName\": \"sequence\",\r\n          \"id\": \"sequence.11\",\r\n          \"provider\": \"default\",\r\n          \"compound\": true,\r\n          \"data\": {\r\n           \"style\": {\r\n            \"className\": \"sequence\",\r\n            \"provider\": \"default\",\r\n            \"iconURL\": \"assets/icons/base/sequence-diagram-3-fill.svg\"\r\n           }\r\n          }\r\n         },\r\n         \"labels\": [\r\n          {\r\n           \"text\": \"sequence.11\",\r\n           \"properties\": {\r\n            \"nodeLabels.placement\": \"[V_TOP, H_LEFT, INSIDE]\"\r\n           }\r\n          }\r\n         ]\r\n        }\r\n       },\r\n       {\r\n        \"id\": \"group.9\",\r\n        \"label\": \"group.9\",\r\n        \"model\": {\r\n         \"kind\": \"group\",\r\n         \"title\": \"group.9\",\r\n         \"direction\": null,\r\n         \"tagName\": \"group\",\r\n         \"id\": \"group.9\",\r\n         \"provider\": \"default\",\r\n         \"compound\": true,\r\n         \"data\": {\r\n          \"style\": {\r\n           \"className\": \"group\",\r\n           \"provider\": \"default\",\r\n           \"iconURL\": \"assets/icons/base/group-grid-fill.svg\"\r\n          }\r\n         }\r\n        },\r\n        \"labels\": [\r\n         {\r\n          \"text\": \"group.9\",\r\n          \"properties\": {\r\n           \"nodeLabels.placement\": \"[V_TOP, H_LEFT, INSIDE]\"\r\n          }\r\n         }\r\n        ],\r\n        \"ports\": [\r\n         {\r\n          \"id\": \"group.9.start\",\r\n          \"label\": \"group.9.start\",\r\n          \"model\": {\r\n           \"kind\": \"port\",\r\n           \"tagName\": \"port\",\r\n           \"compound\": false,\r\n           \"provider\": \"custom\",\r\n           \"id\": \"group.9.start\"\r\n          },\r\n          \"labels\": []\r\n         },\r\n         {\r\n          \"id\": \"group.9.finish\",\r\n          \"label\": \"group.9.finish\",\r\n          \"model\": {\r\n           \"kind\": \"port\",\r\n           \"tagName\": \"port\",\r\n           \"compound\": false,\r\n           \"provider\": \"custom\",\r\n           \"id\": \"group.9.finish\"\r\n          },\r\n          \"labels\": []\r\n         }\r\n        ],\r\n        \"children\": [\r\n         {\r\n          \"id\": \"resource.7\",\r\n          \"label\": \"c\",\r\n          \"model\": {\r\n           \"kind\": \"resource\",\r\n           \"title\": \"c\",\r\n           \"direction\": null,\r\n           \"tagName\": \"resource\",\r\n           \"id\": \"resource.7\",\r\n           \"provider\": \"default\",\r\n           \"compound\": false,\r\n           \"data\": {\r\n            \"style\": null\r\n           }\r\n          },\r\n          \"labels\": [],\r\n          \"ports\": [\r\n           {\r\n            \"id\": \"resource.7.start\",\r\n            \"label\": \"resource.7.start\",\r\n            \"model\": {\r\n             \"kind\": \"port\",\r\n             \"tagName\": \"port\",\r\n             \"compound\": false,\r\n             \"provider\": \"custom\",\r\n             \"id\": \"resource.7.start\"\r\n            },\r\n            \"labels\": []\r\n           },\r\n           {\r\n            \"id\": \"resource.7.finish\",\r\n            \"label\": \"resource.7.finish\",\r\n            \"model\": {\r\n             \"kind\": \"port\",\r\n             \"tagName\": \"port\",\r\n             \"compound\": false,\r\n             \"provider\": \"custom\",\r\n             \"id\": \"resource.7.finish\"\r\n            },\r\n            \"labels\": []\r\n           }\r\n          ],\r\n          \"children\": [],\r\n          \"edges\": [],\r\n          \"parent\": {\r\n           \"id\": \"group.9\",\r\n           \"label\": \"group.9\",\r\n           \"model\": {\r\n            \"kind\": \"group\",\r\n            \"title\": \"group.9\",\r\n            \"direction\": null,\r\n            \"tagName\": \"group\",\r\n            \"id\": \"group.9\",\r\n            \"provider\": \"default\",\r\n            \"compound\": true,\r\n            \"data\": {\r\n             \"style\": {\r\n              \"className\": \"group\",\r\n              \"provider\": \"default\",\r\n              \"iconURL\": \"assets/icons/base/group-grid-fill.svg\"\r\n             }\r\n            }\r\n           },\r\n           \"labels\": [\r\n            {\r\n             \"text\": \"group.9\",\r\n             \"properties\": {\r\n              \"nodeLabels.placement\": \"[V_TOP, H_LEFT, INSIDE]\"\r\n             }\r\n            }\r\n           ]\r\n          }\r\n         },\r\n         {\r\n          \"id\": \"resource.8\",\r\n          \"label\": \"d\",\r\n          \"model\": {\r\n           \"kind\": \"resource\",\r\n           \"title\": \"d\",\r\n           \"direction\": null,\r\n           \"tagName\": \"resource\",\r\n           \"id\": \"resource.8\",\r\n           \"provider\": \"default\",\r\n           \"compound\": false,\r\n           \"data\": {\r\n            \"style\": null\r\n           }\r\n          },\r\n          \"labels\": [],\r\n          \"ports\": [\r\n           {\r\n            \"id\": \"resource.8.start\",\r\n            \"label\": \"resource.8.start\",\r\n            \"model\": {\r\n             \"kind\": \"port\",\r\n             \"tagName\": \"port\",\r\n             \"compound\": false,\r\n             \"provider\": \"custom\",\r\n             \"id\": \"resource.8.start\"\r\n            },\r\n            \"labels\": []\r\n           },\r\n           {\r\n            \"id\": \"resource.8.finish\",\r\n            \"label\": \"resource.8.finish\",\r\n            \"model\": {\r\n             \"kind\": \"port\",\r\n             \"tagName\": \"port\",\r\n             \"compound\": false,\r\n             \"provider\": \"custom\",\r\n             \"id\": \"resource.8.finish\"\r\n            },\r\n            \"labels\": []\r\n           }\r\n          ],\r\n          \"children\": [],\r\n          \"edges\": [],\r\n          \"parent\": {\r\n           \"id\": \"group.9\",\r\n           \"label\": \"group.9\",\r\n           \"model\": {\r\n            \"kind\": \"group\",\r\n            \"title\": \"group.9\",\r\n            \"direction\": null,\r\n            \"tagName\": \"group\",\r\n            \"id\": \"group.9\",\r\n            \"provider\": \"default\",\r\n            \"compound\": true,\r\n            \"data\": {\r\n             \"style\": {\r\n              \"className\": \"group\",\r\n              \"provider\": \"default\",\r\n              \"iconURL\": \"assets/icons/base/group-grid-fill.svg\"\r\n             }\r\n            }\r\n           },\r\n           \"labels\": [\r\n            {\r\n             \"text\": \"group.9\",\r\n             \"properties\": {\r\n              \"nodeLabels.placement\": \"[V_TOP, H_LEFT, INSIDE]\"\r\n             }\r\n            }\r\n           ]\r\n          }\r\n         }\r\n        ],\r\n        \"edges\": [],\r\n        \"parent\": {\r\n         \"id\": \"sequence.11\",\r\n         \"label\": \"sequence.11\",\r\n         \"model\": {\r\n          \"kind\": \"sequence\",\r\n          \"title\": \"sequence.11\",\r\n          \"direction\": null,\r\n          \"tagName\": \"sequence\",\r\n          \"id\": \"sequence.11\",\r\n          \"provider\": \"default\",\r\n          \"compound\": true,\r\n          \"data\": {\r\n           \"style\": {\r\n            \"className\": \"sequence\",\r\n            \"provider\": \"default\",\r\n            \"iconURL\": \"assets/icons/base/sequence-diagram-3-fill.svg\"\r\n           }\r\n          }\r\n         },\r\n         \"labels\": [\r\n          {\r\n           \"text\": \"sequence.11\",\r\n           \"properties\": {\r\n            \"nodeLabels.placement\": \"[V_TOP, H_LEFT, INSIDE]\"\r\n           }\r\n          }\r\n         ]\r\n        }\r\n       },\r\n       {\r\n        \"id\": \"resource.10\",\r\n        \"label\": \"e\",\r\n        \"model\": {\r\n         \"kind\": \"resource\",\r\n         \"title\": \"e\",\r\n         \"direction\": null,\r\n         \"tagName\": \"resource\",\r\n         \"id\": \"resource.10\",\r\n         \"provider\": \"default\",\r\n         \"compound\": false,\r\n         \"data\": {\r\n          \"style\": null\r\n         }\r\n        },\r\n        \"labels\": [],\r\n        \"ports\": [\r\n         {\r\n          \"id\": \"resource.10.start\",\r\n          \"label\": \"resource.10.start\",\r\n          \"model\": {\r\n           \"kind\": \"port\",\r\n           \"tagName\": \"port\",\r\n           \"compound\": false,\r\n           \"provider\": \"custom\",\r\n           \"id\": \"resource.10.start\"\r\n          },\r\n          \"labels\": []\r\n         },\r\n         {\r\n          \"id\": \"resource.10.finish\",\r\n          \"label\": \"resource.10.finish\",\r\n          \"model\": {\r\n           \"kind\": \"port\",\r\n           \"tagName\": \"port\",\r\n           \"compound\": false,\r\n           \"provider\": \"custom\",\r\n           \"id\": \"resource.10.finish\"\r\n          },\r\n          \"labels\": []\r\n         }\r\n        ],\r\n        \"children\": [],\r\n        \"edges\": [],\r\n        \"parent\": {\r\n         \"id\": \"sequence.11\",\r\n         \"label\": \"sequence.11\",\r\n         \"model\": {\r\n          \"kind\": \"sequence\",\r\n          \"title\": \"sequence.11\",\r\n          \"direction\": null,\r\n          \"tagName\": \"sequence\",\r\n          \"id\": \"sequence.11\",\r\n          \"provider\": \"default\",\r\n          \"compound\": true,\r\n          \"data\": {\r\n           \"style\": {\r\n            \"className\": \"sequence\",\r\n            \"provider\": \"default\",\r\n            \"iconURL\": \"assets/icons/base/sequence-diagram-3-fill.svg\"\r\n           }\r\n          }\r\n         },\r\n         \"labels\": [\r\n          {\r\n           \"text\": \"sequence.11\",\r\n           \"properties\": {\r\n            \"nodeLabels.placement\": \"[V_TOP, H_LEFT, INSIDE]\"\r\n           }\r\n          }\r\n         ]\r\n        }\r\n       }\r\n      ],\r\n      \"edges\": [\r\n       {\r\n        \"id\": \"edge.15\",\r\n        \"sources\": [\r\n         \"sequence.11.start.port\"\r\n        ],\r\n        \"targets\": [\r\n         \"resource.5.start\"\r\n        ],\r\n        \"model\": {\r\n         \"provider\": \"default\",\r\n         \"tagName\": \"edge\",\r\n         \"kind\": \"edge\"\r\n        },\r\n        \"style\": {\r\n         \"startArrow\": false,\r\n         \"endArrow\": true\r\n        }\r\n       },\r\n       {\r\n        \"id\": \"edge.16\",\r\n        \"sources\": [\r\n         \"sequence.11.start.port\"\r\n        ],\r\n        \"targets\": [\r\n         \"resource.6.start\"\r\n        ],\r\n        \"model\": {\r\n         \"provider\": \"default\",\r\n         \"tagName\": \"edge\",\r\n         \"kind\": \"edge\"\r\n        },\r\n        \"style\": {\r\n         \"startArrow\": false,\r\n         \"endArrow\": true\r\n        }\r\n       },\r\n       {\r\n        \"id\": \"edge.17\",\r\n        \"sources\": [\r\n         \"resource.5.finish\"\r\n        ],\r\n        \"targets\": [\r\n         \"resource.13.start\"\r\n        ],\r\n        \"model\": {\r\n         \"provider\": \"default\",\r\n         \"tagName\": \"edge\",\r\n         \"kind\": \"edge\"\r\n        },\r\n        \"style\": {\r\n         \"startArrow\": false,\r\n         \"endArrow\": true\r\n        }\r\n       },\r\n       {\r\n        \"id\": \"edge.18\",\r\n        \"sources\": [\r\n         \"resource.6.finish\"\r\n        ],\r\n        \"targets\": [\r\n         \"resource.13.start\"\r\n        ],\r\n        \"model\": {\r\n         \"provider\": \"default\",\r\n         \"tagName\": \"edge\",\r\n         \"kind\": \"edge\"\r\n        },\r\n        \"style\": {\r\n         \"startArrow\": false,\r\n         \"endArrow\": true\r\n        }\r\n       },\r\n       {\r\n        \"id\": \"edge.19\",\r\n        \"sources\": [\r\n         \"resource.13.finish\"\r\n        ],\r\n        \"targets\": [\r\n         \"group.9.start\"\r\n        ],\r\n        \"model\": {\r\n         \"provider\": \"default\",\r\n         \"tagName\": \"edge\",\r\n         \"kind\": \"edge\"\r\n        },\r\n        \"style\": {\r\n         \"startArrow\": false,\r\n         \"endArrow\": true\r\n        }\r\n       },\r\n       {\r\n        \"id\": \"edge.20\",\r\n        \"sources\": [\r\n         \"group.9.finish\"\r\n        ],\r\n        \"targets\": [\r\n         \"resource.10.start\"\r\n        ],\r\n        \"model\": {\r\n         \"provider\": \"default\",\r\n         \"tagName\": \"edge\",\r\n         \"kind\": \"edge\"\r\n        },\r\n        \"style\": {\r\n         \"startArrow\": false,\r\n         \"endArrow\": true\r\n        }\r\n       },\r\n       {\r\n        \"id\": \"edge.21\",\r\n        \"sources\": [\r\n         \"resource.10.finish\"\r\n        ],\r\n        \"targets\": [\r\n         \"sequence.11.finish.port\"\r\n        ],\r\n        \"model\": {\r\n         \"provider\": \"default\",\r\n         \"tagName\": \"edge\",\r\n         \"kind\": \"edge\"\r\n        },\r\n        \"style\": {\r\n         \"startArrow\": false,\r\n         \"endArrow\": true\r\n        }\r\n       }\r\n      ],\r\n      \"parent\": {\r\n       \"id\": \"sequence.17\",\r\n       \"label\": \"sequence.17\",\r\n       \"model\": {\r\n        \"kind\": \"sequence\",\r\n        \"title\": \"sequence.17\",\r\n        \"direction\": null,\r\n        \"tagName\": \"sequence\",\r\n        \"id\": \"sequence.17\",\r\n        \"provider\": \"default\",\r\n        \"compound\": true,\r\n        \"data\": {\r\n         \"style\": {\r\n          \"className\": \"sequence\",\r\n          \"provider\": \"default\",\r\n          \"iconURL\": \"assets/icons/base/sequence-diagram-3-fill.svg\"\r\n         }\r\n        }\r\n       },\r\n       \"labels\": [\r\n        {\r\n         \"text\": \"sequence.17\",\r\n         \"properties\": {\r\n          \"nodeLabels.placement\": \"[V_TOP, H_LEFT, INSIDE]\"\r\n         }\r\n        }\r\n       ]\r\n      }\r\n     },\r\n     {\r\n      \"id\": \"resource.14\",\r\n      \"label\": \"c\",\r\n      \"model\": {\r\n       \"kind\": \"resource\",\r\n       \"title\": \"c\",\r\n       \"direction\": null,\r\n       \"tagName\": \"resource\",\r\n       \"id\": \"resource.14\",\r\n       \"provider\": \"default\",\r\n       \"compound\": false,\r\n       \"data\": {\r\n        \"style\": null\r\n       }\r\n      },\r\n      \"labels\": [],\r\n      \"ports\": [\r\n       {\r\n        \"id\": \"resource.14.start\",\r\n        \"label\": \"resource.14.start\",\r\n        \"model\": {\r\n         \"kind\": \"port\",\r\n         \"tagName\": \"port\",\r\n         \"compound\": false,\r\n         \"provider\": \"custom\",\r\n         \"id\": \"resource.14.start\"\r\n        },\r\n        \"labels\": []\r\n       },\r\n       {\r\n        \"id\": \"resource.14.finish\",\r\n        \"label\": \"resource.14.finish\",\r\n        \"model\": {\r\n         \"kind\": \"port\",\r\n         \"tagName\": \"port\",\r\n         \"compound\": false,\r\n         \"provider\": \"custom\",\r\n         \"id\": \"resource.14.finish\"\r\n        },\r\n        \"labels\": []\r\n       }\r\n      ],\r\n      \"children\": [],\r\n      \"edges\": [],\r\n      \"parent\": {\r\n       \"id\": \"sequence.17\",\r\n       \"label\": \"sequence.17\",\r\n       \"model\": {\r\n        \"kind\": \"sequence\",\r\n        \"title\": \"sequence.17\",\r\n        \"direction\": null,\r\n        \"tagName\": \"sequence\",\r\n        \"id\": \"sequence.17\",\r\n        \"provider\": \"default\",\r\n        \"compound\": true,\r\n        \"data\": {\r\n         \"style\": {\r\n          \"className\": \"sequence\",\r\n          \"provider\": \"default\",\r\n          \"iconURL\": \"assets/icons/base/sequence-diagram-3-fill.svg\"\r\n         }\r\n        }\r\n       },\r\n       \"labels\": [\r\n        {\r\n         \"text\": \"sequence.17\",\r\n         \"properties\": {\r\n          \"nodeLabels.placement\": \"[V_TOP, H_LEFT, INSIDE]\"\r\n         }\r\n        }\r\n       ]\r\n      }\r\n     },\r\n     {\r\n      \"id\": \"resource.15\",\r\n      \"label\": \"d\",\r\n      \"model\": {\r\n       \"kind\": \"resource\",\r\n       \"title\": \"d\",\r\n       \"direction\": null,\r\n       \"tagName\": \"resource\",\r\n       \"id\": \"resource.15\",\r\n       \"provider\": \"default\",\r\n       \"compound\": false,\r\n       \"data\": {\r\n        \"style\": null\r\n       }\r\n      },\r\n      \"labels\": [],\r\n      \"ports\": [\r\n       {\r\n        \"id\": \"resource.15.start\",\r\n        \"label\": \"resource.15.start\",\r\n        \"model\": {\r\n         \"kind\": \"port\",\r\n         \"tagName\": \"port\",\r\n         \"compound\": false,\r\n         \"provider\": \"custom\",\r\n         \"id\": \"resource.15.start\"\r\n        },\r\n        \"labels\": []\r\n       },\r\n       {\r\n        \"id\": \"resource.15.finish\",\r\n        \"label\": \"resource.15.finish\",\r\n        \"model\": {\r\n         \"kind\": \"port\",\r\n         \"tagName\": \"port\",\r\n         \"compound\": false,\r\n         \"provider\": \"custom\",\r\n         \"id\": \"resource.15.finish\"\r\n        },\r\n        \"labels\": []\r\n       }\r\n      ],\r\n      \"children\": [],\r\n      \"edges\": [],\r\n      \"parent\": {\r\n       \"id\": \"sequence.17\",\r\n       \"label\": \"sequence.17\",\r\n       \"model\": {\r\n        \"kind\": \"sequence\",\r\n        \"title\": \"sequence.17\",\r\n        \"direction\": null,\r\n        \"tagName\": \"sequence\",\r\n        \"id\": \"sequence.17\",\r\n        \"provider\": \"default\",\r\n        \"compound\": true,\r\n        \"data\": {\r\n         \"style\": {\r\n          \"className\": \"sequence\",\r\n          \"provider\": \"default\",\r\n          \"iconURL\": \"assets/icons/base/sequence-diagram-3-fill.svg\"\r\n         }\r\n        }\r\n       },\r\n       \"labels\": [\r\n        {\r\n         \"text\": \"sequence.17\",\r\n         \"properties\": {\r\n          \"nodeLabels.placement\": \"[V_TOP, H_LEFT, INSIDE]\"\r\n         }\r\n        }\r\n       ]\r\n      }\r\n     },\r\n     {\r\n      \"id\": \"resource.16\",\r\n      \"label\": \"e\",\r\n      \"model\": {\r\n       \"kind\": \"resource\",\r\n       \"title\": \"e\",\r\n       \"direction\": null,\r\n       \"tagName\": \"resource\",\r\n       \"id\": \"resource.16\",\r\n       \"provider\": \"default\",\r\n       \"compound\": false,\r\n       \"data\": {\r\n        \"style\": null\r\n       }\r\n      },\r\n      \"labels\": [],\r\n      \"ports\": [\r\n       {\r\n        \"id\": \"resource.16.start\",\r\n        \"label\": \"resource.16.start\",\r\n        \"model\": {\r\n         \"kind\": \"port\",\r\n         \"tagName\": \"port\",\r\n         \"compound\": false,\r\n         \"provider\": \"custom\",\r\n         \"id\": \"resource.16.start\"\r\n        },\r\n        \"labels\": []\r\n       },\r\n       {\r\n        \"id\": \"resource.16.finish\",\r\n        \"label\": \"resource.16.finish\",\r\n        \"model\": {\r\n         \"kind\": \"port\",\r\n         \"tagName\": \"port\",\r\n         \"compound\": false,\r\n         \"provider\": \"custom\",\r\n         \"id\": \"resource.16.finish\"\r\n        },\r\n        \"labels\": []\r\n       }\r\n      ],\r\n      \"children\": [],\r\n      \"edges\": [],\r\n      \"parent\": {\r\n       \"id\": \"sequence.17\",\r\n       \"label\": \"sequence.17\",\r\n       \"model\": {\r\n        \"kind\": \"sequence\",\r\n        \"title\": \"sequence.17\",\r\n        \"direction\": null,\r\n        \"tagName\": \"sequence\",\r\n        \"id\": \"sequence.17\",\r\n        \"provider\": \"default\",\r\n        \"compound\": true,\r\n        \"data\": {\r\n         \"style\": {\r\n          \"className\": \"sequence\",\r\n          \"provider\": \"default\",\r\n          \"iconURL\": \"assets/icons/base/sequence-diagram-3-fill.svg\"\r\n         }\r\n        }\r\n       },\r\n       \"labels\": [\r\n        {\r\n         \"text\": \"sequence.17\",\r\n         \"properties\": {\r\n          \"nodeLabels.placement\": \"[V_TOP, H_LEFT, INSIDE]\"\r\n         }\r\n        }\r\n       ]\r\n      }\r\n     }\r\n    ],\r\n    \"edges\": [\r\n     {\r\n      \"id\": \"edge.3\",\r\n      \"sources\": [\r\n       \"sequence.17.start.port\"\r\n      ],\r\n      \"targets\": [\r\n       \"resource.3.start\"\r\n      ],\r\n      \"model\": {\r\n       \"provider\": \"default\",\r\n       \"tagName\": \"edge\",\r\n       \"kind\": \"edge\"\r\n      },\r\n      \"style\": {\r\n       \"startArrow\": false,\r\n       \"endArrow\": true\r\n      }\r\n     },\r\n     {\r\n      \"id\": \"edge.4\",\r\n      \"sources\": [\r\n       \"sequence.17.start.port\"\r\n      ],\r\n      \"targets\": [\r\n       \"resource.4.start\"\r\n      ],\r\n      \"model\": {\r\n       \"provider\": \"default\",\r\n       \"tagName\": \"edge\",\r\n       \"kind\": \"edge\"\r\n      },\r\n      \"style\": {\r\n       \"startArrow\": false,\r\n       \"endArrow\": true\r\n      }\r\n     },\r\n     {\r\n      \"id\": \"edge.5\",\r\n      \"sources\": [\r\n       \"sequence.17.start.port\"\r\n      ],\r\n      \"targets\": [\r\n       \"sequence.11.start\"\r\n      ],\r\n      \"model\": {\r\n       \"provider\": \"default\",\r\n       \"tagName\": \"edge\",\r\n       \"kind\": \"edge\"\r\n      },\r\n      \"style\": {\r\n       \"startArrow\": false,\r\n       \"endArrow\": true\r\n      }\r\n     },\r\n     {\r\n      \"id\": \"edge.7\",\r\n      \"sources\": [\r\n       \"resource.3.finish\"\r\n      ],\r\n      \"targets\": [\r\n       \"edge.6.link\"\r\n      ],\r\n      \"model\": {\r\n       \"provider\": \"default\",\r\n       \"tagName\": \"edge\",\r\n       \"kind\": \"edge\"\r\n      },\r\n      \"style\": {\r\n       \"startArrow\": false,\r\n       \"endArrow\": true\r\n      }\r\n     },\r\n     {\r\n      \"id\": \"edge.8\",\r\n      \"sources\": [\r\n       \"resource.4.finish\"\r\n      ],\r\n      \"targets\": [\r\n       \"edge.6.link\"\r\n      ],\r\n      \"model\": {\r\n       \"provider\": \"default\",\r\n       \"tagName\": \"edge\",\r\n       \"kind\": \"edge\"\r\n      },\r\n      \"style\": {\r\n       \"startArrow\": false,\r\n       \"endArrow\": true\r\n      }\r\n     },\r\n     {\r\n      \"id\": \"edge.9\",\r\n      \"sources\": [\r\n       \"sequence.11.finish\"\r\n      ],\r\n      \"targets\": [\r\n       \"edge.6.link\"\r\n      ],\r\n      \"model\": {\r\n       \"provider\": \"default\",\r\n       \"tagName\": \"edge\",\r\n       \"kind\": \"edge\"\r\n      },\r\n      \"style\": {\r\n       \"startArrow\": false,\r\n       \"endArrow\": true\r\n      }\r\n     },\r\n     {\r\n      \"id\": \"edge.10\",\r\n      \"sources\": [\r\n       \"edge.6.link\"\r\n      ],\r\n      \"targets\": [\r\n       \"resource.14.start\"\r\n      ],\r\n      \"model\": {\r\n       \"provider\": \"default\",\r\n       \"tagName\": \"edge\",\r\n       \"kind\": \"edge\"\r\n      },\r\n      \"style\": {\r\n       \"startArrow\": false,\r\n       \"endArrow\": true\r\n      }\r\n     },\r\n     {\r\n      \"id\": \"edge.11\",\r\n      \"sources\": [\r\n       \"edge.6.link\"\r\n      ],\r\n      \"targets\": [\r\n       \"resource.15.start\"\r\n      ],\r\n      \"model\": {\r\n       \"provider\": \"default\",\r\n       \"tagName\": \"edge\",\r\n       \"kind\": \"edge\"\r\n      },\r\n      \"style\": {\r\n       \"startArrow\": false,\r\n       \"endArrow\": true\r\n      }\r\n     },\r\n     {\r\n      \"id\": \"edge.12\",\r\n      \"sources\": [\r\n       \"resource.14.finish\"\r\n      ],\r\n      \"targets\": [\r\n       \"resource.16.start\"\r\n      ],\r\n      \"model\": {\r\n       \"provider\": \"default\",\r\n       \"tagName\": \"edge\",\r\n       \"kind\": \"edge\"\r\n      },\r\n      \"style\": {\r\n       \"startArrow\": false,\r\n       \"endArrow\": true\r\n      }\r\n     },\r\n     {\r\n      \"id\": \"edge.13\",\r\n      \"sources\": [\r\n       \"resource.15.finish\"\r\n      ],\r\n      \"targets\": [\r\n       \"resource.16.start\"\r\n      ],\r\n      \"model\": {\r\n       \"provider\": \"default\",\r\n       \"tagName\": \"edge\",\r\n       \"kind\": \"edge\"\r\n      },\r\n      \"style\": {\r\n       \"startArrow\": false,\r\n       \"endArrow\": true\r\n      }\r\n     },\r\n     {\r\n      \"id\": \"edge.14\",\r\n      \"sources\": [\r\n       \"resource.16.finish\"\r\n      ],\r\n      \"targets\": [\r\n       \"sequence.17.finish.port\"\r\n      ],\r\n      \"model\": {\r\n       \"provider\": \"default\",\r\n       \"tagName\": \"edge\",\r\n       \"kind\": \"edge\"\r\n      },\r\n      \"style\": {\r\n       \"startArrow\": false,\r\n       \"endArrow\": true\r\n      }\r\n     }\r\n    ]\r\n   }\r\n  ]\r\n };","import './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport 'es6-promise/auto';  // polyfill Promise on IE\r\n\r\nimport * as diagram from './preview/diagram';\r\n\r\nimport { sample } from './sample.js';\r\n\r\nconst contentPane = document.getElementById('root');\r\nconst selectElt: HTMLSelectElement = (document.getElementById('select') as HTMLSelectElement);\r\nconst minimapContainer = document.getElementById('mini-map');\r\nminimapContainer?.setAttribute('class', 'minimap-container');\r\n\r\nconst renderer = diagram.createElkX6Renderer(contentPane, minimapContainer);\r\n\r\nfunction resizeWindow() {\r\n\r\n  renderer.graph.resize(\r\n    window.document.documentElement.clientWidth,\r\n    window.document.documentElement.clientHeight - selectElt.offsetHeight\r\n  );\r\n\r\n  renderer.graph.centerContent();\r\n  renderer.graph.zoomToFit({ padding: 8 });\r\n  console.log('onresize');\r\n}\r\n\r\nlet listener: any = null;\r\nlet curParams: any = null;\r\nfunction updateSelection(params: any) {\r\n  let curSelection = null;\r\n  if (curParams !== null && curParams.key === params.key) {\r\n    // Find current selection\r\n    curSelection = selectElt?.value;\r\n  }\r\n\r\n  //CurrentSelection has been removed\r\n  if (curSelection !== null && !params.values.has(curSelection)) {\r\n    curSelection = null;\r\n  }\r\n\r\n  curParams = params;\r\n  // Populate select component from list of samples\r\n  // Recreate flow options\r\n  while (selectElt?.firstChild) {\r\n    selectElt.firstChild.remove();\r\n  }\r\n\r\n  params.values.forEach((value: any, key: any) => {\r\n    let opt = document.createElement('option');\r\n    opt.value = key;\r\n    opt.text = params.key + ' - ' + key;\r\n    selectElt?.add(opt);\r\n  });\r\n\r\n  if (listener != null) {\r\n    selectElt?.removeEventListener('change', listener);\r\n    listener = null;\r\n  }\r\n\r\n  // Display flow\r\n  // Update flow when the selection changes \r\n  if (listener == null) {\r\n    listener = (event: Event) => {\r\n      const result = params.values.get((event.target as any).value);\r\n      renderer.render(result);\r\n    };\r\n    selectElt?.addEventListener('change', listener);\r\n  }\r\n  //selectElt.options[0].selected = true;\r\n  selectElt.value = curSelection !== null ? curSelection : selectElt.options[0].value;\r\n  selectElt.dispatchEvent(new Event('change'));\r\n\r\n}\r\n\r\nconst messageCallbackFn = function (event: any) {\r\n  if (event.data.jsonrpc !== undefined) {\r\n    console.log('event => ' + event.data.method);\r\n    if (event.data.method === 'view.update') {\r\n      // Convert entries array to map\r\n      renderer.render(event.data.params);\r\n    } else if (event.data.method === 'selection.update') {\r\n      // Convert entries array to map\r\n      updateSelection(event.data.params);\r\n    }\r\n  }\r\n};\r\n\r\nwindow.addEventListener('message', (event) => {\r\n  if (event.origin !== window.location.origin) {\r\n    //return;\r\n  }\r\n  console.log('=> Window.onmessage' + event);\r\n  messageCallbackFn(event);\r\n\r\n}, false);\r\n\r\n\r\nwindow.addEventListener('resize', resizeWindow);\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\nrenderer.render(sample);\r\n\r\n"],"sourceRoot":""}